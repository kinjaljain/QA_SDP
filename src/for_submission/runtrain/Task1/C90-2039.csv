Citance Number,Reference Article,Citing Article,Citation Marker Offset,Citation Marker,Citation Offset,Citation Text,Citation Text Clean,Reference Offset,Reference Text,Discourse Facet
1,C90-2039,P99-1061,['48'],"Kogure, 1990",['48'],dummy,dummy,'23',"<S ssid=""1"" sid=""23"">Copying sharable parts is called redundant copying.</S>",['implicationcitation']
2,C90-2039,C90-3046,['102'],6,"['102','103']",dummy,dummy,"'0','51'","<S ssid=""1"" sid=""0"">Strategic Lazy Incremental Copy Graph Unification</S><S ssid=""1"" sid=""51"">This method is called the strategic ij!~crementaI copy graph unification method (the SING unification method).</S>","['aimcitation', 'methodcitation']"
3,C90-2039,P91-1031,['49'],1990,['49'],dummy,dummy,"'139','20'","<S ssid=""1"" sid=""139"">In Section 5, a method which uses this generalized strategy is proposed.</S><S ssid=""1"" sid=""20"">Ile proposed an incremental copy graph unification method to avoid over copying and early copying.</S>",['implicationcitation']
4,C90-2039,P91-1031,['62'],Kogure 1990,['62'],dummy,dummy,,,"['implicationcitation', 'resultcitation']"
5,C90-2039,E93-1008,['49'],"Kogure, 1990",['49'],dummy,dummy,"'23','40','141','19'","<S ssid=""1"" sid=""23"">Copying sharable parts is called redundant copying.</S><S ssid=""1"" sid=""40"">This method achieves structure sharing by introducing lazy copying to Wroblewski's incremental copy graph unification method.</S><S ssid=""1"" sid=""141"">5 disables structure sharing, ttowever, this whole copying is not necessary if a lazy evaluation method is used.</S><S ssid=""1"" sid=""19"">Wroblewski claims that copying is wrong when an algorithm copies too much (over copying) or copies too soon (early copying).</S>",['methodcitation']
6,C90-2039,C92-2068,['21'],"Kogure, 1990",['21'],dummy,dummy,'204',"<S ssid=""1"" sid=""204"">Structure sharing avoids memory wastage'.</S>","['implicationcitation', 'methodcitation']"
7,C90-2039,P91-1041,['16'],"Kogure, 1990",['16'],dummy,dummy,"'14','49'","<S ssid=""1"" sid=""14"">Japanese analysis system based on llPSG[Kogure 891 uses 90% - 98% of the elapsed time in FS unification.</S><S ssid=""1"" sid=""49"">In this paper, some of the efficiency of the procedure- based system is introduced into an FS unification-based system.</S>",['implicationcitation']
8,C90-2039,P91-1041,['230'],"Kogure, 1990",['230'],dummy,dummy,,,"['implicationcitation', 'resultcitation']"
9,C90-2039,C94-2143,['56'],"Kogure, 1990",['56'],dummy,dummy,"'20','23','35','31','19'","<S ssid=""1"" sid=""20"">Ile proposed an incremental copy graph unification method to avoid over copying and early copying.</S><S ssid=""1"" sid=""23"">Copying sharable parts is called redundant copying.</S><S ssid=""1"" sid=""35"">Therefore, Pereira's method needs relatively few new structures when two input FSs are difference in size and which input is larger are known before unification.</S><S ssid=""1"" sid=""31"">Pereira's structure sharing FS unification method can avoid this problem.</S><S ssid=""1"" sid=""19"">Wroblewski claims that copying is wrong when an algorithm copies too much (over copying) or copies too soon (early copying).</S>",['methodcitation']
10,C90-2039,C94-2143,['69'],"Kogure, 1990",['69'],dummy,dummy,"'0','202','20','144','1'","<S ssid=""1"" sid=""0"">Strategic Lazy Incremental Copy Graph Unification</S><S ssid=""1"" sid=""202"">The strategic lazy incremental copy graph (SLING) unification method combines two incremental copy graph unification methods: the lazy incremental copy graph (LING) unification method and the strategic incremental copy graph (SING) unification method.</S><S ssid=""1"" sid=""20"">Ile proposed an incremental copy graph unification method to avoid over copying and early copying.</S><S ssid=""1"" sid=""144"">To achieve this, I, he LING unification method, which uses copy dependency information, was developed.</S><S ssid=""1"" sid=""1"">The strategic lazy incremental copy graph unification method is a combination of two methods for unifying hmture structures.</S>",['aimcitation']
11,C90-2039,P91-1042,['37'],Kogure 90,['37'],dummy,dummy,"'24','23','20','31','51'","<S ssid=""1"" sid=""24"">A better method would nfinimize the copying of sharable varts.</S><S ssid=""1"" sid=""23"">Copying sharable parts is called redundant copying.</S><S ssid=""1"" sid=""20"">Ile proposed an incremental copy graph unification method to avoid over copying and early copying.</S><S ssid=""1"" sid=""31"">Pereira's structure sharing FS unification method can avoid this problem.</S><S ssid=""1"" sid=""51"">This method is called the strategic ij!~crementaI copy graph unification method (the SING unification method).</S>",['methodcitation']
12,C90-2039,P91-1042,['116'],Kogure 90,"['116','117','118','124']",dummy,dummy,'175',"<S ssid=""1"" sid=""175"">ENDPROCEDURE Figure 7: The revised CopyNode procedure has the disadvantage of treating copy dependency information.</S>",['aimcitation']
13,C90-2039,W97-1503,['136'],"Kogure, 1990",['136'],dummy,dummy,,,"['implicationcitation', 'resultcitation']"
