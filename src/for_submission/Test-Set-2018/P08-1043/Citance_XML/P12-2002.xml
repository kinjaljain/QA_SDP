<PAPER>
  <S sid="0">Joint Evaluation of Morphological Segmentation and Syntactic Parsing</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present novel metrics for parse evaluation in joint segmentation and parsing scenarios where the gold sequence of terminals is not known in advance.</S>
    <S sid="2" ssid="2">The protocol uses distance-based metrics defined for the space of trees over lattices.</S>
    <S sid="3" ssid="3">Our metrics allow us to precisely quantify the performance gap between non-realistic parsing scenarios (assuming gold segmented and tagged input) and realistic ones (not assuming gold segmentation and tags).</S>
    <S sid="4" ssid="4">Our evaluation of segmentation and parsing for Modern Hebrew sheds new light on the performance of the best parsing systems to date in the different scenarios.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">A parser takes a sentence in natural language as input and returns a syntactic parse tree representing the sentence&#8217;s human-perceived interpretation.</S>
    <S sid="6" ssid="2">Current state-of-the-art parsers assume that the spacedelimited words in the input are the basic units of syntactic analysis.</S>
    <S sid="7" ssid="3">Standard evaluation procedures and metrics (Black et al., 1991; Buchholz and Marsi, 2006) accordingly assume that the yield of the parse tree is known in advance.</S>
    <S sid="8" ssid="4">This assumption breaks down when parsing morphologically rich languages (Tsarfaty et al., 2010), where every space-delimited word may be effectively composed of multiple morphemes, each of which having a distinct role in the syntactic parse tree.</S>
    <S sid="9" ssid="5">In order to parse such input the text needs to undergo morphological segmentation, that is, identifying the morphological segments of each word and assigning the corresponding part-ofspeech (PoS) tags to them.</S>
    <S sid="10" ssid="6">Morphologically complex words may be highly ambiguous and in order to segment them correctly their analysis has to be disambiguated.</S>
    <S sid="11" ssid="7">The multiple morphological analyses of input words may be represented via a lattice that encodes the different segmentation possibilities of the entire word sequence.</S>
    <S sid="12" ssid="8">One can either select a segmentation path prior to parsing, or, as has been recently argued, one can let the parser pick a segmentation jointly with decoding (Tsarfaty, 2006; Cohen and Smith, 2007; Goldberg and Tsarfaty, 2008; Green and Manning, 2010).</S>
    <S sid="13" ssid="9">If the selected segmentation is different from the gold segmentation, the gold and parse trees are rendered incomparable and standard evaluation metrics break down.</S>
    <S sid="14" ssid="10">Evaluation scenarios restricted to gold input are often used to bypass this problem, but, as shall be seen shortly, they present an overly optimistic upperbound on parser performance.</S>
    <S sid="15" ssid="11">This paper presents a full treatment of evaluation in different parsing scenarios, using distance-based measures defined for trees over a shared common denominator defined in terms of a lattice structure.</S>
    <S sid="16" ssid="12">We demonstrate the informativeness of our metrics by evaluating joint segmentation and parsing performance for the Semitic language Modern Hebrew, using the best performing systems, both constituencybased and dependency-based (Tsarfaty, 2010; Goldberg, 2011a).</S>
    <S sid="17" ssid="13">Our experiments demonstrate that, for all parsers, significant performance gaps between realistic and non-realistic scenarios crucially depend on the kind of information initially provided to the parser.</S>
    <S sid="18" ssid="14">The tool and metrics that we provide are completely general and can straightforwardly apply to other languages, treebanks and different tasks.</S>
  </SECTION>
  <SECTION title="2 The Challenge: Evaluation for MRLs" number="2">
    <S sid="19" ssid="1">In morphologically rich languages (MRLs) substantial information about the grammatical relations between entities is expressed at word level using inflectional affixes.</S>
    <S sid="20" ssid="2">In particular, in MRLs such as Hebrew, Arabic, Turkish or Maltese, elements such as determiners, definite articles and conjunction markers appear as affixes that are appended to an openclass word.</S>
    <S sid="21" ssid="3">Take, for example the Hebrew wordtoken BCLM,1 which means &#8220;in their shadow&#8221;.</S>
    <S sid="22" ssid="4">This word corresponds to five distinctly tagged elements: B (&#8220;in&#8221;/IN), H (&#8220;the&#8221;/DEF), CL (&#8220;shadow&#8221;/NN), FL (&#8221;of&#8221;/POSS), HM (&#8221;they&#8221;/PRN).</S>
    <S sid="23" ssid="5">Note that morphological segmentation is not the inverse of concatenation.</S>
    <S sid="24" ssid="6">For instance, the overt definite article H and the possessor FL show up only in the analysis.</S>
    <S sid="25" ssid="7">The correct parse for the Hebrew phrase &#8220;BCLM HNEIM&#8221; is shown in Figure 1 (tree1), and it presupposes that these segments can be identified and assigned the correct PoS tags.</S>
    <S sid="26" ssid="8">However, morphological segmentation is non-trivial due to massive wordlevel ambiguity.</S>
    <S sid="27" ssid="9">The word BCLM, for instance, can be segmented into the noun BCL (&#8220;onion&#8221;) and M (a genitive suffix, &#8220;of them&#8221;), or into the prefix B (&#8220;in&#8221;) followed by the noun CLM (&#8220;image&#8221;).2 The multitude of morphological analyses may be encoded in a lattice structure, as illustrated in Figure 2.</S>
    <S sid="28" ssid="10">In practice, a statistical component is required to decide on the correct morphological segmentation, that is, to pick out the correct path through the lattice.</S>
    <S sid="29" ssid="11">This may be done based on linear local context (Adler and Elhadad, 2006; Shacham and Wintner, 2007; Bar-haim et al., 2008; Habash and Rambow, 2005), or jointly with parsing (Tsarfaty, 2006; Goldberg and Tsarfaty, 2008; Green and Manning, 2010).</S>
    <S sid="30" ssid="12">Either way, an incorrect morphological segmentation hypothesis introduces errors into the parse hypothesis, ultimately providing a parse tree which spans a different yield than the gold terminals.</S>
    <S sid="31" ssid="13">In such cases, existing evaluation metrics break down.</S>
    <S sid="32" ssid="14">To understand why, consider the trees in Figure 1.</S>
    <S sid="33" ssid="15">Metrics like PARSEVAL (Black et al., 1991) calculate the harmonic means of precision and recall on labeled spans (i, label, j) where i, j are terminal boundaries.</S>
    <S sid="34" ssid="16">Now, the NP dominating &#8220;shadow of them&#8221; has been identified and labeled correctly in tree2, but in tree1 it spans (2, NP, 5) and in tree2 it spans (1, NP, 4).</S>
    <S sid="35" ssid="17">This node will then be counted as an error for tree2, along with its dominated and dominating structure, and PARSEVAL will score 0.</S>
    <S sid="36" ssid="18">A generalized version of PARSEVAL which considers i, j character-based indices instead of terminal boundaries (Tsarfaty, 2006) will fail here too, since the missing overt definite article H will cause similar misalignments.</S>
    <S sid="37" ssid="19">Metrics for dependencybased evaluation such as ATTACHMENT SCORES (Buchholz and Marsi, 2006) suffer from similar problems, since they assume that both trees have the same nodes &#8212; an assumption that breaks down in the case of incorrect morphological segmentation.</S>
    <S sid="38" ssid="20">Although great advances have been made in parsing MRLs in recent years, this evaluation challenge remained unsolved.3 In this paper we present a solution to this challenge by extending TEDEVAL (Tsarfaty et al., 2011) for handling trees over lattices.</S>
  </SECTION>
  <SECTION title="3 The Proposal: Distance-Based Metrics" number="3">
    <S sid="39" ssid="1">Input and Output Spaces We view the joint task as a structured prediction function h : X &#8594; Y from input space X onto output space Y.</S>
    <S sid="40" ssid="2">Each element x &#8712; X is a sequence x = w1, ... , wn of spacedelimited words from a set W. We assume a lexicon LEX, distinct from W, containing pairs of segments drawn from a set T of terminals and PoS categories drawn from a set N of nonterminals.</S>
    <S sid="41" ssid="3">LEX = {hs, pi|s &#8712; T , p &#8712; N} Each word wi in the input may admit multiple morphological analyses, constrained by a languagespecific morphological analyzer MA.</S>
    <S sid="42" ssid="4">The morphological analysis of an input word MA(wi) can be represented as a lattice Li in which every arc corresponds to a lexicon entry hs, pi.</S>
    <S sid="43" ssid="5">The morphological analysis of an input sentence x is then a lattice L obtained through the concatenation of the lattices L1, ... , Ln where MA(w1) = L1, ... , MA(wn) = Ln.</S>
    <S sid="44" ssid="6">Now, let x = w1, ... , wn be a sentence with a morphological analysis lattice MA(x) = L. We define the output space YMA(x)=L for h (abbreviated YL), as the set of linearly-ordered labeled trees such that the yield of LEX entries hs1, p1i,...,hsk,pki in each tree (where si &#8712; T and pi &#8712; N, and possibly k =6 n) corresponds to a path through the lattice L. Edit Scripts and Edit Costs We assume a set A={ADD(c, i, j),DEL(c, i, j),ADD(hs, pi, i, j), DEL(hs, pi, i, j)} of edit operations which can add or delete a labeled node c &#8712; N or an entry hs, pi &#8712; LEX which spans the states i, j in the lattice L. The operations in A are properly constrained by the lattice, that is, we can only add and delete lexemes that belong to LEX, and we can only add and delete them where they can occur in the lattice.</S>
    <S sid="45" ssid="7">We assume a function C(a) = 1 assigning a unit cost to every operation a &#8712; A, and define the cost of a sequence ha1, ... , ami as the sum of the costs of all operations in the sequence C(ha1, ..., ami) = Emi=1 C(ai).</S>
    <S sid="46" ssid="8">An edit script ES(y1, y2) = ha1, ... , ami is a sequence of operations that turns y1 into y2.</S>
    <S sid="47" ssid="9">The treeedit distance is the minimum cost of any edit script that turns y1 into y2 (Bille, 2005).</S>
    <S sid="48" ssid="10">Distance-Based Metrics The error of a predicted structure p with respect to a gold structure g is now taken to be the TED cost, and we can turn it into a score by normalizing it and subtracting from a unity: The term |p |+ |g |&#8722; 2 is a normalization factor defined in terms of the worst-case scenario, in which the parser has only made incorrect decisions.</S>
    <S sid="49" ssid="11">We would need to delete all lexemes and nodes in p and add all the lexemes and nodes of g, except for roots.</S>
    <S sid="50" ssid="12">An Example Both trees in Figure 1 are contained in YL for the lattice L in Figure 2.</S>
    <S sid="51" ssid="13">If we replace terminal boundaries with lattice indices from Figure 2, we need 6 edit operations to turn tree2 into tree1 (deleting the nodes in italic, adding the nodes in bold) and the evaluation score will be</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="52" ssid="1">We aim to evaluate state-of-the-art parsing architectures on the morphosyntactic disambiguation of Hebrew texts in three different parsing scenarios: (i) Gold: assuming gold segmentation and PoS-tags, (ii) Predicted: assuming only gold segmentation, and (iii) Raw: assuming unanalyzed input text.</S>
    <S sid="53" ssid="2">For constituency-based parsing we use two models trained by the Berkeley parser (Petrov et al., 2006) one on phrase-structure (PS) trees and one on relational-realizational (RR) trees (Tsarfaty and Sima&#8217;an, 2008).</S>
    <S sid="54" ssid="3">In the raw scenario we let a latticebased parser choose its own segmentation and tags (Goldberg, 2011b).</S>
    <S sid="55" ssid="4">For dependency parsing we use MaltParser (Nivre et al., 2007b) optimized for Hebrew by Ballesteros and Nivre (2012), and the EasyFirst parser of Goldberg and Elhadad (2010) with the features therein.</S>
    <S sid="56" ssid="5">Since these parsers cannot choose their own tags, automatically predicted segments and tags are provided by Adler and Elhadad (2006).</S>
    <S sid="57" ssid="6">We use the standard split of the Hebrew treebank (Sima&#8217;an et al., 2001) and its conversion into unlabeled dependencies (Goldberg, 2011a).</S>
    <S sid="58" ssid="7">We use PARSEVAL for evaluating phrase-structure trees, ATTACHSCORES for evaluating dependency trees, and TEDEVAL for evaluating all trees in all scenarios.</S>
    <S sid="59" ssid="8">We implement SEGEVAL for evaluating segmentation based on our TEDEVAL implementation, replacing the tree distance and size with string terms.</S>
    <S sid="60" ssid="9">Table 1 shows the constituency-based parsing results for all scenarios.</S>
    <S sid="61" ssid="10">All of our results confirm that gold information leads to much higher scores.</S>
    <S sid="62" ssid="11">TEDEVAL allows us to precisely quantify the drop in accuracy from gold to predicted (as in PARSEVAL) and than from predicted to raw on a single scale.</S>
    <S sid="63" ssid="12">TEDEVAL further allows us to scrutinize the contribution of different sorts of information.</S>
    <S sid="64" ssid="13">Unlabeled TEDEVAL shows a greater drop when moving from predicted to raw than from gold to predicted, and for labeled TEDEVAL it is the other way round.</S>
    <S sid="65" ssid="14">This demonstrates the great importance of gold tags which provide morphologically disambiguated information for identifying phrase content.</S>
    <S sid="66" ssid="15">Table 2 shows that dependency parsing results confirm the same trends, but we see a much smaller drop when moving from gold to predicted.</S>
    <S sid="67" ssid="16">This is due to the fact that we train the parsers for predicted on a treebank containing predicted tags.</S>
    <S sid="68" ssid="17">There is however a great drop when moving from predicted to raw, which confirms that evaluation benchmarks on gold input as in Nivre et al. (2007a) do not provide a realistic indication of parser performance.</S>
    <S sid="69" ssid="18">For all tables, TEDEVAL results are on a similar scale.</S>
    <S sid="70" ssid="19">However, results are not yet comparable across parsers.</S>
    <S sid="71" ssid="20">RR trees are flatter than bare-bone PS trees.</S>
    <S sid="72" ssid="21">PS and DEP trees have different label sets.</S>
    <S sid="73" ssid="22">Cross-framework evaluation may be conducted by combining this metric with the cross-framework protocol of Tsarfaty et al. (2012).</S>
  </SECTION>
  <SECTION title="5 Conclusion" number="5">
    <S sid="74" ssid="1">We presented distance-based metrics defined for trees over lattices and applied them to evaluating parsers on joint morphological and syntactic disambiguation.</S>
    <S sid="75" ssid="2">Our contribution is both technical, providing an evaluation tool that can be straightforwardly applied for parsing scenarios involving trees over lattices,4 and methodological, suggesting to evaluate parsers in all possible scenarios in order to get a realistic indication of parser performance.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="6">
    <S sid="76" ssid="1">We thank Shay Cohen, Yoav Goldberg and Spence Green for discussion of this challenge.</S>
    <S sid="77" ssid="2">This work was supported by the Swedish Science Council.</S>
  </SECTION>
</PAPER>
