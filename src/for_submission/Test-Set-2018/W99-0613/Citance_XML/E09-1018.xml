<PAPER>
  <S sid="0">EM Works for Pronoun Anaphora Resolution</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present an algorithm for pronounanaphora (in English) that uses Expectation Maximization (EM) to learn virtually all of its parameters in an unsupervised fashion.</S>
    <S sid="2" ssid="2">While EM frequently fails to find good models for the tasks to which it is set, in this case it works quite well.</S>
    <S sid="3" ssid="3">We have compared it to several systems available on the web (all we have found so far).</S>
    <S sid="4" ssid="4">Our program significantly outperforms all of them.</S>
    <S sid="5" ssid="5">The algorithm is fast and robust, and has been made publically available for downloading.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">We present a new system for resolving (personal) pronoun anaphora1.</S>
    <S sid="7" ssid="2">We believe it is of interest for two reasons.</S>
    <S sid="8" ssid="3">First, virtually all of its parameters are learned via the expectationmaximization algorithm (EM).</S>
    <S sid="9" ssid="4">While EM has worked quite well for a few tasks, notably machine translations (starting with the IBM models 1-5 (Brown et al., 1993), it has not had success in most others, such as part-of-speech tagging (Merialdo, 1991), named-entity recognition (Collins and Singer, 1999) and context-free-grammar induction (numerous attempts, too many to mention).</S>
    <S sid="10" ssid="5">Thus understanding the abilities and limitations of EM is very much a topic of interest.</S>
    <S sid="11" ssid="6">We present this work as a positive data-point in this ongoing discussion.</S>
    <S sid="12" ssid="7">Secondly, and perhaps more importantly, is the system&#8217;s performance.</S>
    <S sid="13" ssid="8">Remarkably, there are very few systems for actually doing pronoun anaphora available on the web.</S>
    <S sid="14" ssid="9">By emailing the corporalist the other members of the list pointed us to four.</S>
    <S sid="15" ssid="10">We present a head to head evaluation and find that our performance is significantly better than the competition.</S>
  </SECTION>
  <SECTION title="2 Previous Work" number="2">
    <S sid="16" ssid="1">The literature on pronominal anaphora is quite large, and we cannot hope to do justice to it here.</S>
    <S sid="17" ssid="2">Rather we limit ourselves to particular papers and systems that have had the greatest impact on, and similarity to, ours.</S>
    <S sid="18" ssid="3">Probably the closest approach to our own is Cherry and Bergsma (2005), which also presents an EM approach to pronoun resolution, and obtains quite successful results.</S>
    <S sid="19" ssid="4">Our work improves upon theirs in several dimensions.</S>
    <S sid="20" ssid="5">Firstly, they do not distinguish antecedents of non-reflexive pronouns based on syntax (for instance, subjects and objects).</S>
    <S sid="21" ssid="6">Both previous work (cf.</S>
    <S sid="22" ssid="7">Tetreault (2001) discussed below) and our present results find these distinctions extremely helpful.</S>
    <S sid="23" ssid="8">Secondly, their system relies on a separate preprocessing stage to classify non-anaphoric pronouns, and mark the gender of certain NPs (Mr., Mrs. and some first names).</S>
    <S sid="24" ssid="9">This allows the incorporation of external data and learning systems, but conversely, it requires these decisions to be made sequentially.</S>
    <S sid="25" ssid="10">Our system classifies non-anaphoric pronouns jointly, and learns gender without an external database.</S>
    <S sid="26" ssid="11">Next, they only handle thirdperson pronouns, while we handle first and second as well.</S>
    <S sid="27" ssid="12">Finally, as a demonstration of EM&#8217;s capabilities, its evidence is equivocal.</S>
    <S sid="28" ssid="13">Their EM requires careful initialization &#8212; sufficiently careful that the EM version only performs 0.4% better than the initialized program alone.</S>
    <S sid="29" ssid="14">(We can say nothing about relative performance of their system vs. ours since we have been able to access neither their data nor code.)</S>
    <S sid="30" ssid="15">A quite different unsupervised approach is Kehler et al. (2004a), which uses self-training of a discriminative system, initialized with some conservative number and gender heuristics.</S>
    <S sid="31" ssid="16">The system uses the conventional ranking approach, applying a maximum-entropy classifier to pairs of pronoun and potential antecedent and selecting the best antecedent.</S>
    <S sid="32" ssid="17">In each iteration of self-training, the system labels the training corpus and its decisions are treated as input for the next training phase.</S>
    <S sid="33" ssid="18">The system improves substantially over a Hobbs baseline.</S>
    <S sid="34" ssid="19">In comparison to ours, their feature set is quite similar, while their learning approach is rather different.</S>
    <S sid="35" ssid="20">In addition, their system does not classify non-anaphoric pronouns, A third paper that has significantly influenced our work is that of (Haghighi and Klein, 2007).</S>
    <S sid="36" ssid="21">This is the first paper to treat all noun phrase (NP) anaphora using a generative model.</S>
    <S sid="37" ssid="22">The success they achieve directly inspired our work.</S>
    <S sid="38" ssid="23">There are, however, many differences between their approach and ours.</S>
    <S sid="39" ssid="24">The most obvious is our use of EM rather than theirs of Gibbs sampling.</S>
    <S sid="40" ssid="25">However, the most important difference is the choice of training data.</S>
    <S sid="41" ssid="26">In our case it is a very large corpus of parsed, but otherwise unannotated text.</S>
    <S sid="42" ssid="27">Their system is trained on the ACE corpus, and requires explicit annotation of all &#8220;markables&#8221; &#8212; things that are or have antecedents.</S>
    <S sid="43" ssid="28">For pronouns, only anaphoric pronouns are so marked.</S>
    <S sid="44" ssid="29">Thus the system does not learn to recognize non-anaphoric pronouns &#8212; a significant problem.</S>
    <S sid="45" ssid="30">More generally it follows from this that the system only works (or at least works with the accuracy they achieve) when the input data is so marked.</S>
    <S sid="46" ssid="31">These markings not only render the non-anaphoric pronoun situation moot, but also significantly restrict the choice of possible antecedent.</S>
    <S sid="47" ssid="32">Only perhaps one in four or five NPs are markable (Poesio and Vieira, 1998).</S>
    <S sid="48" ssid="33">There are also several papers which treat coference as an unsupervised clustering problem (Cardie and Wagstaff, 1999; Angheluta et al., 2004).</S>
    <S sid="49" ssid="34">In this literature there is no generative model at all, and thus this work is only loosely connected to the above models.</S>
    <S sid="50" ssid="35">Another key paper is (Ge et al., 1998).</S>
    <S sid="51" ssid="36">The data annotated for the Ge research is used here for testing and development data.</S>
    <S sid="52" ssid="37">Also, there are many overlaps between their formulation of the problem and ours.</S>
    <S sid="53" ssid="38">For one thing, their model is generative, although they do not note this fact, and (with the partial exception we are about to mention) they obtain their probabilities from hand annotated data rather than using EM.</S>
    <S sid="54" ssid="39">Lastly, they learn their gender information (the probability of that a pronoun will have a particular gender given its antecedent) using a truncated EM procedure.</S>
    <S sid="55" ssid="40">Once they have derived all of the other parameters from the training data, they go through a larger corpus of unlabeled data collecting estimated counts of how often each word generates a pronoun of a particular gender.</S>
    <S sid="56" ssid="41">They then normalize these probabilities and the result is used in the final program.</S>
    <S sid="57" ssid="42">This is, in fact, a single iteration of EM.</S>
    <S sid="58" ssid="43">Tetreault (2001) is one of the few papers that use the (Ge et al., 1998) corpus used here.</S>
    <S sid="59" ssid="44">They achieve a very high 80% correct, but this is given hand-annotated number, gender and syntactic binding features to filter candidate antecedents and also ignores non-anaphoric pronouns.</S>
    <S sid="60" ssid="45">We defer discussion of the systems against which we were able to compare to Section 7 on evaluation.</S>
  </SECTION>
  <SECTION title="3 Pronouns" number="3">
    <S sid="61" ssid="1">We briefly review English pronouns and their properties.</S>
    <S sid="62" ssid="2">First we only concern ourselves with &#8220;personal&#8221; pronouns: &#8220;I&#8221;, &#8220;you&#8221;, &#8220;he&#8221;, &#8220;she&#8221;, &#8220;it&#8221;, and their variants.</S>
    <S sid="63" ssid="3">We ignore, e.g., relative pronouns (&#8220;who&#8221;, &#8220;which&#8221;, etc.</S>
    <S sid="64" ssid="4">), deictic pronouns (&#8220;this&#8221;, &#8220;that&#8221;) and others.</S>
    <S sid="65" ssid="5">Personal pronouns come in four basic types: subject &#8220;I&#8221;, &#8220;she&#8221;, etc.</S>
    <S sid="66" ssid="6">Used in subject position. object &#8220;me&#8221;, &#8220;her&#8221; etc.</S>
    <S sid="67" ssid="7">Used in non-subject position. possessive &#8220;my&#8221; &#8220;her&#8221;, and reflexive &#8220;myself&#8221;, &#8220;herself&#8221; etc.</S>
    <S sid="68" ssid="8">Required by English grammar in certain constructions &#8212; e.g., &#8220;I kicked myself.&#8221; The system described here handles all of these cases.</S>
    <S sid="69" ssid="9">Note that the type of a pronoun is not connected with its antecedent, but rather is completely determined by the role it plays in it&#8217;s sentence.</S>
    <S sid="70" ssid="10">Personal pronouns are either anaphoric or nonanaphoric.</S>
    <S sid="71" ssid="11">We say that a pronoun is anaphoric when it is coreferent with another piece of text in the same discourse.</S>
    <S sid="72" ssid="12">As is standard in the field we distinguish between a referent and an antecedent.</S>
    <S sid="73" ssid="13">The referent is the thing in the world that the pronoun, or, more generally, noun phrase (NP), denotes.</S>
    <S sid="74" ssid="14">Anaphora on the other hand is a relation between pieces of text.</S>
    <S sid="75" ssid="15">It follows from this that nonanaphoric pronouns come in two basic varieties &#8212; some have a referent, but because the referent is not mentioned in the text2 there is no anaphoric relation to other text.</S>
    <S sid="76" ssid="16">Others have no referent (expletive or pleonastic pronouns, as in &#8220;It seems that ... &#8221;).</S>
    <S sid="77" ssid="17">For the purposes of this article we do not distinguish the two.</S>
    <S sid="78" ssid="18">Personal pronouns have three properties other than their type: gender masculine (&#8220;he&#8221;), feminine (&#8220;she&#8221;) or neuter (&#8220;they&#8221;).</S>
    <S sid="79" ssid="19">These are critical because it is these properties that our generative model generates.</S>
  </SECTION>
  <SECTION title="4 The Generative Model" number="4">
    <S sid="80" ssid="1">Our generative model ignores the generation of most of the discourse, only generating a pronoun&#8217;s person, number,and gender features along with the governor of the pronoun and the syntactic relation between the pronoun and the governor.</S>
    <S sid="81" ssid="2">(Informally, a word&#8217;s governor is the head of the phrase above it.</S>
    <S sid="82" ssid="3">So the governor of both &#8220;I&#8221; and &#8220;her&#8221; in &#8220;I saw her&#8221; is &#8220;saw&#8221;.</S>
    <S sid="83" ssid="4">We first decide if the pronoun is anaphoric based upon a distribution p(anaphoric).</S>
    <S sid="84" ssid="5">(Actually this is a bit more complex, see the discussion in Section 5.3.)</S>
    <S sid="85" ssid="6">If the pronoun is anaphoric we then select a possible antecedent.</S>
    <S sid="86" ssid="7">Any NP in the current or two previous sentences is considered.</S>
    <S sid="87" ssid="8">We select the antecedent based upon a distribution p(anaphora|context).</S>
    <S sid="88" ssid="9">The nature of the &#8220;context&#8221; is discussed below.</S>
    <S sid="89" ssid="10">Then given the antecedent we generative the pronoun&#8217;s person according to p(person|antecedent), the pronoun&#8217;s gender according to p(gender|antecedent), number, p(number|antecedent) and governor/relationto-governor from p(governor/relation|antecedent).</S>
    <S sid="90" ssid="11">To generate a non-anaphoric third person singular &#8220;it&#8221; we first guess that the non-anaphoric pronouns is &#8220;it&#8221; according to p(&#8220;it&#8221;|non-anaphoric).</S>
    <S sid="91" ssid="12">2Actually, as in most previous work, we only consider referents realized by NPs.</S>
    <S sid="92" ssid="13">For more general approaches see Byron (2002). and then generate the governor/relation according to p(governor/relation|non-anaphoric-it); Lastly we generate any other non-anaphoric pronouns and their governor with a fixed probability p(other).</S>
    <S sid="93" ssid="14">(Strictly speaking, this is mathematically invalid, since we do not bother to normalize over all the alternatives; a good topic for future research would be exploring what happens when we make this part of the model truly generative.)</S>
    <S sid="94" ssid="15">One inelegant part of the model is the need to scale the p(governor/rel|antecedent) probabilities.</S>
    <S sid="95" ssid="16">We smooth them using Kneser-Ney smoothing, but even then their dynamic range (a factor of 106) greatly exceeds those of the other parameters.</S>
    <S sid="96" ssid="17">Thus we take their nth root.</S>
    <S sid="97" ssid="18">This n is the last of the model parameters.</S>
  </SECTION>
  <SECTION title="5 Model Parameters" number="5">
    <S sid="98" ssid="1">All of our distributions start with uniform values.</S>
    <S sid="99" ssid="2">For example, gender distributions start with the probability of each gender equal to one-third.</S>
    <S sid="100" ssid="3">From this it follows that on the first EM iteration all antecedents will have the same probability of generating a pronoun.</S>
    <S sid="101" ssid="4">At first glance then, the EM process might seem to be futile.</S>
    <S sid="102" ssid="5">In this section we hope to give some intuitions as to why this is not the case.</S>
    <S sid="103" ssid="6">As is typically done in EM learning, we start the process with a much simpler generative model, use a few EM iterations to learn its parameters, and gradually expose the data to more and more complex models, and thus larger and larger sets of parameters.</S>
    <S sid="104" ssid="7">The first model only learns the probability of an antecedent generating the pronoun given what sentence it is in.</S>
    <S sid="105" ssid="8">We train this model through four iterations before moving on to more complex ones.</S>
    <S sid="106" ssid="9">As noted above, all antecedents initially have the same probability, but this is not true after the first iteration.</S>
    <S sid="107" ssid="10">To see how the probabilities diverge, and diverge correctly, consider the first sentence of a news article.</S>
    <S sid="108" ssid="11">Suppose it starts &#8220;President Bush announced that he ...&#8221; In this situation there is only one possible antecedent, so the expectation that &#8220;he&#8221; is generated by the NP in the same sentence is 1.0.</S>
    <S sid="109" ssid="12">Contrast this with the situation in the third and subsequent sentences.</S>
    <S sid="110" ssid="13">It is only then that we have expectation for sentences two back generating the pronoun.</S>
    <S sid="111" ssid="14">Furthermore, typically by this point there will be, say, twenty NPs to share the probability mass, so each one will only get an increase of 0.05.</S>
    <S sid="112" ssid="15">Thus on the first iteration only the first two sentences have the power to move the distributions, but they do, and they make NPs in the current sentence very slightly more likely to generate the pronoun than the sentence one back, which in turn is more likely than the ones two back.</S>
    <S sid="113" ssid="16">This slight imbalance is reflected when EM readjusts the probability distribution at the end of the first iteration.</S>
    <S sid="114" ssid="17">Thus for the second iteration everyone contributes to subsequent imbalances, because it is no longer the case the all antecedents are equally likely.</S>
    <S sid="115" ssid="18">Now the closer ones have higher probability so forth and so on.</S>
    <S sid="116" ssid="19">To take another example, consider how EM comes to assign gender to various words.</S>
    <S sid="117" ssid="20">By the time we start training the gender assignment probabilities the model has learned to prefer nearer antecedents as well as ones with other desirable properties.</S>
    <S sid="118" ssid="21">Now suppose we consider a sentence, the first half of which has no pronouns.</S>
    <S sid="119" ssid="22">Consider the gender of the NPs in this half.</S>
    <S sid="120" ssid="23">Given no further information we would expect these genders to distribute themselves accord to the prior probability that any NP will be masculine, feminine, etc.</S>
    <S sid="121" ssid="24">But suppose that the second half of the sentence has a feminine pronoun.</S>
    <S sid="122" ssid="25">Now the genders will be skewed with the probability of one of them being feminine being much larger.</S>
    <S sid="123" ssid="26">Thus in the same way these probabilities will be moved from equality, and should, in general be moved correctly.</S>
    <S sid="124" ssid="27">Virtually all model parameters are learned by EM.</S>
    <S sid="125" ssid="28">We use the parsed version of the North-American News Corpus.</S>
    <S sid="126" ssid="29">This is available from the (McClosky et al., 2008).</S>
    <S sid="127" ssid="30">It has about 800,000 articles, and 500,000,000 words.</S>
    <S sid="128" ssid="31">The least complicated parameter is the probability of gender given word.</S>
    <S sid="129" ssid="32">Most words that have a clear gender have this reflected in their probabilities.</S>
    <S sid="130" ssid="33">Some examples are shown in Table 1.</S>
    <S sid="131" ssid="34">We can see there that EM gets &#8220;Paul&#8221;, &#8220;Paula&#8221;, and &#8220;Wal-mart&#8221; correct.</S>
    <S sid="132" ssid="35">&#8220;Pig&#8221; has no obvious gender in English, and the probabilities reflect this.</S>
    <S sid="133" ssid="36">On the other hand &#8220;Piggy&#8221; gets feminine gender.</S>
    <S sid="134" ssid="37">This is no doubt because of &#8220;Miss Piggy&#8221; the puppet character.</S>
    <S sid="135" ssid="38">&#8220;Waist&#8221; the program gets wrong.</S>
    <S sid="136" ssid="39">Here the probabilities are close to gender-of-pronoun priors.</S>
    <S sid="137" ssid="40">This happens for a (comparatively small) class of pronouns that, in fact, are probably never an antecedent, but are nearby random pronouns.</S>
    <S sid="138" ssid="41">Because of their non-antecedent proclivities, this sort of mistake has little effect.</S>
    <S sid="139" ssid="42">Next consider p(numberlantecedent), that is the probability that a given antecedent will generate a singular or plural pronoun.</S>
    <S sid="140" ssid="43">This is shown in Table 2.</S>
    <S sid="141" ssid="44">Since we are dealing with parsed text, we have the antecedent&#8217;s part-of-speech, so rather than the antecedent we get the number from the part of speech: &#8220;NN&#8221; and &#8220;NNP&#8221; are singular, &#8220;NNS&#8221; and &#8220;NNPS&#8221; are plural.</S>
    <S sid="142" ssid="45">Lastly, we have the probability that an antecedent which is not a noun will have a singular pronoun associated with it.</S>
    <S sid="143" ssid="46">Note that the probability that a singular antecedent will generate a singular pronoun is not one.</S>
    <S sid="144" ssid="47">This is correct, although the exact number probably is too low.</S>
    <S sid="145" ssid="48">For example, &#8220;IBM&#8221; may be the antecedent of both &#8220;we&#8221; and &#8220;they&#8221;, and vice versa.</S>
    <S sid="146" ssid="49">Next we turn to p(person|antecedent), predicting whether the pronoun is first, second or third person given its antecedent.</S>
    <S sid="147" ssid="50">We simplify this by noting that we know the person of the antecedent (everything except &#8220;I&#8221; and &#8220;you&#8221; and their variants are third person), so we compute p(personjperson).</S>
    <S sid="148" ssid="51">Actually we condition on one further piece of information, if either the pronoun or the antecedent is being quoted.</S>
    <S sid="149" ssid="52">The idea is that an &#8220;I&#8221; in quoted material may be the same person as &#8220;John Doe&#8221; outside of quotes, if Mr. Doe is speaking.</S>
    <S sid="150" ssid="53">Indeed, EM picks up on this as is illustrated in Tables 3 and 4.</S>
    <S sid="151" ssid="54">The first gives the situation when neither antecedent nor pronoun is within a quotation.</S>
    <S sid="152" ssid="55">The high numbers along the diagonal (0.923, 0.885, and 0.967) show the expected like-goes-to-like preferences.</S>
    <S sid="153" ssid="56">Contrast this with Table 4 which gives the probabilities when the antecedent is in quotes but the pronoun is not.</S>
    <S sid="154" ssid="57">Here we see all antecedents being preferentially mapped to third person (0.889, 0.705, and 0.964).</S>
    <S sid="155" ssid="58">We save p(antecedent|context) till last because it is the most complicated.</S>
    <S sid="156" ssid="59">Given what we know about the context of the pronoun not all antecedent positions are equally likely.</S>
    <S sid="157" ssid="60">Some important conditioning events are: the antecedent when holding everything expect the stated feature of the antecedent constant ject and object pronouns may be anywhere.</S>
    <S sid="158" ssid="61">Possessives may be in previous sentences but this is not as common.</S>
    <S sid="159" ssid="62">&#8226; type of antecedent.</S>
    <S sid="160" ssid="63">Intuitively other pronouns and proper nouns are more likely to be antecedents than common nouns and NPs headed up by things other than nouns.</S>
    <S sid="161" ssid="64">All told this comes to 2592 parameters (3 sentences, 6 antecedent word positions, 3 syntactic positions, 4 pronoun positions, 3 pronoun types, and 4 antecedent types).</S>
    <S sid="162" ssid="65">It is impossible to say if EM is setting all of these correctly.</S>
    <S sid="163" ssid="66">There are too many of them and we do not have knowledge or intuitions about most all of them.</S>
    <S sid="164" ssid="67">However, all help performance on the development set, and we can look at a few where we do have strong intuitions.</S>
    <S sid="165" ssid="68">Table 5 gives some examples.</S>
    <S sid="166" ssid="69">The first two rows are devoted to the probabilities of particular kind of antecedent (pronouns, proper nouns, and common nouns) generating a pronoun, holding everything constant except the type of antecedent.</S>
    <S sid="167" ssid="70">The numbers are the geometric mean of the probabilities in each case.</S>
    <S sid="168" ssid="71">The probabilities are ordered according to, at least my, intuition with pronoun being the most likely (0.094), followed by proper nouns (0.057), followed by common nouns (0.032), a fact also noted by (Haghighi and Klein, 2007).</S>
    <S sid="169" ssid="72">When looking at the probabilities as a function of word position again the EM derived probabilities accord with intuition, with bin 0 (the closest) more likely than bin 2 more likely than bin 5.</S>
    <S sid="170" ssid="73">The last two lines have the only case where we have found the EM probability not in accord with our intuitions.</S>
    <S sid="171" ssid="74">We would have expected objects of verbs to be more likely to generate a pronoun than the catch-all &#8220;other&#8221; case.</S>
    <S sid="172" ssid="75">This proved not to be the case.</S>
    <S sid="173" ssid="76">On the other hand, the two are much closer in probabilities than any of the other, more intuitive, cases.</S>
    <S sid="174" ssid="77">There are a few parameters not set by EM.</S>
    <S sid="175" ssid="78">Several are connected with the well known syntactic constraints on the use of reflexives.</S>
    <S sid="176" ssid="79">A simple version of this is built in.</S>
    <S sid="177" ssid="80">Reflexives must have an antecedent in same sentence, and generally cannot be coreferent-referent with the subject of the sentence.</S>
    <S sid="178" ssid="81">There are three system parameters that we set by hand to optimize performance on the development set.</S>
    <S sid="179" ssid="82">The first is n. As noted above, the distribution p(governor/relationIantecedent) has amuch greater dynamic range than the other probability distributions and to prevent it from, in essence, completely determining the answer, we take its nth root.</S>
    <S sid="180" ssid="83">Secondly, there is a probability of generating a non-anaphoric &#8220;it&#8221;.</S>
    <S sid="181" ssid="84">Lastly we have a probability of generating each of the other nonmonotonic pronouns along with (the nth root of) their governor.</S>
    <S sid="182" ssid="85">These parameters are 6, 0.1, and 0.0004 respectively.</S>
  </SECTION>
  <SECTION title="6 Definition of Correctness" number="6">
    <S sid="183" ssid="1">We evaluate all programs according to Mitkov&#8217;s &#8220;resolution etiquette&#8221; scoring metric (also used in Cherry and Bergsma (2005)), which is defined as follows: if N is the number of non-anaphoric pronouns correctly identified, A the number of anaphoric pronouns correctly linked to their antecedent, and P the total number of pronouns, then a pronoun-anaphora program&#8217;s percentage correct Most papers dealing with pronoun coreference use this simple ratio, or the variant that ignores non-anaphoric pronouns.</S>
    <S sid="184" ssid="2">It has appeared under a number of names: success (Yang et al., 2006), accuracy (Kehler et al., 2004a; Angheluta et al., 2004) and success rate (Tetreault, 2001).</S>
    <S sid="185" ssid="3">The other occasionally-used metric is the MUC score restricted to pronouns, but this has well-known problems (Bagga and Baldwin, 1998).</S>
    <S sid="186" ssid="4">To make the definition perfectly concrete, however, we must resolve a few special cases.</S>
    <S sid="187" ssid="5">One is the case in which a pronoun x correctly says that it is coreferent with another pronoun y.</S>
    <S sid="188" ssid="6">However, the program misidentifies the antecedent of y.</S>
    <S sid="189" ssid="7">In this case (sometimes called error chaining (Walker, 1989)), both x and y are to be scored as wrong, as they both end up in the wrong coreferential chain.</S>
    <S sid="190" ssid="8">We believe this is, in fact, the standard (Mitkov, personal communication), although there are a few papers (Tetreault, 2001; Yang et al., 2006) which do the opposite and many which simply do not discuss this case.</S>
    <S sid="191" ssid="9">One more issue arises in the case of a system attempting to perform complete NP anaphora3.</S>
    <S sid="192" ssid="10">In these cases the coreferential chains they create may not correspond to any of the original chains.</S>
    <S sid="193" ssid="11">In these cases, we call a pronoun correctly resolved if it is put in a chain including at least one correct non-pronominal antecedent.</S>
    <S sid="194" ssid="12">This definition cannot be used in general, as putting all NPs into the same set would give a perfect score.</S>
    <S sid="195" ssid="13">Fortunately, the systems we compare against do not do this &#8211; they seem more likely to over-split than under-split.</S>
    <S sid="196" ssid="14">Furthermore, if they do take some inadvertent advantage of this definition, it helps them and puts our program at a possible disadvantage, so it is a more-than-fair comparison.</S>
  </SECTION>
  <SECTION title="7 Evaluation" number="7">
    <S sid="197" ssid="1">To develop and test our program we use the dataset annotated by Niyu Ge (Ge et al., 1998).</S>
    <S sid="198" ssid="2">This consists of sections 0 and 1 of the Penn treebank.</S>
    <S sid="199" ssid="3">Ge marked every personal pronoun and all noun phrases that were coreferent with these pronouns.</S>
    <S sid="200" ssid="4">We used section 0 as our development set, and section 1 for testing.</S>
    <S sid="201" ssid="5">We reparsed the sentences using the Charniak and Johnson parser (Charniak and Johnson, 2005) rather than using the gold-parses that Ge marked up.</S>
    <S sid="202" ssid="6">We hope thereby to make the results closer to those a user will experience.</S>
    <S sid="203" ssid="7">(Generally the gold trees perform about 0.005 higher than the machine parsed version.)</S>
    <S sid="204" ssid="8">The test set has 1119 personal pronouns of which 246 are non-anaphoric.</S>
    <S sid="205" ssid="9">Our selection of this dataset, rather than the widely used MUC-6 corpus, is motivated by this large number of pronouns.</S>
    <S sid="206" ssid="10">We compared our results to four currentlyavailable anaphora programs from the web.</S>
    <S sid="207" ssid="11">These four were selected by sending a request to a commonly used mailing list (the &#8220;corpora-list&#8221;) asking for such programs.</S>
    <S sid="208" ssid="12">We received four leads: JavaRAP, Open-NLP, BART and GuiTAR.</S>
    <S sid="209" ssid="13">Of course, these systems represent the best available work, not the state of the art.</S>
    <S sid="210" ssid="14">We presume that more recent supervised systems (Kehler et al., 2004b; Yang et al., 2004; Yang et al., 2006) perform better.</S>
    <S sid="211" ssid="15">Unfortunately, we were unable to obtain a comparison unsupervised learning system at all.</S>
    <S sid="212" ssid="16">Only one of the four is explicitly aimed at personal-pronoun anaphora &#8212; RAP (Resolution of Anaphora Procedure) (Lappin and Leass, 1994).</S>
    <S sid="213" ssid="17">It is a non-statistical system originally implemented in Prolog.</S>
    <S sid="214" ssid="18">The version we used is JavaRAP, a later reimplementation in Java (Long Qiu and Chua, 2004).</S>
    <S sid="215" ssid="19">It only handles third person pronouns.</S>
    <S sid="216" ssid="20">The other three are more general in that they handle all NP anaphora.</S>
    <S sid="217" ssid="21">The GuiTAR system (Poesio and Kabadjov, 2004) is designed to work in an &#8220;off the shelf&#8221; fashion on general text GUITAR resolves pronouns using the algorithm of (Mitkov et al., 2002), which filters candidate antecedents and then ranks them using morphosyntactic features.</S>
    <S sid="218" ssid="22">Due to a bug in version 3, GUITAR does not currently handle possessive pronouns.GUITAR also has an optional discoursenew classification step, which cannot be used as it requires a discontinued Google search API.</S>
    <S sid="219" ssid="23">OpenNLP (Morton et al., 2005) uses a maximum-entropy classifier to rank potential antecedents for pronouns.</S>
    <S sid="220" ssid="24">However despite being the best-performing (on pronouns) of the existing systems, there is a remarkable lack of published information on its innards.</S>
    <S sid="221" ssid="25">BART (Versley et al., 2008) also uses a maximum-entropy model, based on Soon et al. (2001).</S>
    <S sid="222" ssid="26">The BART system also provides a more sophisticated feature set than is available in the basic model, including tree-kernel features and a variety of web-based knowledge sources.</S>
    <S sid="223" ssid="27">Unfortunately we were not able to get the basic version working.</S>
    <S sid="224" ssid="28">More precisely we were able to run the program, but the results we got were substantially lower than any of the other models and we believe that the program as shipped is not working properly.</S>
    <S sid="225" ssid="29">Some of these systems provide their own preprocessing tools.</S>
    <S sid="226" ssid="30">However, these were bypassed, so that all systems ran on the Charniak parse trees (with gold sentence segmentation).</S>
    <S sid="227" ssid="31">Systems with named-entity detectors were allowed to run them as a preprocess.</S>
    <S sid="228" ssid="32">All systems were run using the models included in their standard distribution; typically these models are trained on annotated news articles (like MUC-6), which should be relatively similar to our WSJ documents.</S>
    <S sid="229" ssid="33">The performance of the remaining systems is given in Table 6.</S>
    <S sid="230" ssid="34">The two programs with restrictions were only evaluated on the pronouns the system was capable of handling.</S>
    <S sid="231" ssid="35">These results should be approached with some caution.</S>
    <S sid="232" ssid="36">In particular it is possible that the results for the systems other than ours are underestimated due to errors in the evaluation.</S>
    <S sid="233" ssid="37">Complications include the fact all of the four programs all have different output conventions.</S>
    <S sid="234" ssid="38">The better to catch such problems the authors independently wrote two scoring programs.</S>
    <S sid="235" ssid="39">Nevertheless, given the size of the difference between the results of our system and the others, the conclusion that ours has the best performance is probably solid.</S>
  </SECTION>
  <SECTION title="8 Conclusion" number="8">
    <S sid="236" ssid="1">We have presented a generative model of pronounanaphora in which virtually all of the parameters are learned by expectation maximization.</S>
    <S sid="237" ssid="2">We find it of interest first as an example of one of the few tasks for which EM has been shown to be effective, and second as a useful program to be put in general use.</S>
    <S sid="238" ssid="3">It is, to the best of our knowledge, the best-performing system available on the web.</S>
    <S sid="239" ssid="4">To down-load it, go to (to be announced).</S>
    <S sid="240" ssid="5">The current system has several obvious limitation.</S>
    <S sid="241" ssid="6">It does not handle cataphora (antecedents occurring after the pronoun), only allows antecedents to be at most two sentences back, does not recognize that a conjoined NP can be the antecedent of a plural pronoun, and has a very limited grasp of pronominal syntax.</S>
    <S sid="242" ssid="7">Perhaps the largest limitation is the programs inability to recognize the speaker of a quoted segment.</S>
    <S sid="243" ssid="8">The result is a very large fraction of first person pronouns are given incorrect antecedents.</S>
    <S sid="244" ssid="9">Fixing these problems would no doubt push the system&#8217;s performance up several percent.</S>
    <S sid="245" ssid="10">However the most critical direction for future research is to push the approach to handle full NP anaphora.</S>
    <S sid="246" ssid="11">Besides being of the greatest importance in its own right, it would also allow us to add one piece of information we currently neglect in our pronominal system &#8212; the more times a document refers to an entity the more likely it is to do so again.</S>
  </SECTION>
  <SECTION title="9 Acknowledgements" number="9">
    <S sid="247" ssid="1">We would like to thank the authors and maintainers of the four systems against which we did our comparison, especially Tom Morton, Mijail Kabadjov and Yannick Versley.</S>
    <S sid="248" ssid="2">Making your system freely available to other researchers is one of the best ways to push the field forward.</S>
    <S sid="249" ssid="3">In addition, we thank three anonymous reviewers.</S>
  </SECTION>
</PAPER>
