<PAPER>
	<S sid="0">Unsupervised Learning Of Generalized Names</S><ABSTRACT>
		<S sid="1" ssid="1">We present an algorithm, Nomen, for learning generalized names in text.</S>
		<S sid="2" ssid="2">Examples of these are names of diseases and infectious agents, such as bacteria and viruses.</S>
		<S sid="3" ssid="3">These names exhibitcertain properties that make their identi ca tion more complex than that of regular propernames.</S>
		<S sid="4" ssid="4">Nomen uses a novel form of bootstrap ping to grow sets of textual instances and of their contextual patterns.</S>
		<S sid="5" ssid="5">The algorithm makes use of competing evidence to boost the learning of several categories of names simultaneously.</S>
		<S sid="6" ssid="6">We present results of the algorithm on a large corpus.</S>
		<S sid="7" ssid="7">We also investigate the relative merits of several evaluation strategies.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number="1">
			<S sid="8" ssid="8">This research grew out of the Integrated Feasibility Experiment on Biological Infectious Outbreaks (IFE-BIO), a project to build an Infor mation Extraction (IE) system for identifyingevents related to outbreaks and epidemics of in fectious disease, (Grishman et al, 2002).IE generally relies on knowledge bases of sev eral kinds, and the most fundamental of these is the domain-speci c lexicon|lexical items that are not likely to be found in general-purpose dictionaries.</S>
			<S sid="9" ssid="9">This particular scenario requires a comprehensive list of disease names.</S>
			<S sid="10" ssid="10">Other requisite classes of names include: biologicalagents causing disease, such as viruses and bac teria; vectors|organisms or animals capable of transmitting infection; and possibly names of drugs, used in treatment.</S>
			<S sid="11" ssid="11">1.1 Generalized Names.</S>
			<S sid="12" ssid="12">Names of these kinds, generalized names (GNs), dier from conventional proper names (PNs)that have been studied extensively in the lit erature, e.g., as part of the traditional Named Entity (NE) categorization task, which evolved out of the MUC NE evaluation, (Wakao et al, 1996; Bikel et al, 1997; Borthwick et al, 1998;Collins and Singer, 1999).</S>
			<S sid="13" ssid="13">The three mainstream NE kinds are location, person, and or ganization, and much research has centered on these \classical kinds of proper names.On the other hand, the vast eld of termi nology has traditionally dealt with identifyingsingle- and multi-word domain-speci c expres sions, for various NLP tasks, and recent years have seen a growing convergence between the two elds.</S>
			<S sid="14" ssid="14">In fact, good identi cation of names of both kinds is essential for IE in general.</S>
			<S sid="15" ssid="15">In IFE-BIO, for example, the text: National Veterinary Services Director Dr. Gideon Bruckner said no cases of mad cow disease have been found in South Africa.exhibits more than one problem of name identi cation and classi cation.</S>
			<S sid="16" ssid="16">We focus on general ized names, which pose numerous challenges.</S>
			<S sid="17" ssid="17">The classi cation process usually starts with identi cation, but the primary cue for a propername|capitalization (in English text)|is unavailable for generalized names.</S>
			<S sid="18" ssid="18">GNs are not always capitalized (\mad cow disease or \tuber culosis) or may be partially capitalized (\Ebola haemorrhagic fever, \E. coli).</S>
			<S sid="19" ssid="19">GNs often havemultiple pre- and post-modi ers|\(new) vari ant Creutzfeldt-Jacob disease, or may modify the head of a noun group|\Bacillus anthracis infection.</S>
			<S sid="20" ssid="20">Locating the boundaries of GNs is much harder than for PNs.</S>
			<S sid="21" ssid="21">The problem of ambiguity aects generalized names, as it does proper names.</S>
			<S sid="22" ssid="22">E. coli can refer to the organism or to the disease it causes; encephalitis can mean a disease or a symptom.</S>
			<S sid="23" ssid="23">1.2 Why Learning?.</S>
			<S sid="24" ssid="24">Why is it undesirable to rely on xed, special ized, domain-speci c lists or gazetteers?</S>
			<S sid="25" ssid="25">1.</S>
			<S sid="26" ssid="26">Comprehensive lists are not easy to ob-.</S>
			<S sid="27" ssid="27">tain.(locations, diseases) periodically enter into ex istence and literature.</S>
			<S sid="28" ssid="28">3.</S>
			<S sid="29" ssid="29">A typical text contains all the informationthat is necessary for a human to infer the cate gory.</S>
			<S sid="30" ssid="30">This makes discovering names in text an interesting research problem in its own right.</S>
			<S sid="31" ssid="31">The following section introduces the learning algorithm; Section 3 compares our approach torelated prior work; Section 4 presents an evalu ation of results; we conclude with a discussion of evaluation and current work, in Section 5.</S>
	</SECTION>
	<SECTION title="Nomen: The Learning Algorithm. " number="2">
			<S sid="32" ssid="1">Nomen is based on a bootstrapping approach,similar in essence to that employed in (Yangar ber et al, 2000).</S>
			<S sid="33" ssid="2">1 The algorithm is trained on a large corpus of medical text, as described in Section 4.</S>
			<S sid="34" ssid="3">2.1 Pre-processing.</S>
			<S sid="35" ssid="4">A large text corpus is passed through a zoner, a tokenizer/lemmatizer, and a part-of-speech (POS) tagger.</S>
			<S sid="36" ssid="5">The zoner is a rule-based program to extract textual content from the mailing-list messages, i.e., stripping headers and footers.</S>
			<S sid="37" ssid="6">The tokenizer produces lemmas for thein ected surface forms.</S>
			<S sid="38" ssid="7">The statistical POS tagger is trained on the Wall Street Journal (possibly sub-optimal for texts about infectious disease).</S>
			<S sid="39" ssid="8">Unknown or foreign words are not lem matized and marked noun by the tagger.</S>
			<S sid="40" ssid="9">2.2 Unsupervised Learning.</S>
			<S sid="41" ssid="10">0.</S>
			<S sid="42" ssid="11">Seeds: The user provides several trusted.</S>
			<S sid="43" ssid="12">seeds of each category we intend to learn.</S>
			<S sid="44" ssid="13">E.g., we selected the 10 most common diseases asseeds for the disease category; the same for lo cations and several other categories.</S>
			<S sid="45" ssid="14">2 1 For a detailed comparison of the algorithms, cf.</S>
			<S sid="46" ssid="15">(Yangarber, 2002).</S>
			<S sid="47" ssid="16">2 Frequency counts are computed from a large IEdatabase, of more than 10,000 records.</S>
			<S sid="48" ssid="17">The most common disease names: cholera, dengue, anthrax, BSE, ra bies, JE, Japanese encephalitis, in uenza, Nipah virus, FMD (for foot-and-mouth disease).</S>
			<S sid="49" ssid="18">For each category, the set of accepted names, AcceptName, is initialized with the seeds.</S>
			<S sid="50" ssid="19">1.</S>
			<S sid="51" ssid="20">Tagging: For each accepted name in each.</S>
			<S sid="52" ssid="21">category C to be learned, Nomen tags the lem matized, POS-tagged training corpus, placing left and right tags around each occurrence of the name|e.g., disease and /disease.</S>
			<S sid="53" ssid="22">2.</S>
			<S sid="54" ssid="23">Pattern Generation: For each tag T. inserted in the corpus on Step 1, Nomen gener ates a literal pattern p using a context window of width w around the tag, e.g., p = [ l </S></SECTION></PAPER>
