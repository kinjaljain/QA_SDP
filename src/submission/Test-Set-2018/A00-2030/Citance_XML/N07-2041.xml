<PAPER>
  <S sid="0">Simultaneous Identification of Biomedical Named-Entity and Functional Relation Using Statistical Parsing Techniques</S>
  <ABSTRACT>
    <S sid="1" ssid="1">In this paper we propose a statistical parsing technique that simultaneously identifies biomedical named-entities (NEs) and extracts subcellular localization relations for bacterial proteins from the text in MEDLINE articles.</S>
    <S sid="2" ssid="2">We build a parser that derives both syntactic and domain-dependent semantic information achieves an F-score of the relation extraction task.</S>
    <S sid="3" ssid="3">We then propose a semi-supervised approach that incorporates noisy automatically labeled data to improve the F-score of our parser to Our key contributions are: learning from noisy data, and building an annotated corpus that can benefit relation extraction research.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Relation extraction from text is a step beyond Named-Entity Recognition (NER) and generally demands adequate domain knowledge to build relations among domain-specific concepts.</S>
    <S sid="5" ssid="2">A Biomedical Functional Relation (relation for short) states interactions among biomedical substances.</S>
    <S sid="6" ssid="3">In this paper we focus on one such relation: Bacterial Protein Localization (BPL), and introduce our approach for identifying BPLs from MEDLINE1 articles.</S>
    <S sid="7" ssid="4">BPL is a key functional characteristic of proteins.</S>
    <S sid="8" ssid="5">It is essential to the understanding of the function of different proteins and the discovery of suitable drugs, vaccines and diagnostic targets.</S>
    <S sid="9" ssid="6">We are collaborating with researchers in molecular biology with the goal of automatically extracting BPLs from text with BioNLP techniques, to expand their protein localization database, namely PSORTdb2(Rey et al., 2005).</S>
    <S sid="10" ssid="7">Specifically, the task is to produce as output the relation tuple BPL(BACTERIUM, PROTEIN, LOCATION) along with source sentence and document references.</S>
    <S sid="11" ssid="8">The task is new to BioNLP in terms of the specific biomedical relation being sought.</S>
    <S sid="12" ssid="9">Therefore, we have to build annotated corpus from scratch and we are unable to use existing BioNLP shared task resources in our experiments.</S>
    <S sid="13" ssid="10">In this paper we extract from the text of biomedical articles a relation among: a LOCATION (one of the possible locations shown in Figure 1 for Gram+ and Gram- bacteria); a particular BACTERIUM, e.g.</S>
    <S sid="14" ssid="11">E. Coli, and a PROTEIN name, e.g.</S>
    <S sid="15" ssid="12">OprF.</S>
    <S sid="16" ssid="13">(Nair and Rost, 2002) used the text taken from Swiss-Prot annotations of proteins, and trained a subcellular classifier on this data.</S>
    <S sid="17" ssid="14">(Hoglund et al., 2006) predicted subcellular localizations using an SVM trained on both text and protein sequence data, by assigning each protein name a vector based on terms co-occurring with the localization name for each organism.</S>
    <S sid="18" ssid="15">(Lu and Hunter, 2005) applied a hierarchical architecture of SVMs to predict subcellular localization by incorporating a semantic hierarchy of localization classes modeled with biological processing pathways.</S>
    <S sid="19" ssid="16">These approaches either ignore the actual location information in their predicted localization relations, or only focus on a small portion of eukaryotic proteins.</S>
    <S sid="20" ssid="17">The performance of these approaches are not comparable due to different tasks and datasets.</S>
  </SECTION>
  <SECTION title="2 System Outline" number="2">
    <S sid="21" ssid="1">During our system&#8217;s preprocessing phase, sentences are automatically annotated with both syntactic information and domain-specific semantic information.</S>
    <S sid="22" ssid="2">Syntactic annotations are provided by a statistical parser (Charniak and Johnson, 2005).</S>
    <S sid="23" ssid="3">Domainspecific semantic information includes annotations on PROTEIN, BACTERIUM and LOCATION NEs by dictionary lookups from UMLS3, NCBI Taxonomy4 and SwissProt5, and two automatic Bio-NE recognizers: MMTx6 and Lingpipe7.</S>
    <S sid="24" ssid="4">We propose the use of a parser that simultaneously identifies NEs and extracts the BPL relations from each sentence.</S>
    <S sid="25" ssid="5">We define NEs to be Relevant to each other only if they are arguments of a BPL relation, otherwise they are defined to be Irrelevant.</S>
    <S sid="26" ssid="6">A sentence may contain multiple PROTEIN (LOCATION or ORGANISM) NEs, e.g., there are two PROTEIN NEs in the sentence below but only one, OmpA, is relevant.</S>
    <S sid="27" ssid="7">Our system aims to identify the correct BPL relation among all possible BPL tuples (candidate relations) in the sentence by only recognizing relevant NEs.</S>
    <S sid="28" ssid="8">Each input sentence is assumed to have at least one BPL relation.</S>
    <S sid="29" ssid="9">Nine of 10 monoclonal antibodies mapped within the carboxyterminal region of [PROTEIN OprF] that is homologous to the [ORGANISM Escherichia coli] [LOCATION outer membrane] protein [PROTEIN OmpA].</S>
  </SECTION>
  <SECTION title="3 Statistical Syntactic and Semantic Parser" number="3">
    <S sid="30" ssid="1">Similar to the approach in (Miller et al., 2000) and (Kulick et al., 2004), our parser integrates both syntactic and semantic annotations into a single annotation as shown in Figure 2.</S>
    <S sid="31" ssid="2">A lexicalized statistical parser (Bikel, 2004) is applied to the parsing task.</S>
    <S sid="32" ssid="3">The parse tree is decorated with two types of semanBinary relations are apparently much easier to represent on the parse tree, therefore we split the BPL ternary relation into two binary relations: BP (BACTERIUM and PROTEIN) and PL (PROTEIN and LOCATION).</S>
    <S sid="33" ssid="4">After capturing BP and PL relations, we will predict BPL as a fusion of BP and PL, see &#167;4.1.</S>
    <S sid="34" ssid="5">In contrast to the global inference done using our generative model, heavily pipelined discriminative approaches usually have problems with error propagation.</S>
    <S sid="35" ssid="6">A more serious problem in a pipelined system when using syntactic parses for relation extraction is the alignment between the named entities produced by a separate system and the syntactic parses produced by the statistical parser.</S>
    <S sid="36" ssid="7">This alignment issue is non-trivial and we could not produce a pipelined system that dealt with this issue satisfactorily for our dataset.</S>
    <S sid="37" ssid="8">As a result, we did not directly compare our generative approach to a pipelined strategy.</S>
  </SECTION>
  <SECTION title="4 Experiment Settings and Evaluations" number="4">
    <S sid="38" ssid="1">The training and test sets are derived from a small expert-curated corpus.</S>
    <S sid="39" ssid="2">Table 1 lists numbers of sentences and relevant NEs in each BP/PL/BPL set.</S>
    <S sid="40" ssid="3">Since the parsing results include both NE and path tags (note that we do not use any external NER system), there are two metrics to produce and evaluate PL or BP relations: Name-only and Name-path metrics.</S>
    <S sid="41" ssid="4">The name-only metric only measures Relevant PROTEIN, BACTERIUM and LOCATION NEs (see Section 2).</S>
    <S sid="42" ssid="5">It does not take path annotations into account.</S>
    <S sid="43" ssid="6">The name-only metric is measured in terms of Precision, Recall and F-score, in which True Positive (TP) is the number of correctly identified NEs, False Positive (FP) is the number of incorrectly identified NEs and False Negative (FN) is the number of correct NEs that are not identified.</S>
    <S sid="44" ssid="7">The name-path measures nodes being annotated as LNK, PTR or R along the path between NEs on the parse tree, therefore it represents confidence of NEs being arguments of the relation.</S>
    <S sid="45" ssid="8">The namepath metric is a macro-average measure, which is the average performance of all sentences in data set.</S>
    <S sid="46" ssid="9">In measurement of the name-path metric, TP is the number of correctly annotated nodes on the path between relevant NEs.</S>
    <S sid="47" ssid="10">FP is the number of incorrectly annotated nodes on the path and FN is the number of correct nodes that are not identified.</S>
    <S sid="48" ssid="11">The BPL relation can be predicted by a fusion of BP and PL once they are extracted.</S>
    <S sid="49" ssid="12">Specifically, a BP and a PL that are extracted from the same sentence are merged into a BPL.</S>
    <S sid="50" ssid="13">The predicted BPL relations are then evaluated by the same name-only and name-path metrics as for binary relations.</S>
    <S sid="51" ssid="14">In the name-path metric, nodes on both PL and BP paths are counted.</S>
    <S sid="52" ssid="15">Note that we do not need a common protein NER to merge the BP and PL relations.</S>
    <S sid="53" ssid="16">E.g., for name-only evaluation, assume true BPL(B1, P1, L1): if we predict BP(B1, ) and PL(P1, L2), then TP=2 due to B1, P1; FP=1 due to L2; and FN=1 due to P1.</S>
  </SECTION>
  <SECTION title="5 NER and BPL Extraction" number="5">
    <S sid="54" ssid="1">Baseline: An intuitive method for relation extraction would assume that any sentence containing PROTEIN, ORGANISM and LOCATION NEs has the relation.</S>
    <S sid="55" ssid="2">We employ this method as a baseline system, in which NEs are identified by the automatic NE recognizers and dictionary lookups as introduced in &#167;2.</S>
    <S sid="56" ssid="3">The system is evaluated against the test set in Table 1.</S>
    <S sid="57" ssid="4">Results in Table 2 show low precision for PROTEIN NER and the name-path metric.</S>
    <S sid="58" ssid="5">Extraction using Supervised Parsing: We first experiment a fully supervised approach by training the parser on the BP/PL training set and evaluate on the test set (see Table 1).</S>
    <S sid="59" ssid="6">The name-only and name-path evaluation results in Table 2 show poor syntactic parsing annotation quality and low recall on PROTEIN NER.</S>
    <S sid="60" ssid="7">The major reason of these problems is the lack of training data. periments with purely supervised learning show that our generative model requires a large curated set to minimize the sparse data problem, but domainspecific annotated corpora are always rare and expensive.</S>
    <S sid="61" ssid="8">However, there is a huge source of unlabeled MEDLINE articles available that may meet our needs, by assuming that any sentence containing BACTERIUM, PROTEIN and LOCATION NEs has the BPL relation.</S>
    <S sid="62" ssid="9">We then choose such sentences from a subset of the MEDLINE database as the training data.</S>
    <S sid="63" ssid="10">These sentences, after being parsed and BPL relations inserted, are in fact the very noisy data when used to train the parser, since the assumed relations do not necessarily exist.</S>
    <S sid="64" ssid="11">The reason this noisy data works at all is probably because we can learn a preference for structural relations between entities that are close to each other in the sentence, and thus distinguish between competing relations in the same sentence.</S>
    <S sid="65" ssid="12">In future work, we hope to explore explicit bootstrapping from the labeled data to improve the quality of the noisy data.</S>
    <S sid="66" ssid="13">Two experiments were carried out corresponding to choices of the training set: 1) noisy data only, 2) noisy data and curated training data.</S>
    <S sid="67" ssid="14">Evaluation results given in Table 2.</S>
    <S sid="68" ssid="15">Evaluation results on the name-only metric show that, compared to supervised parsing, our semisupervised method dramatically improves recall for NER.</S>
    <S sid="69" ssid="16">For instance, recall for PROTEIN NER increases from 25.0% to 81.3%; recall on BACTERIUM and LOCATION NERs increases about 30%.</S>
    <S sid="70" ssid="17">As for the name-path metric, the overall F-score is much higher than our fully supervised method increasing from 39.9% to 74.5%.</S>
    <S sid="71" ssid="18">It shows that the inclusion of curated data in the semisupervised method does not improve performance much.</S>
    <S sid="72" ssid="19">Precision of PROTEIN NER increases 6.5% on average, while F-score of overall BPL extraction increases only slightly.</S>
    <S sid="73" ssid="20">We experimented with training the semi-supervised method using noisy data alone, and testing on the entire curated set, i.e., 333 and 286 sentences for BP and PL extractions respectively.</S>
    <S sid="74" ssid="21">Note that we do not directly train from the training set in this method, so it is still &#8220;unseen&#8221; data for this model.</S>
    <S sid="75" ssid="22">The F-scores of path-only and pathname metrics are 75.5% and 67.1% respectively.</S>
  </SECTION>
  <SECTION title="6 Discussion and Future Work" number="6">
    <S sid="76" ssid="1">In this paper we introduced a statistical parsingbased method to extract biomedical relations from MEDLINE articles.</S>
    <S sid="77" ssid="2">We made use of a large unlabeled data set to train our relation extraction model.</S>
    <S sid="78" ssid="3">Experiments show that the semi-supervised method significantly outperforms the fully supervised method with F-score increasing from 48.4% to 83.2%.</S>
    <S sid="79" ssid="4">We have implemented a discriminative model (Liu et al., 2007) which takes as input the examples with gold named entities and identifies BPL relations on them.</S>
    <S sid="80" ssid="5">In future work, we plan to let the discriminative model take the output of our parser and refine our current results further.</S>
    <S sid="81" ssid="6">We also plan to train a graphical model based on all extracted BP, PL and BPL relations to infer relations from multiple sentences and documents.</S>
  </SECTION>
</PAPER>
