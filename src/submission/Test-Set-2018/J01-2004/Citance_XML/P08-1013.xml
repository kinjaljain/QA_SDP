<PAPER>
  <S sid="0">Applying a Grammar-Based Language Model to a Simplified Broadcast-News Transcription Task</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We propose a language model based on a precise, linguistically motivated grammar (a hand-crafted Head-driven Phrase Structure Grammar) and a statistical model estimating the probability of a parse tree.</S>
    <S sid="2" ssid="2">The language model is applied by means of an N-best rescoring step, which allows to directly measure the performance gains relative to the baseline system without rescoring.</S>
    <S sid="3" ssid="3">To demonstrate that our approach is feasible and beneficial for non-trivial broad-domain speech recognition tasks, we applied it to a simplified German broadcast-news transcription task.</S>
    <S sid="4" ssid="4">We report a significant reduction in word error rate compared to a state-of-the-art baseline system.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">It has repeatedly been pointed out that N-grams model natural language only superficially: an Nthorder Markov chain is a very crude model of the complex dependencies between words in an utterance.</S>
    <S sid="6" ssid="2">More accurate statistical models of natural language have mainly been developed in the field of statistical parsing, e.g.</S>
    <S sid="7" ssid="3">Collins (2003), Charniak (2000) and Ratnaparkhi (1999).</S>
    <S sid="8" ssid="4">Other linguistically inspired language models like Chelba and Jelinek (2000) and Roark (2001) have been applied to continuous speech recognition.</S>
    <S sid="9" ssid="5">These models have in common that they explicitly or implicitly use a context-free grammar induced from a treebank, with the exception of Chelba and Jelinek (2000).</S>
    <S sid="10" ssid="6">The probability of a rule expansion or parser operation is conditioned on various contextual information and the derivation history.</S>
    <S sid="11" ssid="7">An important reason for the success of these models is the fact that they are lexicalized: the probability distributions are also conditioned on the actual words occuring in the utterance, and not only on their parts of speech.</S>
    <S sid="12" ssid="8">Most statistical parsers achieve a high robustness with respect to out-of-grammar sentences by allowing for arbitrary derivations and rule expansions.</S>
    <S sid="13" ssid="9">On the other hand, they are not suited to reliably decide on the grammaticality of a given phrase, as they do not accurately model the linguistic constraints inherent in natural language.</S>
    <S sid="14" ssid="10">We take a completely different position.</S>
    <S sid="15" ssid="11">In the first place, we want our language model to reliably distinguish between grammatical and ungrammatical phrases.</S>
    <S sid="16" ssid="12">To this end, we have developed a precise, linguistically motivated grammar.</S>
    <S sid="17" ssid="13">To distinguish between common and uncommon phrases, we use a statistical model that estimates the probability of a phrase based on the syntactic dependencies established by the parser.</S>
    <S sid="18" ssid="14">We achieve some degree of robustness by letting the grammar accept arbitrary sequences of words and phrases.</S>
    <S sid="19" ssid="15">To keep the grammar restrictive, such sequences are penalized by the statistical model.</S>
    <S sid="20" ssid="16">Accurate hand-crafted grammars have been applied to speech recognition before, e.g.</S>
    <S sid="21" ssid="17">Kiefer et al. (2000) and van Noord et al.</S>
    <S sid="22" ssid="18">(1999).</S>
    <S sid="23" ssid="19">However, they primarily served as a basis for a speech understanding component and were applied to narrowdomain tasks such as appointment scheduling or public transport information.</S>
    <S sid="24" ssid="20">We are mainly concerned with speech recognition performance on broad-domain recognition tasks.</S>
    <S sid="25" ssid="21">Beutler et al. (2005) pursued a similar approach.</S>
    <S sid="26" ssid="22">However, their grammar-based language model did not make use of a probabilistic component, and it was applied to a rather simple recognition task (dictation texts for pupils read and recorded under good acoustic conditions, no out-of-vocabulary words).</S>
    <S sid="27" ssid="23">Besides proposing an improved language model, this paper presents experimental results for a much more difficult and realistic task and compares them to the performance of a state-of-the-art baseline system.</S>
    <S sid="28" ssid="24">In the following Section, we will first describe our grammar-based language model.</S>
    <S sid="29" ssid="25">Next, we will turn to the linguistic components of the model, namely the grammar, the lexicon and the parser.</S>
    <S sid="30" ssid="26">We will point out some of the challenges arising from the broad-domain speech recognition application and propose ways to deal with them.</S>
    <S sid="31" ssid="27">Finally, we will describe our experiments on broadcast news data and discuss the results.</S>
  </SECTION>
  <SECTION title="2 Language Model" number="2">
    <S sid="32" ssid="1">Speech recognizers choose the word sequence W&#65533; which maximizes the posterior probability P(W |O), where O is the acoustic observation.</S>
    <S sid="33" ssid="2">This is achieved by optimizing The language model weight A and the word insertion penalty ip lead to a better performance in practice, but they have no theoretical justification.</S>
    <S sid="34" ssid="3">Our grammar-based language model is incorporated into the above expression as an additional probability Pgram(W), weighted by a parameter p: To determine Pgram(W) is an expensive operation as it involves parsing.</S>
    <S sid="35" ssid="4">For this reason, we pursue an N-best rescoring approach.</S>
    <S sid="36" ssid="5">We first produce the N best hypotheses according to the criterion in equation (1).</S>
    <S sid="37" ssid="6">From these hypotheses we then choose the final recognition result according to equation (2).</S>
    <S sid="38" ssid="7">The parse trees produced by our parser are binarybranching and rather deep.</S>
    <S sid="39" ssid="8">In order to compute the probability of a parse tree, it is transformed to a flat dependency tree similar to the syntax graph representation used in the TIGER treebank Brants et al (2002).</S>
    <S sid="40" ssid="9">An inner node of such a dependency tree represents a constituent or phrase.</S>
    <S sid="41" ssid="10">Typically, it directly connects to a leaf node representing the most important word of the phrase, the head child.</S>
    <S sid="42" ssid="11">The other children represent phrases or words directly depending on the head child.</S>
    <S sid="43" ssid="12">To give an example, the immediate children of a sentence node are the finite verb (the head child), the adverbials, the subject and the all other (verbal and non-verbal) complements.</S>
    <S sid="44" ssid="13">This flat structure has the advantage that the information which is most relevant for the head child is represented within the locality of an inner node.</S>
    <S sid="45" ssid="14">Assuming statistical independence between the internal structures of the inner nodes ni, we can factor P(T) much like it is done for probabilistic contextfree grammars: In the above equation, tag(ni) is simply the label assigned to the tree node ni, and childtags(ni) denotes the tags assigned to the child nodes of ni.</S>
    <S sid="46" ssid="15">Our statistical model for German sentences distinguishes between eight different tags.</S>
    <S sid="47" ssid="16">Three tags are used for different types of noun phrases: pronominal NPs, non-pronominal NPs and prenominal genitives.</S>
    <S sid="48" ssid="17">Prenominal genitives were given a dedicated tag because they are much more restricted than ordinary NPs.</S>
    <S sid="49" ssid="18">Another two tags were used to distinguish between clauses with sentence-initial finite verbs (main clauses) and clauses with sentence-final finite verbs (subordinate clauses).</S>
    <S sid="50" ssid="19">Finally, there are specific tags for infinitive verb phrases, adjective phrases and prepositional phrases.</S>
    <S sid="51" ssid="20">P was modeled by means of a dedicated probability distribution for each conditioning tag.</S>
    <S sid="52" ssid="21">The probability of the internal structure of a sentence was modeled as the trigram probability of the corresponding tag sequence (the sequence of the sentence node&#8217;s child tags).</S>
    <S sid="53" ssid="22">The probability of an adjective phrase was decomposed into the probability of the adjective type (participle or non-participle and attributive, adverbial or predicative) and the probability of its length in words given the adjective type.</S>
    <S sid="54" ssid="23">This allows the model to directly penalize long adjective phrases, which are very rare.</S>
    <S sid="55" ssid="24">The model for noun phrases is based on the joint probability of the head type (either noun, adjective or proper name), the presence of a determiner and the presence of preand postnominal modifiers.</S>
    <S sid="56" ssid="25">The probabilities of various other events are conditioned on those four variables, namely the number of prepositional phrases, relative clauses and adjectives, as well as the presence of appositions and prenominal or postnominal genitives.</S>
    <S sid="57" ssid="26">The resulting probability distributions were trained on the German TIGER treebank which consists of about 50000 sentences of newspaper text.</S>
    <S sid="58" ssid="27">A major problem of grammar-based approaches to language modeling is how to deal with out-ofgrammar utterances.</S>
    <S sid="59" ssid="28">Obviously, the utterance to be recognized may be ungrammatical, or it could be grammatical but not covered by the given grammar.</S>
    <S sid="60" ssid="29">But even if the utterance is both grammatical and covered by the grammar, the correct word sequence may not be among the N best hypotheses due to out-of-vocabulary words or bad acoustic conditions.</S>
    <S sid="61" ssid="30">In all these cases, the best hypothesis available is likely to be out-of-grammar, but the language model should nevertheless prefer it to competing hypotheses.</S>
    <S sid="62" ssid="31">To make things worse, it is not unlikely that some of the competing hypotheses are grammatical.</S>
    <S sid="63" ssid="32">It is therefore important that our language model is robust with respect to out-of-grammar sentences.</S>
    <S sid="64" ssid="33">In particular this means that it should provide a reasonable parse tree for any possible word sequence W. However, our approach is to use an accurate, linguistically motivated grammar, and it is undesirable to weaken the constraints encoded in the grammar.</S>
    <S sid="65" ssid="34">Instead, we allow the parser to attach any sequence of words or correct phrases to the root node, where each attachment is penalized by the probabilistic model P(T).</S>
    <S sid="66" ssid="35">This can be thought of as adding two probabilistic context-free rules: S &#8722;&#65533; S' S with probability q S &#8722;&#65533; S' with probability 1&#8722;q In order to guarantee that all possible word sequences are parseable, S' can produce both saturated phrases and arbitrary words.</S>
    <S sid="67" ssid="36">To include such a productive set of rules into the grammar would lead to serious efficiency problems.</S>
    <S sid="68" ssid="37">For this reason, these rules were actually implemented as a dynamic programming pass: after the parser has identified all correct phrases, the most probable sequence of phrases or words is computed.</S>
    <S sid="69" ssid="38">Besides the distributions required to specify P(T), our language model has three parameters: the language model weight p, the attachment probability q and the number of hypotheses N. The parameters p and q are considered to be task-dependent.</S>
    <S sid="70" ssid="39">For instance, if the utterances are well-covered by the grammar and the acoustic conditions are good, it can be expected that p is relatively large and that q is relatively small.</S>
    <S sid="71" ssid="40">The choice of N is restricted by the available computing power.</S>
    <S sid="72" ssid="41">For our experiments, we chose N = 100.</S>
    <S sid="73" ssid="42">The influence of N on the word error rate is discussed in the results section.</S>
  </SECTION>
  <SECTION title="3 Linguistic Resources" number="3">
    <S sid="74" ssid="1">The linguistic resources presented in this Section are partly influenced by the form of the recognizer output.</S>
    <S sid="75" ssid="2">In particular, the speech recognizer does not always transcribe numbers, compounds and acronyms as single words.</S>
    <S sid="76" ssid="3">For instance, the word &#8220;einundzwanzig&#8221; (twenty-one) is transcribed as &#8220;ein und zwanzig&#8221;, &#8220;Kriegspl&#168;ane&#8221; (war plans) as &#8220;Kriegs Pl&#168;ane&#8221; and &#8221;BMW&#8221; as &#8220;B.</S>
    <S sid="77" ssid="4">M. W.&#8221; These transcription variants are considered to be correct by our evaluation scheme.</S>
    <S sid="78" ssid="5">Therefore, the grammar should accept them as well.</S>
    <S sid="79" ssid="6">We used the Head-driven Phrase Structure Grammar (HPSG, see Pollard and Sag (1994)) formalism to develop a precise large-coverage grammar for German.</S>
    <S sid="80" ssid="7">HPSG is an unrestricted grammar (Chomsky type 0) which is based on a context-free skeleton and the unification of complex feature structures.</S>
    <S sid="81" ssid="8">There are several variants of HPSG which mainly differ in the formal tools they provide for stating linguistic constraints.</S>
    <S sid="82" ssid="9">Our particular variant requires that constituents (phrases) be continuous, but it provides a mechanism for dealing with discontinuities as present e.g. in the German main clause, see Kaufmann and Pfister (2007).</S>
    <S sid="83" ssid="10">HPSG typically distinguishes between immediate dominance schemata (rough equivalents of phrase structure rules, but making no assumptions about constituent order) and linear precedence rules (constraints on constituent order).</S>
    <S sid="84" ssid="11">We do not make this distinction but rather let immediate dominance schemata specify constituent order.</S>
    <S sid="85" ssid="12">Further, the formalism allows to express complex linguistic constraints by means of predicates or relational constraints.</S>
    <S sid="86" ssid="13">At parse time, predicates are backed by program code that can perform arbitrary computations to check or specify feature structures.</S>
    <S sid="87" ssid="14">We have implemented an efficient Java parser for our variant of the HPSG formalism.</S>
    <S sid="88" ssid="15">The parser supports ambiguity packing, which is a technique for merging constituents with different derivational histories but identical syntactic properties.</S>
    <S sid="89" ssid="16">This is essential for parsing long and ambiguous sentences.</S>
    <S sid="90" ssid="17">Our grammar incorporates many ideas from existing linguistic work, e.g.</S>
    <S sid="91" ssid="18">M&#168;uller (2007), M&#168;uller (1999), Crysmann (2005), Crysmann (2003).</S>
    <S sid="92" ssid="19">In addition, we have modeled a few constructions which occur frequently but are often neglected in formal syntactic theories.</S>
    <S sid="93" ssid="20">Among them are prenominal and postnominal genitives, expressions of quantity and expressions of date and time.</S>
    <S sid="94" ssid="21">Further, we have implemented dedicated subgrammars for analyzing written numbers, compounds and acronyms that are written as separate words.</S>
    <S sid="95" ssid="22">To reduce ambiguity, only noun-noun compounds are covered by the grammar.</S>
    <S sid="96" ssid="23">Noun-noun compounds are by far the most productive compound type.</S>
    <S sid="97" ssid="24">The grammar consists of 17 rules for general linguistic phenomena (e.g. subcategorization, modification and extraction), 12 rules for modeling the German verbal complex and another 13 construction-specific rules (relative clauses, genitive attributes, optional determiners, nominalized adjectives, etc.).</S>
    <S sid="98" ssid="25">The various subgrammars (expressions of date and time, written numbers, noun-noun compounds and acronyms) amount to a total of 43 rules.</S>
    <S sid="99" ssid="26">The grammar allows the derivation of &#8220;intermediate products&#8221; which cannot be regarded as complete phrases.</S>
    <S sid="100" ssid="27">We consider complete phrases to be sentences, subordinate clauses, relative and interrogative clauses, noun phrases, prepositional phrases, adjective phrases and expressions of date and time.</S>
    <S sid="101" ssid="28">The lexicon was created manually based on a list of more than 5000 words appearing in the N-best lists of our experiment.</S>
    <S sid="102" ssid="29">As the domain of our recognition task is very broad, we attempted to include any possible reading of a given word.</S>
    <S sid="103" ssid="30">Our main source of dictionary information was Duden (1999).</S>
    <S sid="104" ssid="31">Each word was annotated with precise morphological and syntactic information.</S>
    <S sid="105" ssid="32">For example, the roughly 2700 verbs were annotated with over 7000 valency frames.</S>
    <S sid="106" ssid="33">We distinguish 86 basic valency frames, for most of which the complement types can be further specified.</S>
    <S sid="107" ssid="34">A major difficulty was the acquisition of multiword lexemes.</S>
    <S sid="108" ssid="35">Slightly deviating from the common notion, we use the following definition: A syntactic unit consisting of two or more words is a multiword lexeme, if the grammar cannot derive it from its parts.</S>
    <S sid="109" ssid="36">English examples are idioms like &#8220;by and large&#8221; and phrasal verbs such as &#8220;to call sth off&#8221;.</S>
    <S sid="110" ssid="37">Such multi-word lexemes have to be entered into the lexicon, but they cannot directly be identified in the word list.</S>
    <S sid="111" ssid="38">Therefore, they have to be extracted from supplementary resources.</S>
    <S sid="112" ssid="39">For our work, we used a newspaper text corpus of 230M words (Frankfurter Rundschau and Neue Z&#168;urcher Zeitung).</S>
    <S sid="113" ssid="40">This corpus included only articles which are dated before the first broadcast news show used in the experiment.</S>
    <S sid="114" ssid="41">In the next few paragraphs we will discuss some types of multiword lexemes and our methods of extracting them.</S>
    <S sid="115" ssid="42">There is a large and very productive class of German prefix verbs whose prefixes can appear separated from the verb, similar to English phrasal verbs.</S>
    <S sid="116" ssid="43">For example, the prefix of the verb &#8220;untergehen&#8221; (to sink) is separated in &#8220;das Schiff geht unter&#8221; (the ship sinks) and attached in &#8220;weil das Schiff untergeht&#8221; (because the ship sinks).</S>
    <S sid="117" ssid="44">The set of possible valency frames of a prefix verb has to be looked up in a dictionary as it cannot be derived systematically from its parts.</S>
    <S sid="118" ssid="45">Exploiting the fact that prefixes are attached to their verb under certain circumstances, we extracted a list of prefix verbs from the above newspaper text corpus.</S>
    <S sid="119" ssid="46">As the number of prefix verbs is very large, a candidate prefix verb was included into the lexicon only if there is a recognizer hypothesis in which both parts are present.</S>
    <S sid="120" ssid="47">Note that this procedure does not amount to optimizing on test data: when parsing a hypothesis, the parser chart contains only those multiword lexemes for which all parts are present in the hypothesis.</S>
    <S sid="121" ssid="48">Other multi-word lexemes are fixed word clusters of various types.</S>
    <S sid="122" ssid="49">For instance, some prepositional phrases appearing in support verb constructions lack an otherwise mandatory determiner, e.g.</S>
    <S sid="123" ssid="50">&#8220;unter Beschuss&#8221; (under fire).</S>
    <S sid="124" ssid="51">Many multi-word lexemes are adverbials, e.g.</S>
    <S sid="125" ssid="52">&#8220;nach wie vor&#8221; (still), &#8220;auf die Dauer&#8221; (in the long run).</S>
    <S sid="126" ssid="53">To extract such word clusters we used suffix arrays proposed in Yamamoto and Church (2001) and the pointwise mutual information measure, see Church and Hanks (1990).</S>
    <S sid="127" ssid="54">Again, it is feasible to consider only those clusters appearing in some recognizer hypothesis.</S>
    <S sid="128" ssid="55">The list of candidate clusters was reduced using different filter heuristics and finally checked manually.</S>
    <S sid="129" ssid="56">For our task, split compounds are to be considered as multi-word lexemes as well.</S>
    <S sid="130" ssid="57">As our grammar only models noun-noun compounds, other compounds such as &#8220;unionsgef&#168;uhrt&#8221; (led by the union) have to be entered into the lexicon.</S>
    <S sid="131" ssid="58">We applied the decompounding algorithm proposed in AddaDecker (2003) to our corpus to extract such compounds.</S>
    <S sid="132" ssid="59">The resulting candidate list was again filtered manually.</S>
    <S sid="133" ssid="60">We observed that many proper nouns (e.g. personal names and geographic names) are identical to some noun, adjective or verb form.</S>
    <S sid="134" ssid="61">For example, about 40% of the nouns in our lexicon share inflected forms with personal names.</S>
    <S sid="135" ssid="62">Proper nouns considerably contribute to ambiguity, as most of them do not require a determiner.</S>
    <S sid="136" ssid="63">Therefore, a proper noun which is a homograph of an open-class word was entered only if it is &#8220;relevant&#8221; for our task.</S>
    <S sid="137" ssid="64">The &#8220;relevant&#8221; proper nouns were extracted automatically from our text corpus.</S>
    <S sid="138" ssid="65">We used small databases of unambiguous given names and forms of address to spot personal names in significant bigrams.</S>
    <S sid="139" ssid="66">Relevant geographic names were extracted by considering capitalized words which significantly often follow certain local prepositions.</S>
    <S sid="140" ssid="67">The final lexicon contains about 2700 verbs (including 1900 verbs with separable prefixes), 3500 nouns, 450 adjectives, 570 closed-class words and 220 multiword lexemes.</S>
    <S sid="141" ssid="68">All lexicon entries amount to a total of 137500 full forms.</S>
    <S sid="142" ssid="69">Noun-noun compounds are not included in these numbers, as they are handled in a morphological analysis component.</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="143" ssid="1">The experiment was designed to measure how much a given speech recognition system can benefit from our grammar-based language model.</S>
    <S sid="144" ssid="2">To this end, we used a baseline speech recognition system which provided the N best hypotheses of an utterance along with their respective scores.</S>
    <S sid="145" ssid="3">The grammarbased language model was then applied to the N best hypotheses as described in Section 2.1, yielding a new best hypothesis.</S>
    <S sid="146" ssid="4">For a given test set we could then compare the word error rate of the baseline system with that of the extended system employing the grammar-based language model.</S>
    <S sid="147" ssid="5">Our experiments are based on word lattice output from the LIMSI German broadcast news transcription system (McTait and Adda-Decker, 2003), which employs 4-gram backoff language models.</S>
    <S sid="148" ssid="6">From the experiment reported in McTait and AddaDecker (2003), we used the first three broadcast news shows1 which corresponds to a signal length of roughly 50 minutes.</S>
    <S sid="149" ssid="7">Rather than applying our model to the original broadcast-news transcription task, we used the above data to create an artificial recognition task with manageable complexity.</S>
    <S sid="150" ssid="8">Our primary aim was to design a task which allows us to investigate the properties of our grammar-based approach and to compare its performance with that of a competitive baseline system.</S>
    <S sid="151" ssid="9">As a first simplification, we assumed perfect sentence segmentation.</S>
    <S sid="152" ssid="10">We manually split the original word lattices at the sentence boundaries and merged them where a sentence crossed a lattice boundary.</S>
    <S sid="153" ssid="11">This resulted in a set of 636 lattices (sentences).</S>
    <S sid="154" ssid="12">Second, we classified the sentences with respect to content type and removed those classes with an exceptionally high baseline word error rate.</S>
    <S sid="155" ssid="13">These classes are interviews (a word error rate of 36.1%), sports reports (28.4%) and press conferences (25.7%).</S>
    <S sid="156" ssid="14">The baseline word error rate of the remaining 447 lattices (sentences) is 11.8%.</S>
    <S sid="157" ssid="15">From each of these 447 lattices, the 100 best hypotheses were extracted.</S>
    <S sid="158" ssid="16">We next compiled a list containing all words present in the recognizer hypotheses.</S>
    <S sid="159" ssid="17">These words were entered into the lexicon as described in Section 3.3.</S>
    <S sid="160" ssid="18">Finally, all extracted recognizer hypotheses were parsed.</S>
    <S sid="161" ssid="19">Only 25 of the 44000 hypotheses2 caused an early termination of the parser due to the imposed memory limits.</S>
    <S sid="162" ssid="20">However, the inversion of ambiguity packing (see Section 3.2) turned out to be a bottleneck.</S>
    <S sid="163" ssid="21">As P(T) does not directly apply to parse trees, all possible readings have to be unpacked.</S>
    <S sid="164" ssid="22">For 24 of the 447 lattices, some of the N best hypotheses contained phrases with more than 1000 readings.</S>
    <S sid="165" ssid="23">For these lattices the grammar-based language model was simply switched off in the experiment, as no parse trees were produced for efficiency reasons.</S>
    <S sid="166" ssid="24">To assess the difficulty of our task, we inspected the reference transcriptions, the word lattices and the N-best lists for the 447 selected utterances.</S>
    <S sid="167" ssid="25">We found that for only 59% of the utterances the correct transcription is among the 100-best hypotheses.</S>
    <S sid="168" ssid="26">The first-best hypothesis is completely correct for 34% of the utterances.</S>
    <S sid="169" ssid="27">The out-of-vocabulary rate (estimated from the number of reference transcription words which do not appear in any of the lattices) is 1.7%.</S>
    <S sid="170" ssid="28">The first-best word error rate is 11.79%, and the 100-best oracle word error rate is 4.8%.</S>
    <S sid="171" ssid="29">We further attempted to judge the grammaticality of the reference transcriptions.</S>
    <S sid="172" ssid="30">We considered only 1% of the sentences to be clearly ungrammatical.</S>
    <S sid="173" ssid="31">19% of the remaining sentences were found to contain general grammatical constructions which are not handled by our grammar.</S>
    <S sid="174" ssid="32">Some of these constructions (most notably ellipses, which are omnipresent in broadcast-news reports) are notoriously difficult as they would dramatically increase ambiguity when implemented in a grammar.</S>
    <S sid="175" ssid="33">About 45% of the reference sentences were correctly analyzed by the grammar.</S>
    <S sid="176" ssid="34">The parameter N, the maximum number of hypotheses to be considered, was set to 100 (the effect of choosing different values of N will be discussed in section 4.4).</S>
    <S sid="177" ssid="35">The remaining parameters &#181; and q were trained using the leave-one-out crossvalidation method: each of the 447 utterances served as the single test item once, whereas the remaining 446 utterances were used for training.</S>
    <S sid="178" ssid="36">As the error landscape is complex and discrete, we could not use gradient-based optimization methods.</S>
    <S sid="179" ssid="37">Instead, we chose &#181; and q from 500 equidistant points within the intervals [0, 20] and [0, 0.25], respectively.</S>
    <S sid="180" ssid="38">The word error rate was evaluated for each possible pair of parameter values.</S>
    <S sid="181" ssid="39">The evaluation scheme was taken from McTait and Adda-Decker (2003).</S>
    <S sid="182" ssid="40">It ignores capitalization, and written numbers, compounds and acronyms need not be written as single words.</S>
    <S sid="183" ssid="41">As shown in Table 1, the grammar-based language model reduced the word error rate by 9.2% relative over the baseline system.</S>
    <S sid="184" ssid="42">This improvement is statistically significant on a level of &lt; 0.1% for both the Matched Pairs Sentence-Segment Word Error test (MAPSSWE) and McNemar&#8217;s test (Gillick and Cox, 1989).</S>
    <S sid="185" ssid="43">If the parameters are optimized on all 447 sentences (i.e. on the test data), the word error rate is reduced by 10.7% relative.</S>
    <S sid="186" ssid="44">For comparison, we redefined the probabilistic model as P(T) _ (1 &#8722; q)qk&#8722;1, where k is the number of phrases attached to the root node.</S>
    <S sid="187" ssid="45">This reduced model only considers the grammaticality of a phrase, completely ignoring the probability of its internal structure.</S>
    <S sid="188" ssid="46">It achieved a relative word error reduction of 5.9%, which is statistically significant on a level of &lt; 0.1% for both tests.</S>
    <S sid="189" ssid="47">The improvement of the full model compared to the reduced model is weakly significant on a level of 2.6% for the MAPSSWE test.</S>
    <S sid="190" ssid="48">For both models, the optimal value of q was 0.001 for almost all training runs.</S>
    <S sid="191" ssid="49">The language model weight &#181; of the reduced model was about 60% smaller than the respective value for the full model, which confirms that the full model provides more reliable information.</S>
    <S sid="192" ssid="50">Figure 1 shows the effect of varying N (the maximum number of hypotheses) on the word error rate both for leave-one-out training and for optimizing the parameters on test data.</S>
    <S sid="193" ssid="51">The similar shapes of the two curves suggest that the observed variations are partly due to the problem structure.</S>
    <S sid="194" ssid="52">In fact, if N is increased and new hypotheses with a high value of Pgram(W) appear, the benefit of the grammarbased language model can increase (if the hypotheses are predominantly good with respect to word error rate) or decrease (if they are bad).</S>
    <S sid="195" ssid="53">This horizon effect tends to be reduced with increasing N (with the exception of 89 &lt; N &lt; 93) because hypotheses with high ranks need a much higher Pgram(W) in order to compensate for their lower value of P(O|W) &#183; P(W)&#955;.</S>
    <S sid="196" ssid="54">For small N, the parameter estimation is more severely affected by the rather accidental horizon effects and therefore is prone to overfitting.</S>
  </SECTION>
  <SECTION title="5 Conclusions and Outlook" number="5">
    <S sid="197" ssid="1">We have presented a language model based on a precise, linguistically motivated grammar, and we have successfully applied it to a difficult broad-domain task.</S>
    <S sid="198" ssid="2">It is a well-known fact that natural language is highly ambiguous: a correct and seemingly unambiguous sentence may have an enormous number of readings.</S>
    <S sid="199" ssid="3">A related &#8211; and for our approach even more relevant &#8211; phenomenon is that many weirdlooking and seemingly incorrect word sequences are in fact grammatical.</S>
    <S sid="200" ssid="4">This obviously reduces the benefit of pure grammaticality information.</S>
    <S sid="201" ssid="5">A solution is to use additional information to asses how &#8220;natural&#8221; a reading of a word sequence is.</S>
    <S sid="202" ssid="6">We have done a mum number of best hypotheses N. first step in this direction by estimating the probability of a parse tree.</S>
    <S sid="203" ssid="7">However, our model only looks at the structure of a parse tree and does not take the actual words into account.</S>
    <S sid="204" ssid="8">As N-grams and statistical parsers demonstrate, word information can be very valuable.</S>
    <S sid="205" ssid="9">It would therefore be interesting to investigate ways of introducing word information into our grammar-based model.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="6">
    <S sid="206" ssid="1">This work was supported by the Swiss National Science Foundation.</S>
    <S sid="207" ssid="2">We cordially thank Jean-Luc Gauvain of LIMSI for providing us with word lattices from their German broadcast news transcription system.</S>
  </SECTION>
</PAPER>
