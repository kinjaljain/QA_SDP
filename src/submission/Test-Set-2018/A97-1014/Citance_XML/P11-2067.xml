<PAPER>
  <S sid="0">Clause Restructuring For SMT Not Absolutely Helpful</S>
  <ABSTRACT>
    <S sid="1" ssid="1">There are a number of systems that use a syntax-based reordering step prior to phrasebased statistical MT.</S>
    <S sid="2" ssid="2">An early work proposing this idea showed improved translation performance, but subsequent work has had mixed results.</S>
    <S sid="3" ssid="3">Speculations as to cause have suggested the parser, the data, or other factors.</S>
    <S sid="4" ssid="4">We systematically investigate possible factors to give an initial answer to the question: Under what conditions does this use of syntax help PSMT?</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Phrase-based statistical machine translation (PSMT) translates documents from one human language to another by dividing text into contiguous sequences of words (phrases), translating each, and finally reordering them according to a distortion model.</S>
    <S sid="6" ssid="2">The PSMT distortion model typically does not consider linguistic information, and as such encounters difficulty in language pairs that require specific long-distance reorderings, such as German&#8211;English.</S>
    <S sid="7" ssid="3">Collins et al. (2005) address this problem by reordering German sentences to more closely parallel English word order, prior to translation by a PSMT system.</S>
    <S sid="8" ssid="4">They find that this reordering-aspreprocessing approach results in a significant improvement in translation performance over the baseline.</S>
    <S sid="9" ssid="5">However, there have been several other systems using the reordering-as-preprocessing approach, and they have met with mixed success.</S>
    <S sid="10" ssid="6">We systematically explore possible explanations for these contradictory results, and conclude that, while reordering is helpful for some sentences, potential improvement can be eroded by many aspects of the PSMT system, independent of the reordering.</S>
  </SECTION>
  <SECTION title="2 Prior Work" number="2">
    <S sid="11" ssid="1">Reordering-as-preprocessing systems typically involve three steps.</S>
    <S sid="12" ssid="2">First, the input sentence is parsed.</S>
    <S sid="13" ssid="3">Second, the parse is used to permute the words according to some reordering rules, which may be automatically or manually determined.</S>
    <S sid="14" ssid="4">Finally, a phrase-based SMT system is trained and tested using the reordered sentences as input, in place of the original sentences.</S>
    <S sid="15" ssid="5">Many such systems exist, with results being mixed; we review several here.</S>
    <S sid="16" ssid="6">Xia and McCord (2004) (English-to-French translation, using automatically-extracted reordering rules) train on the Canadian Hansard.</S>
    <S sid="17" ssid="7">On a Hansard test set, an improvement over the baseline was only seen if the translation system&#8217;s phrase table was restricted to phrases of length at most four.</S>
    <S sid="18" ssid="8">On a news test set, the reordered system performed significantly better than the baseline regardless of the maximum length of phrases.</S>
    <S sid="19" ssid="9">However, this improvement was only apparent with monotonic decoding; when using a distortion model, the difference disappeared.</S>
    <S sid="20" ssid="10">Xia and McCord attribute the drop-off in performance on the Hansard set to similarity of training and test data.</S>
    <S sid="21" ssid="11">Collins et al. (2005) (German-to-English) use six hand-crafted reordering rules targeting the placement of verbs, subjects, particles and negation.</S>
    <S sid="22" ssid="12">They train and evaluate their system on Europarl text and obtain a BLEU score (Papineni et al., 2002) of 26.8, with the baseline PSMT system achieving 25.2.</S>
    <S sid="23" ssid="13">A human evaluation confirms that reordered translations are generally (but not universally) better.</S>
    <S sid="24" ssid="14">On Web text, Xu et al. (2009) report significant improvements applying one set of hand-crafted rules to translation from English to each of five SOV languages: Korean, Japanese, Hindi, Urdu and Turkish.</S>
    <S sid="25" ssid="15">Training on news text, Wang et al. (2007) (Chinese-to-English, hand-crafted rules) report a significant improvement over the baseline system on the NIST 2006 test set, using a distance-based distortion model.</S>
    <S sid="26" ssid="16">Similar results are mentioned in passing for a lexicalised distortion model.</S>
    <S sid="27" ssid="17">Also on news text, Habash (2007) (automaticallyextracted rules, Arabic-to-English) reports a very large improvement when phrases are limited to length 1 and translation is monotonic.</S>
    <S sid="28" ssid="18">However, allowing phrases up to 7 words in length or using a distance-based distortion model causes the difference in performance to disappear.</S>
    <S sid="29" ssid="19">Habash attributes this to parser and alignment performance.</S>
    <S sid="30" ssid="20">He also includes oracle experiments, in which each system outperforms the other on 40&#8211;50% of sentences, suggesting that reordering is useful for many sentences.</S>
    <S sid="31" ssid="21">Zwarts and Dras (2007) implement six rules for Dutch-to-English translation, analogous to those of Collins et al. (2005), as part of an exploration of dependency distance in syntax-augmented PSMT.</S>
    <S sid="32" ssid="22">Considering only their baseline and reordered systems, the improvement is from 20.7 to only 20.8; they attribute their poor result to the parser used.</S>
    <S sid="33" ssid="23">Howlett and Dras (2010) reimplement the Collins et al. (2005) system for use in lattice-based translation.</S>
    <S sid="34" ssid="24">In addition to their main system, they give results for the baseline and reordered systems, training and testing on Europarl and news text.</S>
    <S sid="35" ssid="25">In strong contrast to the results of Collins et al. (2005), Howlett and Dras (2010) report 20.04 for the reordered system, below the baseline at 20.77.</S>
    <S sid="36" ssid="26">They explain their lower absolute scores as a consequence of the different test set, but do not explore the reversal in conclusion.</S>
    <S sid="37" ssid="27">Like Habash (2007), Howlett and Dras (2010) include oracle experiments which demonstrate that the reordering is useful for some sentences.</S>
    <S sid="38" ssid="28">In this paper, we focus on the Collins et al. (2005) and Howlett and Dras (2010) systems (hereafter CKK and HD), as they are the most similar but have perhaps the most divergent results.</S>
    <S sid="39" ssid="29">Possible explanations for the difference are differences in the reordering process, from either parser performance or implementation of the rules, and differences in the translation process, including PSMT system setup and data used.</S>
    <S sid="40" ssid="30">We examine parser performance in &#167;3 and the remaining possibilities in &#167;4&#8211;5.</S>
  </SECTION>
  <SECTION title="3 Parser Performance" number="3">
    <S sid="41" ssid="1">We first compare the performance of the two parsers used.</S>
    <S sid="42" ssid="2">CKK uses the Dubey and Keller (2003) parser, which is trained on the Negra corpus (Skut et al., 1997).</S>
    <S sid="43" ssid="3">HD instead uses the Berkeley parser (Petrov et al., 2006), trained on Negra&#8217;s successor, the larger Tiger corpus (Brants et al., 2002).</S>
    <S sid="44" ssid="4">Refer to Table 1 for precision and recall for each model.</S>
    <S sid="45" ssid="5">Note that the CKK reordering requires not just category labels (e.g.</S>
    <S sid="46" ssid="6">NP) but also function labels (e.g.</S>
    <S sid="47" ssid="7">SB for subject); parser performance typically goes down when these are learnt, due to sparsity.</S>
    <S sid="48" ssid="8">All models in Table 1 include function labels.</S>
    <S sid="49" ssid="9">Dubey and Keller (2003) train and test on the Negra corpus, with 18,602 sentences for training, 1,000 development and 1,000 test, removing sentences longer than 40 words.</S>
    <S sid="50" ssid="10">Petrov and Klein (2008) train and test the Berkeley parser on part of the Tiger corpus, with 20,894 sentences for training and 2,611 sentences for each of development and test, all at most 40 words long.</S>
    <S sid="51" ssid="11">The parsing model used by HD is trained on the full Tiger corpus, unrestricted for length, with 38,020 sentences for training and 2,000 sentences for development.</S>
    <S sid="52" ssid="12">The figures reported in Table 1 are the model&#8217;s performance on this development set.</S>
    <S sid="53" ssid="13">With twice as much data, the increase in performance is unsurprising.</S>
    <S sid="54" ssid="14">From these figures, we conclude that sheer parser grunt is unlikely to be responsible for the discrepancy between CKK and HD.</S>
    <S sid="55" ssid="15">It is possible that parser output differs qualitatively in some important way; parser figures alone do not reveal this.</S>
    <S sid="56" ssid="16">Here, we reuse the HD parsing model, plus five additional models trained by the same method.</S>
    <S sid="57" ssid="17">The first is trained on the same data, lowercased; the next two use only 19,000 training sentences (for one model, lowercased); the fourth uses 9,500 sentences; the fifth only 3,800 sentences.</S>
    <S sid="58" ssid="18">The 50% data models are closer to the amount of data available to CKK, and the 25% and 10% models are to investigate the effects of further reduced parser quality.</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="59" ssid="1">We conduct a number of experiments with the HD system to attempt to replicate the CKK and HD findings.</S>
    <S sid="60" ssid="2">All parts of the system are available online.1 Each experiment is paired: the reordered system reuses the recasing and language models of its corresponding baseline system, to eliminate one source of possible variation.</S>
    <S sid="61" ssid="3">Training the parser with less data affects only the reordered systems; for experiments using these models, the corresponding baselines (and thus the shared models) are not retrained.</S>
    <S sid="62" ssid="4">For each system pair, we also run the HD oracle.</S>
    <S sid="63" ssid="5">CKK uses the PSMT system Pharaoh (Koehn et al., 2003), whereas HD uses its successor Moses (Koehn et al., 2007).</S>
    <S sid="64" ssid="6">In itself, this should not cause a dramatic difference in performance, as the two systems perform similarly (Hoang and Koehn, 2008).</S>
    <S sid="65" ssid="7">However, there are a number of other differences between the two systems.</S>
    <S sid="66" ssid="8">Koehn et al. (2003) (and thus presumably CKK) use an unlexicalised distortion model, whereas HD uses a lexicalised model.</S>
    <S sid="67" ssid="9">CKK does not include a tuning (minimum error rate training) phase, unlike HD.</S>
    <S sid="68" ssid="10">Finally, HD uses a 5gram language model.</S>
    <S sid="69" ssid="11">The CKK language model is unspecified; we assume a 3-gram model would be more likely for the time.</S>
    <S sid="70" ssid="12">We explore combinations of all these choices.</S>
    <S sid="71" ssid="13">A likely cause of the results difference between HD and CKK is the data used.</S>
    <S sid="72" ssid="14">CKK used Europarl for training and test, while HD used Europarl and news for training, with news for tuning and test.</S>
    <S sid="73" ssid="15">Our first experiment attempts to replicate CKK as closely as possible, using the CKK training and test data.</S>
    <S sid="74" ssid="16">This data came already tokenized and lowercased; we thus skip tokenisation in preprocessing, use the lowercased parsing models, and skip tokenisation and casing steps in the PSMT system.</S>
    <S sid="75" ssid="17">We try both the full data and 50% data parsing models.</S>
    <S sid="76" ssid="18">Our next experiments use untokenised and cased text from the Workshop on Statistical Machine Translation.</S>
    <S sid="77" ssid="19">To remain close to CKK, we use data from the 2009 Workshop,2 which provided Europarl sets for both training and development.</S>
    <S sid="78" ssid="20">We use europarl-v4 for training, test2007 for tuning, and test2008 for testing.</S>
    <S sid="79" ssid="21">We also run the 3-gram systems of this set with each of the reduced parser models.</S>
    <S sid="80" ssid="22">Our final experiments start to bridge the gap to HD.</S>
    <S sid="81" ssid="23">We still train on europarl-v4 (diverging from HD), but substitute one or both of the tuning and test sets with those of HD: news-test2008 and newstest2009 from the 2010 Workshop.3 For the language model, HD uses both Europarl and news text.</S>
    <S sid="82" ssid="24">To remain close to CKK, we train our language models only on the Europarl training data, and thus use considerably less data than HD here.</S>
    <S sid="83" ssid="25">All systems are evaluated using case-insensitive BLEU (Papineni et al., 2002).</S>
    <S sid="84" ssid="26">HD used the NIST BLEU scorer, which requires SGML format.</S>
    <S sid="85" ssid="27">The CKK data is plain text, so instead we report scores from the Moses multi-reference BLEU script (multibleu), using one reference translation.</S>
    <S sid="86" ssid="28">Comparing the scripts, we found that the NIST scores are always lower than multi-bleu&#8217;s on test2008, but higher on newstest2009, with differences at most 0.23.</S>
    <S sid="87" ssid="29">This partially indicates the noise level in the scores.</S>
  </SECTION>
  <SECTION title="5 Results" number="5">
    <S sid="88" ssid="1">Results for the first experiments, closely replicating CKK, are given in Table 3.</S>
    <S sid="89" ssid="2">The results are very similar to the those CKK reported (baseline 25.2, reordered 26.8).</S>
    <S sid="90" ssid="3">Thus the HD reimplementation is indeed close to the original CKK system.</S>
    <S sid="91" ssid="4">Any qualitative differences in parser output not revealed by &#167;3, in the implementation of the rules, or in the PSMT system, are thus producing only a small effect.</S>
    <S sid="92" ssid="5">Results for the remaining experiments are given in Tables 4 and 5, which give results on the test2008 and newstest2009 test sets respectively, and Table 6, which gives results on the test2008 test set using the reduced parsing models.</S>
    <S sid="93" ssid="6">We see that the choice of data can have a profound effect, nullifying or even reversing the overall result, even when the reordering system remains the same.</S>
    <S sid="94" ssid="7">Genre differences are an obvious possibility, but we have demonstrated only a dependence on data set.</S>
    <S sid="95" ssid="8">The other factors tested&#8212;language model order, lexicalisation of the distortion model, and use of a tuning phase&#8212;can all affect the overall performance gain of the reordered system, but less distinctly.</S>
    <S sid="96" ssid="9">Reducing the quality of the parsing model (by training on less data) also has a negative effect, but the drop must be substantial before it outweighs other factors.</S>
    <S sid="97" ssid="10">In all cases, the oracle outperforms both baseline and reordered systems by a large margin.</S>
    <S sid="98" ssid="11">Its selections show that, in changing test sets, the balance shifts from one system to the other, but both still contribute strongly.</S>
    <S sid="99" ssid="12">This shows that improvements are possible across the board if it is possible to correctly choose which sentences will benefit from reordering.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="6">
    <S sid="100" ssid="1">Collins et al. (2005) reported that a reorderingas-preprocessing approach improved overall performance in German-to-English translation.</S>
    <S sid="101" ssid="2">The reimplementation of this system by Howlett and Dras (2010) came to the opposite conclusion.</S>
    <S sid="102" ssid="3">We have systematically varied several aspects of the Howlett and Dras (2010) system and reproduced results close to both papers, plus a full range in between.</S>
    <S sid="103" ssid="4">Our results show that choices in the PSMT system can completely erode potential gains of the reordering preprocessing step, with the largest effect due to simple choice of data.</S>
    <S sid="104" ssid="5">We have shown that a lack of overall improvement using reordering-aspreprocessing need not be due to the usual suspects, language pair and reordering process.</S>
    <S sid="105" ssid="6">Significantly, our oracle experiments show that in all cases the reordering system does produce better translations for some sentences.</S>
    <S sid="106" ssid="7">We conclude that effort is best directed at determining for which sentences the improvement will appear.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="7">
    <S sid="107" ssid="1">Our thanks to Michael Collins for providing the data used in Collins et al. (2005), and to members of the Centre for Language Technology and the anonymous reviewers for their helpful comments.</S>
  </SECTION>
</PAPER>
