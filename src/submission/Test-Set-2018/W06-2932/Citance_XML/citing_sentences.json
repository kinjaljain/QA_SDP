[
  {
    "citance_number": 2, 
    "citing_paper_id": "W06-2920", 
    "raw_text": "Introduce through post-processing ,e.g. through reattachment rules (Bick, 2006) or if the change increases overall parse tree probability (McDonald et al, 2006)", 
    "clean_text": "Introduce through post-processing ,e.g. through reattachment rules (Bick, 2006) or if the change increases overall parse tree probability (McDonald et al, 2006)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 3, 
    "citing_paper_id": "W06-2920", 
    "raw_text": "Table 5 shows the official results for submitted parser outputs.31 The two participant groups with the highest total score are McDonald et al (2006) and Nivre et al (2006)", 
    "clean_text": "Table 5 shows the official results for submitted parser outputs. The two participant groups with the highest total score are McDonald et al (2006) and Nivre et al (2006)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 4, 
    "citing_paper_id": "W06-2920", 
    "raw_text": "Even though McDonald et al (2006) and Nivre et al (2006) obtained very similar overall scores, a more detailed look at their performance shows clear differences", 
    "clean_text": "Even though McDonald et al (2006) and Nivre et al (2006) obtained very similar overall scores, a more detailed look at their performance shows clear differences", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 5, 
    "citing_paper_id": "W08-1007", 
    "raw_text": "The high est score on parsing German in the CoNLL-X shared task was obtained by the system of McDonald et al (2006) with a LAS of 87.34 based on the TIGER tree bank, but we want to stress that these results are not comparable due to different data sets (anda different policy regarding the inclusion of punctuation) .The constituency versions were evaluated according to the labeled recall (LR), labeled precision (LP) and labeled F-score (LF)", 
    "clean_text": "The highest score on parsing German in the CoNLL-X shared task was obtained by the system of McDonald et al (2006) with a LAS of 87.34 based on the TIGER tree bank, but we want to stress that these results are not comparable due to different data sets (and a different policy regarding the inclusion of punctuation). The constituency versions were evaluated according to the labeled recall (LR), labeled precision (LP) and labeled F-score (LF)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 6, 
    "citing_paper_id": "W09-1210", 
    "raw_text": "McDonald et al (2006) use an additional algorithm", 
    "clean_text": "McDonald et al (2006) use an additional algorithm", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 7, 
    "citing_paper_id": "W12-3407", 
    "raw_text": "Regarding the data-driven parsers, we have made use of MaltParser (Nivre et al, 2007b) and MST Parser (McDonald et al, 2006), two state of the art dependency parsers representing two dominant approaches in data-driven dependency parsing, and that have been successfully applied to typologically different languages and tree banks (McDonald and Nivre, 2007)", 
    "clean_text": "Regarding the data-driven parsers, we have made use of MaltParser (Nivre et al, 2007b) and MST Parser (McDonald et al, 2006), two state of the art dependency parsers representing two dominant approaches in data-driven dependency parsing, and that have been successfully applied to typologically different languages and tree banks (McDonald and Nivre, 2007)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 8, 
    "citing_paper_id": "I08-1012", 
    "raw_text": "In fact, our approach can also be applied to other parsers, such as (Yamada and Matsumoto, 2003)? s parser, (McDonald et al., 2006)? s parser, and so on", 
    "clean_text": "In fact, our approach can also be applied to other parsers, such as (Yamada and Matsumoto, 2003)'s parser, (McDonald et al., 2006)'s parser, and so on", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 9, 
    "citing_paper_id": "N07-1050", 
    "raw_text": "But whereas the spanning tree parser of McDonald et al (2006) and the pseudo-projective parser of Nivre et al (2006) achieve this performance only with special preorpost-processing,7 the approach presented here derives a labeled non-projective graph in a single incremental process and hence at least has the advantage of simplicity", 
    "clean_text": "But whereas the spanning tree parser of McDonald et al (2006) and the pseudo-projective parser of Nivre et al (2006) achieve this performance only with special pre or post-processing, the approach presented here derives a labeled non-projective graph in a single incremental process and hence at least has the advantage of simplicity", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 10, 
    "citing_paper_id": "N07-1050", 
    "raw_text": "Moreover, it has better time complexity than the approximate second-order spanning tree parsing of McDonald et al (2006), which has exponential complexity in the worst case (although this does not appear to be a problem in practice)", 
    "clean_text": "Moreover, it has better time complexity than the approximate second-order spanning tree parsing of McDonald et al (2006), which has exponential complexity in the worst case (although this does not appear to be a problem in practice)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 11, 
    "citing_paper_id": "N07-1050", 
    "raw_text": "We have shown that, for languages with a7McDonald et al (2006) use post-processing for non projective dependencies and for labeling", 
    "clean_text": "McDonald et al (2006) use post-processing for non-projective dependencies and for labeling", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 12, 
    "citing_paper_id": "D07-1122", 
    "raw_text": "As described in (McDonald et al, 2006), we treat the labeling of dependencies as a sequence labeling problem", 
    "clean_text": "As described in (McDonald et al, 2006), we treat the labeling of dependencies as a sequence labeling problem", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 13, 
    "citing_paper_id": "W11-0314", 
    "raw_text": "ULISSE was tested against the output of two really different data? driven parsers: the first? order Maximum Spanning Tree (MST) parser (McDonald et al., 2006) and the DeSR parser (Attardi, 2006) using Support Vector Machine as learning algorithm", 
    "clean_text": "ULISSE was tested against the output of two really different data driven parsers: the first order Maximum Spanning Tree (MST) parser (McDonald et al., 2006) and the DeSR parser (Attardi, 2006) using Support Vector Machine as learning algorithm", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 14, 
    "citing_paper_id": "D07-1015", 
    "raw_text": "5It should be noted that McDonald et al (2006) use a richer feature set that is incomparable to our features", 
    "clean_text": "It should be noted that McDonald et al (2006) use a richer feature set that is incomparable to our features", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 16, 
    "citing_paper_id": "D10-1069", 
    "raw_text": "The dependency parsers that we compare are the deterministic shift-reduce MaltParser (Nivre et al, 2007) and the second-order minimum spanning tree algorithm based MstParser (McDonald et al, 2006)", 
    "clean_text": "The dependency parsers that we compare are the deterministic shift-reduce MaltParser (Nivre et al, 2007) and the second-order minimum spanning tree algorithm based MstParser (McDonald et al, 2006)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 18, 
    "citing_paper_id": "D10-1004", 
    "raw_text": "Entries marked with? are the highest reported in the literature, to the best of our knowledge, beating (sometimes slightly) McDonald et al (2006), Martins et al (2008), Martins et al (2009), and, in the case of English Proj., also the third-order parser of Koo and Collins (2010), which achieves 93.04% on that dataset (their experiments in Czech are not comparable, since the datasets are different)", 
    "clean_text": "Entries marked with are the highest reported in the literature, to the best of our knowledge, beating (sometimes slightly) McDonald et al (2006), Martins et al (2008), Martins et al (2009), and, in the case of English Proj., also the third-order parser of Koo and Collins (2010), which achieves 93.04% on that dataset (their experiments in Czech are not comparable, since the datasets are different)", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 19, 
    "citing_paper_id": "P08-1108", 
    "raw_text": "The specific graph-based model studied in this work is that presented by McDonald et al (2006), which factors scores over pairs of arcs (instead of just single arcs) and uses near exhaustive search for unlabeled parsing coupled with a separate classifier to label each arc. We call this system MSTParser, or simply MST for short, which is also the name of the freely available implementation.2 2.3 Transition-Based Models", 
    "clean_text": "The specific graph-based model studied in this work is that presented by McDonald et al (2006), which factors scores over pairs of arcs (instead of just single arcs) and uses near exhaustive search for unlabeled parsing coupled with a separate classifier to label each arc. We call this system MSTParser, or simply MST for short, which is also the name of the freely available implementation.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_number": 20, 
    "citing_paper_id": "P08-1108", 
    "raw_text": "More precisely, dependency arcs (or pairs of arcs) are first represented by a high dimensional feature vector f (i, j, l)? Rk, where f is typically a bi nary feature vector over properties of the arc as well as the surrounding input (McDonald et al, 2005a; McDonald et al, 2006)", 
    "clean_text": "More precisely, dependency arcs (or pairs of arcs) are first represented by a high dimensional feature vector f (i, j, l) Rk, where f is typically a binary feature vector over properties of the arc as well as the surrounding input (McDonald et al, 2005a; McDonald et al, 2006)", 
    "keep_for_gold": 0
  }
]