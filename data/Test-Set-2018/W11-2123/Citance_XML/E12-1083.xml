<PAPER>
  <S sid="0">Structural and Topical Dimensions in Multi-Task Patent Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Patent translation is a complex problem due to the highly specialized technical vocabulary and the peculiar textual structure of patent documents.</S>
    <S sid="2" ssid="2">In this paper we analyze patents along the orthogonal dimensions of topic and textual structure.</S>
    <S sid="3" ssid="3">We view different patent classes and different patent text sections such as title, abstract, and claims, as separate translation tasks, and investigate the influence of such tasks on machine translation performance.</S>
    <S sid="4" ssid="4">We study multitask learning techniques that exploit commonalities between tasks by mixtures of translation models or by multi-task metaparameter tuning.</S>
    <S sid="5" ssid="5">We find small but significant gains over task-specific training by techniques that model commonalities through shared parameters.</S>
    <S sid="6" ssid="6">A by-product of our work is a parallel patent corpus of 23 million German-English sentence pairs.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">Patents are an important tool for the protection of intellectual property and also play a significant role in business strategies in modern economies.</S>
    <S sid="8" ssid="2">Patent translation is an enabling technique for patent prior art search which aims to detect a patent&#8217;s novelty and thus needs to be cross-lingual for a multitude of languages.</S>
    <S sid="9" ssid="3">Patent translation is complicated by a highly specialized vocabulary, consisting of technical terms specific to the field of invention the patent relates to.</S>
    <S sid="10" ssid="4">Patents are written in a sophisticated legal jargon (&#8220;patentese&#8221;) that is not found in everyday language and exhibits a complex textual structure.</S>
    <S sid="11" ssid="5">Also, patents are often intentionally ambiguous or vague in order to maximize the coverage of the claims.</S>
    <S sid="12" ssid="6">In this paper, we analyze patents with respect to the orthogonal dimensions of topic &#8211; the technical field covered by the patent &#8211; and structure &#8211; a patent&#8217;s text sections &#8211;, with respect to their influence on machine translation performance.</S>
    <S sid="13" ssid="7">The topical dimension of patents is characterized by the International Patent Classification (IPC)1 which categorizes patents hierarchically into 8 sections, 120 classes, 600 subclasses, down to 70,000 subgroups at the leaf level.</S>
    <S sid="14" ssid="8">Table 1 shows the 8 top level sections.</S>
    <S sid="15" ssid="9">Orthogonal to the patent classification, patent documents can be sub-categorized along the dimension of textual structure.</S>
    <S sid="16" ssid="10">Article 78.1 of the European Patent Convention (EPC) lists all sections required in a patent document2: &#8221;A European patent application shall contain: (a) a request for the grant of a European patent; (d) any drawings referred to in the description or the claims; (e) an abstract, and satisfy the requirements laid down in the Implementing Regulations.&#8221; The request for grant contains the patent title; thus a patent document comprises the textual elements of title, description, claim, and abstract.</S>
    <S sid="17" ssid="11">We investigate whether it is worthwhile to treat different values along the structural and topical dimensions as different tasks that are not completely independent of each other but share some commonalities, yet differ enough to counter a simple pooling of data.</S>
    <S sid="18" ssid="12">For example, we consider different tasks such as patents from different IPC classes, or along an orthogonal dimension, patent documents of all IPC classes but consisting only of titles or only of claims.</S>
    <S sid="19" ssid="13">We ask whether such tasks should be addressed as separate translation tasks, or whether translation performance can be improved by learning several tasks simultaneously through shared models that are more sophisticated than simple data pooling.</S>
    <S sid="20" ssid="14">Our goal is to learn a patent translation system that performs well across several different tasks, thus benefits from shared information, but is yet able to address the specifics of each task.</S>
    <S sid="21" ssid="15">One contribution of this paper is a thorough analysis of the differences and similarities of multilingual patent data along the dimensions of textual structure and topic.</S>
    <S sid="22" ssid="16">The second contribution is the experimental investigation of the influence of various such tasks on patent translation performance.</S>
    <S sid="23" ssid="17">Starting from baseline models that are trained on individual tasks or on data pooled from all tasks, we apply mixtures of translation models and multi-task minimum error rate training to multiple patent translation tasks.</S>
    <S sid="24" ssid="18">A by-product of our research is a parallel patent corpus of over 23 million sentence pairs.</S>
  </SECTION>
  <SECTION title="2 Related work" number="2">
    <S sid="25" ssid="1">Multi-task learning has mostly been discussed under the name of multi-domain adaptation in the area of statistical machine translation (SMT).</S>
    <S sid="26" ssid="2">If we consider domains as tasks, domain adaptation is a special two-task case of multi-task learning.</S>
    <S sid="27" ssid="3">Most previous work has concentrated on adapting unsupervised generative modules such as translation models or language models to new tasks.</S>
    <S sid="28" ssid="4">For example, transductive approaches have used automatic translations of monolingual corpora for self-training modules of the generative SMT pipeline (Ueffing et al., 2007; Schwenk, 2008; Bertoldi and Federico, 2009).</S>
    <S sid="29" ssid="5">Other approaches have extracted parallel data from similar or comparable corpora (Zhao et al., 2004; Snover et al., 2008).</S>
    <S sid="30" ssid="6">Several approaches have been presented that train separate translation and language models on task-specific subsets of the data and combine them in different mixture models (Foster and Kuhn, 2007; Koehn and Schroeder, 2007; Foster et al., 2010).</S>
    <S sid="31" ssid="7">The latter kind of approach is applied in our work to multiple patent tasks.</S>
    <S sid="32" ssid="8">Multi-task learning efforts in patent translation have so far been restricted to experimental combinations of translation and language models from different sets of IPC sections.</S>
    <S sid="33" ssid="9">For example, Utiyama and Isahara (2007) and Tinsley et al. (2010) investigate translation and language models trained on different sets of patent sections, with larger pools of parallel data improving results.</S>
    <S sid="34" ssid="10">Ceaus&#184;u et al. (2011) find that language models always and translation model mostly benefit from larger pools of data from different sections.</S>
    <S sid="35" ssid="11">Models trained on pooled patent data are used as baselines in our approach.</S>
    <S sid="36" ssid="12">The machine learning community has developed several different formalizations of the central idea of trading off optimality of parameter vectors for each task-specific model and closeness of these model parameters to the average parameter vector across models.</S>
    <S sid="37" ssid="13">For example, starting from a separate SVM for each task, Evgeniou and Pontil (2004) present a regularization method that trades off optimization of the task-specific parameter vectors and the distance of each SVM to the average SVM.</S>
    <S sid="38" ssid="14">Equivalent formalizations replace parameter regularization by Bayesian prior distributions on the parameters (Finkel and Manning, 2009) or by augmentation of the feature space with domain independent features (Daum&#180;e, 2007).</S>
    <S sid="39" ssid="15">Besides SVMs, several learning algorithms have been extended to the multi-task scenario in a parameter regularization setting, e.g., perceptron-type algorithms (Dredze et al., 2010) or boosting (Chapelle et al., 2011).</S>
    <S sid="40" ssid="16">Further variants include different formalizations of norms for parameter regularization, e.g., f1,2 regularization (Obozinski et al., 2010) or Ei regularization (Quattoni et al., 2009), where only the features that are most important across all tasks are kept in the model.</S>
    <S sid="41" ssid="17">In our experiments, we apply parameter regularization for multi-task learning to minimum error rate training for patent translation.</S>
  </SECTION>
  <SECTION title="3 Extraction of a parallel patent corpus from comparable data" number="3">
    <S sid="42" ssid="1">Our work on patent translation is based on the MAREC3 patent data corpus.</S>
    <S sid="43" ssid="2">MAREC contains over 19 million patent applications and granted patents in a standardized format from four patent organizations (European Patent Office (EP), World Intellectual Property Organization (WO), United States Patent and Trademark Office (US), Japan Patent Office (JP)), from 1976 to 2008.</S>
    <S sid="44" ssid="3">The data for our experiments are extracted from the EP and WO collections which contain patent documents that include translations of some of the patent text.</S>
    <S sid="45" ssid="4">To extract such parallel patent sections, we first determine the longest instance, if different kinds4 exist for a patent.</S>
    <S sid="46" ssid="5">We assume titles to be sentence-aligned by default, and define sections with a token ratio larger than 0.7 as parallel.</S>
    <S sid="47" ssid="6">For the language pair GermanEnglish we extracted a total of 2,101,107 parallel titles, 291,716 parallel abstracts, and 735,667 parallel claims sections.</S>
    <S sid="48" ssid="7">The lack of directly translated descriptions poses a serious limitation for patent translation, since this section constitutes the largest part of the document.</S>
    <S sid="49" ssid="8">It is possible to obtain comparable descriptions from related patents that have been filed in different countries and are connected through the patent family id.</S>
    <S sid="50" ssid="9">We extracted 172,472 patents that were both filed with the USPTO and the EPO and contain an English and a German description, respectively.</S>
    <S sid="51" ssid="10">For sentence alignment, we used the Gargantua5 tool (Braune and Fraser, 2010) that filters a sentence-length based alignment with IBM Model-1 lexical word translation probabilities, estimated on parallel data obtained from the firstpass alignment.</S>
    <S sid="52" ssid="11">This yields the parallel corpus listed in table 2 with high input-output ratios for claims, and much lower ratios for abstracts and descriptions, showing that claims exhibit a natural parallelism due to their structure, while abstracts and descriptions are considerably less parallel.</S>
    <S sid="53" ssid="12">Removing duplicates and adding parallel titles results in a corpus of over 23 million parallel sentence pairs.</S>
    <S sid="54" ssid="13">Differences between the text sections become visible in an analysis of token to type ratios.</S>
    <S sid="55" ssid="14">Table 3 gives the average number of tokens compared to the average type frequencies for a window of 100,000 tokens from every subsection.</S>
    <S sid="56" ssid="15">It shows that titles contain considerably fewer tokens than other sections, however, the disadvantage is partially made up by a relatively large amount of types, indicated by a lower average type frequency. tokens types We reserved patent data published between 1979 and 2007 for training and documents published in 2008 for tuning and testing in SMT.</S>
    <S sid="57" ssid="16">For the dimension of text sections, we sampled 500,000 sentences &#8211; distributed across all IPC sections &#8211; for training and 2,000 sentences for each text section for development and testing.</S>
    <S sid="58" ssid="17">Because of a relatively high number of identical sentences in test and training set for titles, we removed the overlap for this section.</S>
    <S sid="59" ssid="18">Table 4 shows the distribution of IPC sections on claims, with the smallest class accounting for around 300,000 parallel sentences.</S>
    <S sid="60" ssid="19">In order to obtain similar amounts of training data for each task along the topical dimension, we sampled 300,000 sentences from each IPC class for training, and 2,000 sentences for each IPC class for development and testing.</S>
  </SECTION>
  <SECTION title="4 Machine translation experiments" number="4">
    <S sid="61" ssid="1">For our experiments we used the phrase-based, open-source SMT toolkit Moses6 (Koehn et al., 2007).</S>
    <S sid="62" ssid="2">For language modeling, we computed 5-gram models using IRSTLM7 (Federico et al., 2008) and queried the model with KenLM (Heafield, 2011).</S>
    <S sid="63" ssid="3">BLEU (Papineni et al., 2001) scores were computed up to 4-grams on lowercased data.</S>
  </SECTION>
  <SECTION title="Europarl-v6 MAREC" number="5">
    <S sid="64" ssid="1">Table 5 shows a first comparison of results of Moses models trained on 500,000 parallel sentences from patent text sections balanced over IPC classes, against Moses trained on 1.7 Million sentences of parliament proceedings from Europarl8 (Koehn, 2005).</S>
    <S sid="65" ssid="2">The best result on each section is indicated in bold face.</S>
    <S sid="66" ssid="3">The Europarl model performs very poorly on all three sections in comparison to the task-specific MAREC model, although the former has been learned on more than three times the amount of data.</S>
    <S sid="67" ssid="4">An analysis of the output of both system shows that the Europarl model suffers from two problems: Firstly, there is an obvious out of vocabulary (OOV) problem of the Europarl model compared to the MAREC model.</S>
    <S sid="68" ssid="5">Secondly, the Europarl model suffers from incorrect word sense disambiguation, as illustrated by the samples in table 6. source steuerbar leitet Europarl taxable is in charge of MAREC controllable guiding reference controllable guides Table 7 shows the results of the evaluation across text sections; we measured the performance of separately trained and tuned individual models on every section.</S>
    <S sid="69" ssid="6">The results allow some conclusions about the textual characteristics of the sections and indicate similarities.</S>
    <S sid="70" ssid="7">Naturally, every task is best translated with a model trained on the respective section, as the BLEU scores on the diagonal are the highest in every column.</S>
    <S sid="71" ssid="8">Accordingly, we are interested in the runner-up on each section, which is indicated in bold font.</S>
    <S sid="72" ssid="9">The results on abstracts suggest that this section bears the strongest resemblance to claims, since the model trained on claims achieves a respectable score.</S>
    <S sid="73" ssid="10">The abstract model seems to be the most robust and varied model, yielding the runner-up score on all other sections.</S>
    <S sid="74" ssid="11">Claims are easiest to translate, yielding the highest overall BLEU score of 0.4879.</S>
    <S sid="75" ssid="12">In contrast to that, all models score considerably lower on titles. test train abstract claim title desc. abstract 0.3737 0.4076 0.2681 0.2812 claim 0.3416 0.4879 0.2420 0.2623 title 0.2839 0.3512 0.3196 0.1743 desc.</S>
    <S sid="76" ssid="13">0.32189 0.403 0.2342 0.3347 The cross-section evaluation on the IPC classes (table 8) shows similar patterns.</S>
    <S sid="77" ssid="14">Each section is best translated with a model trained on data from the same section.</S>
    <S sid="78" ssid="15">Note that best section scores vary considerably, ranging from 0.5719 on C to 0.4714 on H, indicating that higher-scoring classes, such as C and A, are more homogeneous and therefore easier to translate.</S>
    <S sid="79" ssid="16">C, the Chemistry section, presumably benefits from the fact that the data contain chemical formulae, which are language-independent and do not have to be translated.</S>
    <S sid="80" ssid="17">Again, for determining the relationship between the classes, we examine the best runner-up on each section, considering the BLEU score, although asymmetrical, as a kind of measure of similarity between classes.</S>
    <S sid="81" ssid="18">We can establish symmetric relationships between sections A and C, B and F as well as G and H, which means that the models are mutual runner-up on the other&#8217;s test section.</S>
    <S sid="82" ssid="19">The similarities of translation tasks established in the previous section can be confirmed by information-theoretic similarity measures that perform a pairwise comparison of the vocabulary probability distribution of each task-specific corpus.</S>
    <S sid="83" ssid="20">This distribution is calculated on the basis of the 500 most frequent words in the union of two corpora, normalized by vocabulary size.</S>
    <S sid="84" ssid="21">As metric we use the A-distance measure of Kifer et al. (2004).</S>
    <S sid="85" ssid="22">If A is the set of events on which the word distributions of two corpora are defined, then the A-distance is the supremum of the difference of probabilities assigned to the same event.</S>
    <S sid="86" ssid="23">Low distance means higher similarity.</S>
    <S sid="87" ssid="24">Table 9 shows the A-distance of corpora specific to IPC classes.</S>
    <S sid="88" ssid="25">The most similar section or sections &#8211; apart from the section itself on the diagonal &#8211; is indicated in bold face.</S>
    <S sid="89" ssid="26">The pairwise similarity of A and C, B and F, G and H obtained by BLEU score is confirmed.</S>
    <S sid="90" ssid="27">Furthermore, a close similarity between E and F is indicated.</S>
    <S sid="91" ssid="28">G and H (electricity and physics, respectively) are very similar to each other but not close to any other section apart from B.</S>
    <S sid="92" ssid="29">One straightforward technique to exploit commonalities between tasks is pooling data from separate tasks into a single training set.</S>
    <S sid="93" ssid="30">Instead of a trivial enlargement of training data by pooling, we train the pooled models on the same amount of sentences as the individual models.</S>
    <S sid="94" ssid="31">For instance, the pooled model for the pairing of IPC section B and C is trained on a data set composed of 150,000 sentences from each IPC section.</S>
    <S sid="95" ssid="32">The pooled model for pairing data from abstracts and claims is trained on data composed of 250,000 sentences from each text section.</S>
    <S sid="96" ssid="33">Another approach to exploit commonalities between tasks is to train separate language and translation models9 on the sentences from each task and combine the models in the global log-linear model of the SMT framework, following Foster and Kuhn (2007) and Koehn and Schroeder (2007).</S>
    <S sid="97" ssid="34">Model combination is accomplished by adding additional language model and translation model features to the log-linear model and tuning the additional meta-parameters by standard minimum error rate training (Bertoldi et al., 2009).</S>
    <S sid="98" ssid="35">We try out mixture and pooling for all pairwise combinations of the three structural sections, for which we have high-quality data, i.e. abstract, claims and title.</S>
    <S sid="99" ssid="36">Due to the large number of possible combinations of IPC sections, we limit the experiments to pairs of similar sections, based on the A-distance measure.</S>
    <S sid="100" ssid="37">Table 10 lists the results for two combinations of data from different sections: a log-linear mixture of separately trained models and simple pooling, i.e. concatenation, of the training data.</S>
    <S sid="101" ssid="38">Overall, the mixture models perform slightly better than the pooled models on the text sections, although the difference is significant only in two cases.</S>
    <S sid="102" ssid="39">This is indicated by highlighting best results in bold face (with more than one result highlighted if the difference is not significant).10 We investigate the same mixture and pooling techniques on the IPC sections we considered pairwise similar (see table 11).</S>
    <S sid="103" ssid="40">Somehow contradicting the former results, the mixture models perform significantly worse than the pooled model on three sections.</S>
    <S sid="104" ssid="41">This might be the result of inadequate tuning, since most of the time the MERT algorithm did not converge after the maximum number of iterations, due to the larger number of features when using several models.</S>
    <S sid="105" ssid="42">A comparison of the results for pooling and mixture with the respective results for individual models (tables 7 and 8) shows that replacing data from the same task by data from related tasks decreases translation performance in almost all cases.</S>
    <S sid="106" ssid="43">The exception is the title model that benefits from pooling and mixing with both abstracts and claims due to their richer data structure.</S>
    <S sid="107" ssid="44">In contrast to task pooling and task mixtures, the specific setting addressed by multi-task minimum error rate training is one in which the generative SMT pipeline is not adaptable.</S>
    <S sid="108" ssid="45">Such situations arise if there are not enough data to train translation models or language models on the new tasks.</S>
    <S sid="109" ssid="46">However, we assume that there are enough parallel data available to perform meta-parameter tuning by minimum error rate training (MERT) (Och, 2003; Bertoldi et al., 2009) for each task.</S>
    <S sid="110" ssid="47">A generic algorithm for multi-task learning can be motivated as follows: Multi-task learning aims to take advantage of commonalities shared among tasks by learning several independent but related tasks together.</S>
    <S sid="111" ssid="48">Information is shared between tasks through a joint representation and introduces an inductive bias.</S>
    <S sid="112" ssid="49">Evgeniou and Pontil (2004) propose a regularization method that balances task-specific parameter vectors and their distance to the average.</S>
    <S sid="113" ssid="50">The learning objective is to minimize task-specific loss functions ld across all tasks d with weight vectors wd, while keeping each parameter vector close to the average D &#65533;d 1 wd = wavg.</S>
    <S sid="114" ssid="51">This is enforced by minimizing the norm (here the `1-norm) of the difference of each task-specific weight vector to the avarage weight vector.</S>
    <S sid="115" ssid="52">The MMERT algorithm is given in figure 1.</S>
    <S sid="116" ssid="53">The algorithm starts with initial weights w(0).</S>
    <S sid="117" ssid="54">At each iteration step, the average of the parameter vectors from the previous iteration is computed.</S>
    <S sid="118" ssid="55">For each task d E D, one iteration of standard MERT is called, continuing from weight vector w(t&#8722;1) dand minimizing translation loss function ld on the data from task d. The individually tuned weight vectors returned by MERT are then moved towards the previously calculated average by adding or subtracting a penalty term A for each weight component w(t) d [k].</S>
    <S sid="119" ssid="56">If a weight moves beyond the average, it is clipped to the average value.</S>
    <S sid="120" ssid="57">The process is iterated until a stopping criterion is met, e.g. a threshold on the maximum change in the average weight vector.</S>
    <S sid="121" ssid="58">The parameter A controls the influence of the regularization.</S>
    <S sid="122" ssid="59">A larger A pulls the weights closer to the average, a smaller A leaves more freedom to the individual tasks.</S>
    <S sid="123" ssid="60">The weight updates and the clipping strategy can be motivated in a framework of gradient descent optimization under `1-regularization (Tsuruoka et al., 2009).</S>
    <S sid="124" ssid="61">Assuming MERT as algorithmic minimizer11 of the loss function ld in equation 1, the weight update towards the average follows from the subgradient of the i1 regularizer.</S>
    <S sid="125" ssid="62">Since w(t) avg is taken as average over weights wd from the step before, the term w(t) Gradient descent minimization tells us to move in the opposite direction of the subgradient, thus motivating the addition or subtraction of the regularization penalty.</S>
    <S sid="126" ssid="63">Clipping is motivated by the desire to avoid oscillating parameter weights and in order to to enforce parameter sharing.</S>
    <S sid="127" ssid="64">Experimental results for multi-task MERT (MMERT) are reported for both dimensions of patent tasks.</S>
    <S sid="128" ssid="65">For the IPC sections we trained a pooled model on 1,000,000 sentences sampled from abstracts and claims from all sections.</S>
    <S sid="129" ssid="66">We did not balance the sections but kept their original distribution, reflecting a real-life task where the distribution of sections is unknown.</S>
    <S sid="130" ssid="67">We then extend this experiment to the structural dimension.</S>
    <S sid="131" ssid="68">Since we do not have an intuitive notion of a natural distribution for the text sections, we train a balanced pooled model on a corpus composed of 170,000 sentences each from abstracts, claims and titles, i.e.</S>
    <S sid="132" ssid="69">510,000 sentences in total.</S>
    <S sid="133" ssid="70">For both dimensions, for each task, we sampled 2,000 parallel sentences for development, developmenttesting, and testing from patents that were published in different years than the training data.</S>
    <S sid="134" ssid="71">We compare the multi-task experiments with two baselines.</S>
    <S sid="135" ssid="72">The first baseline is individual task learning, corresponding to standard separate MERT tuning on each section (individual).</S>
    <S sid="136" ssid="73">This results in three separately learned weight vectors 11MERT as presented in Och (2003) is not a gradientbased optimization techniquem, thus MMERT is strictly speaking only &#8220;inspired&#8221; by gradient descent optimization. for each task, where no information has been shared between the tasks.</S>
    <S sid="137" ssid="74">The second baseline simulates the setting where the sections are not differentiated at all.</S>
    <S sid="138" ssid="75">We tune the model on a pooled development set of 2,000 sentences that combines the same amount of data from all sections (pooled).</S>
    <S sid="139" ssid="76">This yields a single joint weight vector for all tasks optimized to perform well across all sections.</S>
    <S sid="140" ssid="77">Furthermore, we compare multi-task MERT tuning with two parameter averaging methods.</S>
    <S sid="141" ssid="78">The first method computes the arithmetic mean of the weight vectors returned by the individual baseline for each weight component, yielding a joint average vector for all tasks (average).</S>
    <S sid="142" ssid="79">The second method takes the last average vector computed during multi-task MERT tuning (MMERT-average).12 Tables 12 and 13 give the results for multi-task learning on text and IPC sections.</S>
    <S sid="143" ssid="80">The latter results have been presented earlier in Simianer et al. (2011).</S>
    <S sid="144" ssid="81">The former table extends the technique of multi-task MERT to the structural dimension of patent SMT tasks.</S>
    <S sid="145" ssid="82">In all experiments, the parameter A was adjusted to 0.001 after evaluating different settings on a development set.</S>
    <S sid="146" ssid="83">The best result on each section is indicated in bold face; * indicates significance with respect to the individual baseline, + the same for the pooled baseline.</S>
    <S sid="147" ssid="84">We observe statistically significant improvements of 0.5 to 1% BLEU over the individual baseline for claims and titles; for abstracts, the multi-task variant yields the same result as the baseline, while the averaging methods perform worse.</S>
    <S sid="148" ssid="85">Multi-task MERT yields the best result for claims; on titles, the simple average and the last MMERT average dominate.</S>
    <S sid="149" ssid="86">Pooled tuning always performs significantly worse than any other method, confirming that it is beneficial to differentiate between the text section sections.</S>
    <S sid="150" ssid="87">Similarly for IPC sections, small but statistically significant improvements over the individual and pooled baselines are achieved by multi-task tuning and averaging over IPC sections, excepting C and D. However, an advantage of multi-task tuning over averaging is hard to establish.</S>
    <S sid="151" ssid="88">Note that the averaging techniques implicitly benefit from a larger tuning set.</S>
    <S sid="152" ssid="89">In order to ascertain that the improvements by averaging are not 12The aspect of averaging found in all of our multi-task learning techniques effectively controls for optimizer instability as mentioned in Clark et al. (2011). simply due to increasing the size of the tuning set, we ran a control experiment where we tuned the model on a pooled development set of 3 x 2, 000 sentences for text sections and on a development set of 8 x 2, 000 sentences for IPC sections.</S>
    <S sid="153" ssid="90">The results given in table 14 show that tuning on a pooled set of 6,000 text sections yields only minimal differences to tuning on 2,000 sentence pairs such that the BLEU scores for the new pooled models are still significantly lower than the best results in table 12 (indicated by &#8220;&lt;&#8221;).</S>
    <S sid="154" ssid="91">However, increasing the tuning set to 16,000 sentence pairs for IPC sections makes the pooled baseline perform as well as the best results in table 13, except for two cases (indicated by &#8220;&lt;&#8221;) (see table 15).</S>
    <S sid="155" ssid="92">This is due to the smaller differences between best and worst results for tuning on IPC sections compared to tuning on text sections, indicating that IPC sections are less well suited for multi-task tuning than the textual domains.</S>
    <S sid="156" ssid="93">ley et al. (2010) and Utiyama and Isahara (2007).</S>
    <S sid="157" ssid="94">A caveat in this situation is that data need to be from the general patent domain, as shown by the inferior performance of a large Europarl-trained model compared to a small patent-trained model.</S>
    <S sid="158" ssid="95">The goal of this paper is to analyze patent data along the topical dimension of IPC classes and along the structural dimension of textual sections.</S>
    <S sid="159" ssid="96">Instead of trying to beat a pooling baseline that simply increases the data size, our research goal is to investigate whether different subtasks along these dimensions share commonalities that can fruitfully be exploited by multi-task learning in machine translation.</S>
    <S sid="160" ssid="97">We thus aim to investigate the benefits of multi-task learning in realistic situations where a simple enlargement of training data is not possible.</S>
    <S sid="161" ssid="98">Starting from baseline models that are trained on individual tasks or on data pooled from all tasks, we apply mixtures of translation models and multi-task MERT tuning to multiple patent translation tasks.</S>
    <S sid="162" ssid="99">We find small, but statistically significant improvements for multi-task MERT tuning and parameter averaging techniques.</S>
    <S sid="163" ssid="100">Improvements are more pronounced for multi-task learning on textual domains than on IPC domains.</S>
    <S sid="164" ssid="101">This might indicate that the IPC sections are less well delimitated than the structural domains.</S>
    <S sid="165" ssid="102">Furthermore, this is owing to the limited expressiveness of a standard linear model including 14-20 features in tuning.</S>
    <S sid="166" ssid="103">The available features are very coarse and more likely to capture structural differences, such as sentence length, than the lexical differences that differentiate the semantic domains.</S>
    <S sid="167" ssid="104">We expect to see larger gains due to multitask learning for discriminatively trained SMT models that involve very large numbers of features, especially when multi-task learning is done in a framework that combines parameter regularization with feature selection (Obozinski et al., 2010).</S>
    <S sid="168" ssid="105">In future work, we will explore a combination of large-scale discriminative training (Liang et al., 2006) with multi-task learning for SMT.</S>
  </SECTION>
  <SECTION title="5 Conclusion" number="6">
    <S sid="169" ssid="1">The most straightforward approach to improve machine translation performance on patents is to enlarge the training set to include all available data.</S>
    <S sid="170" ssid="2">This question has been investigated by Tins</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="7">
    <S sid="171" ssid="1">This work was supported in part by DFG grant &#8220;Cross-language Learning-to-Rank for Patent Retrieval&#8221;.</S>
  </SECTION>
</PAPER>
