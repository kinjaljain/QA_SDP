<PAPER>
  <S sid="0">Syntactic Annotations for the Google Books NGram Corpus</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present a new edition of the Google Books Ngram Corpus, which describes how often words and phrases were used over a period of five centuries, in eight languages; it reflects 6% of all books ever published.</S>
    <S sid="2" ssid="2">This new edition introduces syntactic annotations: words are tagged with their part-of-speech, and headmodifier relationships are recorded.</S>
    <S sid="3" ssid="3">The annotations are produced automatically with statistical models that are specifically adapted to historical text.</S>
    <S sid="4" ssid="4">The corpus will facilitate the study of linguistic trends, especially those related to the evolution of syntax.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">The Google Books Ngram Corpus (Michel et al., 2011) has enabled the quantitative analysis of linguistic and cultural trends as reflected in millions of books written over the past five centuries.</S>
    <S sid="6" ssid="2">The corpus consists of words and phrases (i.e., ngrams) and their usage frequency over time.</S>
    <S sid="7" ssid="3">The data is available for download, and can also be viewed through the interactive Google Books Ngram Viewer athttp://books.google.com/ngrams.</S>
    <S sid="8" ssid="4">The sheer quantity of and broad historical scope of the data has enabled a wide range of analyses (Michel et al., 2011; Ravallion, 2011).</S>
    <S sid="9" ssid="5">Of course, examining raw ngram frequencies is of limited utility when studying many aspects of linguistic change, particularly the ones related to syntax.</S>
    <S sid="10" ssid="6">For instance, most English verbs are regular (their past tense is formed by adding -ed), and the few exceptions, known as irregular verbs, tend to regularize over the centuries (Lieberman et al., 2007).</S>
    <S sid="11" ssid="7">Figure 1 illustrates how burned gradually overtook burnt, becoming more frequent around 1880.</S>
    <S sid="12" ssid="8">Unfortunately, as a study of verb regularization, this analysis is skewed by a significant confound: both words can serve as either verbs (e.g., the house burnt) or adjectives (e.g., the burnt toast).</S>
    <S sid="13" ssid="9">Because many words have multiple syntactic interpretations, such confounds often limit the utility of raw ngram frequency data.</S>
    <S sid="14" ssid="10">In this work we provide a new edition of the Google Books Ngram Corpus that contains over 8 million books, or 6% of all books ever published (cf.</S>
    <S sid="15" ssid="11">Section 3).</S>
    <S sid="16" ssid="12">Moreover, we include syntactic analysis in order to facilitate a fine-grained analysis of the evolution of syntax.</S>
    <S sid="17" ssid="13">Ngrams are annotated with part-of-speech tags (e.g., in the phrase he burnt the toast, burnt is a verb; in the burnt toast, burnt is an adjective) and head-modifier dependencies (e.g., in the phrase the little black book, little modifies book).</S>
    <S sid="18" ssid="14">The annotated ngrams are far more useful for examining the evolution of grammar and syntax.</S>
    <S sid="19" ssid="15">For our study of the regularization of the verb burn, the availability of syntactic annotations resolves the verb vs. adjective ambiguity in the original data, allowing us to only examine instances where burnt and burned appear as verbs.</S>
    <S sid="20" ssid="16">This more refined analysis suggests a crossover date for the frequency of the verb forms that is several decades earlier than the overall (verbs and adjectives) crossover.</S>
    <S sid="21" ssid="17">We use state-of-the-art statistical part-of-speech taggers and dependency parsers to produce syntactic annotations for eight languages in the Google Books collection.</S>
    <S sid="22" ssid="18">The annotations consist of 12 language universal part-of-speech tags and unlabeled head-modifier dependencies.</S>
    <S sid="23" ssid="19">Section 4 describes the models that we used and the format of the annotations in detail.</S>
    <S sid="24" ssid="20">We assess the expected annotation accuracies experimentally and discuss how we adapt the taggers and parsers to historical text in Section 5.</S>
    <S sid="25" ssid="21">The annotated ngrams are available as a new edition of the Google Books Ngram Corpus; we provide some examples from the new corpus in Figure 3.</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="26" ssid="1">Michel et al. (2011) described the construction of the first edition of the Google Books Ngram Corpus and used it to quantitatively analyze a variety of topics ranging from language growth to public health.</S>
    <S sid="27" ssid="2">The related Ngram Viewer has become a popular tool for examining language trends by experts and non-experts alike.</S>
    <S sid="28" ssid="3">In addition to studying frequency patterns in the data, researchers have also attempted to analyze the grammatical function of the ngrams (Davies, 2011).</S>
    <S sid="29" ssid="4">Such endeavors are hampered by the fact that the Ngram Corpus provides only aggregate statistics in the form of ngram counts and not the full sentences.</S>
    <S sid="30" ssid="5">Furthermore, only ngrams that pass certain occurrence thresholds are publicly available, making any further aggregation attempt futile: in heavy tail distributions like the ones common in natural languages, the counts of rare events (that do not pass the frequency threshold) can have a large cumulative mass.</S>
    <S sid="31" ssid="6">In contrast, because we have access to the full text, we can annotate ngrams to reflect the particular grammatical functions they take in the sentences they were extracted from, and can also account for the contribution of rare ngrams to otherwise frequent grammatical functions.</S>
  </SECTION>
  <SECTION title="3 Ngram Corpus" number="3">
    <S sid="32" ssid="1">The Google Books Ngram Corpus has been availableathttp://books.google.com/ngrams since 2010.</S>
    <S sid="33" ssid="2">This work presents new corpora that have been extracted from an even larger book collection, adds a new language (Italian), and introduces syntactically annotated ngrams.</S>
    <S sid="34" ssid="3">The new corpora are available in addition to the already existing ones.</S>
    <S sid="35" ssid="4">The new edition of the Ngram Corpus supports the eight languages shown in Table 1.</S>
    <S sid="36" ssid="5">The book volumes were selected from the larger collection of all books digitized at Google following exactly the procedure described in Michel et al. (2011).</S>
    <S sid="37" ssid="6">The new edition contains data from 8,116,746 books, or over 6% of all books ever published.</S>
    <S sid="38" ssid="7">The English corpus alone comprises close to half a trillion words.</S>
    <S sid="39" ssid="8">This collection of books is much larger than any other digitized collection; its generation required a substantial effort involving obtaining and manually scanning millions of books.</S>
    <S sid="40" ssid="9">We extract ngrams in a similar way to the first edition of the corpus (Michel et al., 2011), but with some notable differences.</S>
    <S sid="41" ssid="10">Previously, tokenization was done on whitespace characters and all ngrams occurring on a given page were extracted, including ones that span sentence boundaries, but omitting ngrams that span page boundaries.</S>
    <S sid="42" ssid="11">Instead, we perform tokenization and sentence boundary detection by applying a set of manually devised rules (except for Chinese, where a statistical system is used for segmentation).</S>
    <S sid="43" ssid="12">We capture sentences that span across page boundaries, and then extract ngrams only within sentences.</S>
    <S sid="44" ssid="13">As is typically done in language model estimation, we add sentence beginning ( START) and end tokens ( END ) that are included in the ngram extraction.</S>
    <S sid="45" ssid="14">This allows us to distinguish ngrams that appear in sentence-medial positions from ngrams that occur at sentence boundaries (e.g., START John).</S>
    <S sid="46" ssid="15">The differences between this edition and the first edition of the Ngram Corpus are as follows: (i) the underlying book collection has grown substantially in the meantime; (ii) OCR technology and metadata extraction have improved, resulting in higher quality digitalization; (iii) ngrams spanning sentence boundaries are omitted, and ngrams spanning page boundaries are included.</S>
    <S sid="47" ssid="16">As a result, this new edition is not a superset of the first edition.</S>
  </SECTION>
  <SECTION title="4 Syntactic Annotations" number="4">
    <S sid="48" ssid="1">In addition to extracting raw ngrams, we part-ofspeech tag and parse the entire corpus and extract syntactically annotated ngrams (see Figure 2).</S>
    <S sid="49" ssid="2">We use manually annotated treebanks of modern text (often newswire) as training data for the POS tagger and parser models.</S>
    <S sid="50" ssid="3">We discuss our approach to adapting the models to historical text in Section 5.</S>
    <S sid="51" ssid="4">1Pronouns and determiners are not explicitly annotated in the Russian treebank.</S>
    <S sid="52" ssid="5">As a result, the most common Russian nouns in the table are pronouns.</S>
    <S sid="53" ssid="6">Part-of-speech tagging is one of the most fundamental disambiguation steps in any natural language processing system.</S>
    <S sid="54" ssid="7">Over the years, POS tagging accuracies have steadily improved, appearing to plateau at an accuracy level that approaches human inter-annotator agreement (Manning, 2011).</S>
    <S sid="55" ssid="8">As we demonstrate in the next section, these numbers are misleading since they are computed on test data that is very close to the training domain.</S>
    <S sid="56" ssid="9">We therefore need to specifically adapt our models to handle noisy and historical text.</S>
    <S sid="57" ssid="10">We perform POS tagging with a state-of-the-art2 Conditional Random Field (CRF) based tagger (Lafferty et al., 2001) trained on manually annotated treebank data.</S>
    <S sid="58" ssid="11">We use the following fairly standard features in our tagger: current word, suffixes and prefixes of length 1, 2 and 3; additionally we use word cluster features (Uszkoreit and Brants, 2008) for the current word, and transition features of the cluster of the current and previous word.</S>
    <S sid="59" ssid="12">To provide a language-independent interface, we use the universal POS tagset described in detail in Petrov et al. (2012).</S>
    <S sid="60" ssid="13">This universal POS tagset defines the following twelve POS tags, which exist in similar form in most languages: NOUN (nouns), VERB (verbs), ADJ (adjectives), ADV (adverbs), PRON (pronouns), DET (determiners and articles), ADP (prepositions and postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), &#8216;.&#8217; (punctuation marks) and X (a catch-all for other categories such as abbreviations or foreign words).</S>
    <S sid="61" ssid="14">Table 2 shows the two most common words for some POS tag categories.</S>
    <S sid="62" ssid="15">It is interesting to see that there is overlap between the most frequent content words across language boundaries.</S>
    <S sid="63" ssid="16">In general, function words are more frequent than content words, resulting in somewhat less interesting examples for some POS tags.</S>
    <S sid="64" ssid="17">More typical examples might be big for adjectives, quickly for adverbs or read for verbs.</S>
    <S sid="65" ssid="18">As suggested in Petrov et al. (2012), we train on the language-specific treebank POS tags, and then map the predicted tags to the universal tags.</S>
    <S sid="66" ssid="19">Table 3 shows POS tagging accuracies on the treebank evaluation sets using the 12 universal POS tags.</S>
    <S sid="67" ssid="20">We use a dependency syntax representation, since it is intuitive to work with and can be predicted effectively.</S>
    <S sid="68" ssid="21">Additionally, dependency parse tree corpora exist for several languages, making the representation desirable from a practical standpoint.</S>
    <S sid="69" ssid="22">Dependency parse trees specify pairwise relationships between words in the same sentence.</S>
    <S sid="70" ssid="23">Directed arcs specify which words modify a given word (if any), or alternatively, which head word governs a given word (there can only be one).</S>
    <S sid="71" ssid="24">For example, in Figure 2, hair is the head of the modifier short.</S>
    <S sid="72" ssid="25">We use a deterministic transition-based dependency parsing model (Nivre, 2008) with an arc-eager transition strategy.</S>
    <S sid="73" ssid="26">A linear kernel SVM with the following features is used for prediction: the partof-speech tags of the first four words on the buffer and of the top two words on the stack; the word identities of the first two words on the buffer and of the top word on the stack; the word identity of the syntactic head of the top word on the stack (if available).</S>
    <S sid="74" ssid="27">All non-lexical feature conjunctions are included.</S>
    <S sid="75" ssid="28">For treebanks with non-projective trees we use the pseudo-projective parsing technique to transform the treebank into projective structures (Nivre and Nilsson, 2005).</S>
    <S sid="76" ssid="29">To standardize and simplify the dependency relations across languages we use unlabeled directed dependency arcs.</S>
    <S sid="77" ssid="30">Table 3 shows unlabeled attachment scores on the treebank evaluation sets with automatically predicted POS tags.</S>
    <S sid="78" ssid="31">As described above, we extract raw ngrams (n &lt; 5) from the book text.</S>
    <S sid="79" ssid="32">Additionally, we provide ngrams annotated with POS tags and dependency relations.</S>
    <S sid="80" ssid="33">The syntactic ngrams comprise words (e.g., burnt), POS-annotated words (e.g. burnt VERB), and POS tags (e.g., VERB ).</S>
    <S sid="81" ssid="34">All of these forms can be mixed freely in 1-, 2- and 3-grams (e.g., the ADJ toast NOUN).</S>
    <S sid="82" ssid="35">To limit the combinatorial explosion, we restrict the forms that can be mixed in 4- and 5-grams.</S>
    <S sid="83" ssid="36">Words and POS tags cab be mixed freely (e.g., the house is ADJ ) and we also allow every word to be annotated (e.g., the DET house NOUN is VERB red ADJ).</S>
    <S sid="84" ssid="37">However, we do not allow annotated words to be mixed with other forms (e.g., both the house NOUN is ADJ and the house NOUN is red are not allowed).</S>
    <S sid="85" ssid="38">Headmodifier dependencies between pairs of words can be expressed similarly (we do not record chains of dependencies).</S>
    <S sid="86" ssid="39">Both the head and the modifier can take any of the forms described above.</S>
    <S sid="87" ssid="40">We use an arrow that points from the head word to the modifier word (e.g., head=&gt;modifier or modifier&lt;=head) to indicate a dependency relation.</S>
    <S sid="88" ssid="41">We use the designated ROOT for the root of the parse tree (e.g., ROOT =&gt;has).</S>
    <S sid="89" ssid="42">Figure 2 shows an English sentence, its POS tags and dependency parse tree, and some concrete examples of ngrams that are extracted.</S>
    <S sid="90" ssid="43">Note the flexibility and additional possibilities that the dependency relations provide.</S>
    <S sid="91" ssid="44">Using the raw ngrams it is not possible to accurately estimate how frequently hair is described as short, as there are often intervening words between the head and the modifier.</S>
    <S sid="92" ssid="45">Because dependency relations are independent of word order, we are able to calculate the frequency of both hair=&gt;black and hair=&gt;short.</S>
    <S sid="93" ssid="46">Similarly, there are many ways to express that somebody is reading a book.</S>
    <S sid="94" ssid="47">The first plot in Figure 3 shows multiple related queries.</S>
    <S sid="95" ssid="48">The 3gram read DET book aggregates several more specific 3-grams like read a book, read the book, etc.</S>
    <S sid="96" ssid="49">The dependency representation read=&gt;book is even more general, enforcing the requirement that the two words obey a specific syntactic configuration, but ignoring the number of words that appear in between.</S>
  </SECTION>
  <SECTION title="5 Domain Adaptation" number="5">
    <S sid="97" ssid="1">The results on the treebank evaluation sets need to be taken with caution, since performance often suffers when generalized to other domains.</S>
    <S sid="98" ssid="2">To get a better estimate of the POS tagging and parsing accuracies we conducted a detailed study for English.</S>
    <S sid="99" ssid="3">We chose English since it is the largest language in our corpus and because labeled treebank data for multiple domains is available.</S>
    <S sid="100" ssid="4">In addition to the WSJ (newswire) treebank (Marcus et al., 1993), we use: the Brown corpus (Francis and Kucera, 1979), which provides a balanced sample of text from the early 1960s; the QuestionBank (Judge et al., 2006), which consists entirely of questions; and the PPCMBE corpus (Kroch et al., 2010), which contains modern British English from 1700 to 1914 and is perhaps most close to our application domain.</S>
    <S sid="101" ssid="5">Since the English treebanks are in constituency format, we used the StanfordConverter (de Marneffe et al., 2006) to convert the parse trees to dependencies and ignored the arc labels.</S>
    <S sid="102" ssid="6">The dependency conversion was unfortunately not possible for the PPCMBE corpus since it uses a different set of constituency labels.</S>
    <S sid="103" ssid="7">The tagset of PPCMBE is also unique and cannot be mapped deterministically to the universal tagset.</S>
    <S sid="104" ssid="8">For example the string &#8220;one&#8221; has its own POS tag in PPCMBE, but is ambiguous in general &#8211; it can be used either as a number (NUM), noun (NOUN) or pronoun (PRON).</S>
    <S sid="105" ssid="9">We did our best to convert the tags as closely as possible, leaving tags that cannot be mapped untouched.</S>
    <S sid="106" ssid="10">Consequently, our evaluation results underestimate the accuracy of our tagger since it might correctly disambiguate certain words that are not disambiguated in the PPCMBE evaluation data.</S>
    <S sid="107" ssid="11">Table 4 shows the accuracies on the different domains for our baseline and adapted models.</S>
    <S sid="108" ssid="12">The baseline model is trained only on newswire text and hence performs best on the newswire evaluation set.</S>
    <S sid="109" ssid="13">Our final model is adapted in two ways.</S>
    <S sid="110" ssid="14">First, we add the the Brown corpus and QuestionBank to the training data.</S>
    <S sid="111" ssid="15">Second, and more importantly, we estimate word cluster features on the books data and use them as features in the POS tagger.</S>
    <S sid="112" ssid="16">The word cluster features group words deterministically into clusters that have similar distributional properties.</S>
    <S sid="113" ssid="17">When the model encounters a word that was never seen during training, the clusters allow the model to relate it to other, potentially known words.</S>
    <S sid="114" ssid="18">This approach improves the accuracy on rare words, and also makes our models robust to scanning errors.</S>
    <S sid="115" ssid="19">For example, in older books the medial-s (f) is often incorrectly recognized as an &#8216;f&#8217; by the OCR software (e.g., &#8220;beft&#8221; instead of &#8220;best&#8221;).</S>
    <S sid="116" ssid="20">Such systematic scanning errors will produce spurious words that have very similar co-occurrence patterns as the correct spelling of the word.</S>
    <S sid="117" ssid="21">In fact, a manual examination reveals that words with systematic scanning errors tend to be in the same cluster as their correctly spelled versions.</S>
    <S sid="118" ssid="22">The cluster feature thus provides a strong signal for determining the correct POS tag.</S>
    <S sid="119" ssid="23">While the final annotations are by no means perfect, we expect that in aggregate they are accurate enough to be useful when analyzing broad trends in the evolution of grammar.</S>
  </SECTION>
  <SECTION title="6 Conclusions" number="6">
    <S sid="120" ssid="1">We described a new edition of the Google Books Ngram Corpus that provides syntactically annotated ngrams for eight languages.</S>
    <S sid="121" ssid="2">The data is available for download and viewable through an interactive web application at http://books.google.com/ngrams.</S>
    <S sid="122" ssid="3">We discussed the statistical models used to produce the syntactic annotations and how they were adapted to handle historical text more robustly, resulting in significantly improved annotation quality.</S>
    <S sid="123" ssid="4">Analyzing the resulting data is beyond the scope of this paper, but we show some example plots in Figure 3.</S>
  </SECTION>
</PAPER>
