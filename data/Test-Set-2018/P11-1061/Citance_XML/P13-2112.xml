<PAPER>
  <S sid="0">Simpler unsupervised POS tagging with bilingual projections</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Figure 1: Overall accuracy, accuracy on known tokens, accuracy on unknown tokens, and proportion of known tokens for Italian (left) and Dutch (right).</S>
    <S sid="2" ssid="2">Table 2 shows results for our seed model, self training and revision, and the results reported by Das and Petrov.</S>
    <S sid="3" ssid="3">Self training and revision improve the accuracy for every language over the seed model, and gives an average improvement of roughly two percentage points.</S>
    <S sid="4" ssid="4">The average accuracy of self training and revision is on par with that reported by Das and Petrov.</S>
    <S sid="5" ssid="5">On individual languages, self training and revision and the method of Das and Petrov are split &#8212; each performs better on half of the cases.</S>
    <S sid="6" ssid="6">Interestingly, our method achieves higher accuracies on Germanic languages &#8212; the family of our source language, English &#8212; while Das and Petrov perform better on Romance languages.</S>
    <S sid="7" ssid="7">This might be because our model relies on alignments, which might be more accurate for more-related languages, whereas Das and Petrov additionally rely on label propagation.</S>
    <S sid="8" ssid="8">Compared to Das and Petrov, our model performs poorest on Italian, in terms of percentage point difference in accuracy.</S>
    <S sid="9" ssid="9">Figure 1 (left panel) shows accuracy, accuracy on known words, accuracy on unknown words, and proportion of known tokens for each iteration of our model for Italian; iteration 0 is the seed model, and iteration 31 is the final model.</S>
    <S sid="10" ssid="10">Our model performs poorly on unknown words as indicated by the low accuracy on unknown words, and high accuracy on known words compared to the overall accuracy.</S>
    <S sid="11" ssid="11">The poor performance on unknown words is expected because we do not use any language-specific rules to handle this case.</S>
    <S sid="12" ssid="12">Moreover, on average for the final model, approximately 10% of the test data tokens are unknown.</S>
    <S sid="13" ssid="13">One way to improve the performance of our tagger might be to reduce the proportion of unknown words by using a larger training corpus, as Das and Petrov did.</S>
    <S sid="14" ssid="14">We examine the impact of self-training and revision over training iterations.</S>
    <S sid="15" ssid="15">We find that for all languages, accuracy rises quickly in the first 5&#8211;6 iterations, and then subsequently improves only slightly.</S>
    <S sid="16" ssid="16">We exemplify this in Figure 1 (right panel) for Dutch.</S>
    <S sid="17" ssid="17">(Findings are similar for other languages.)</S>
    <S sid="18" ssid="18">Although accuracy does not increase much in later iterations, they may still have some benefit as the vocabulary size continues to grow.</S>
    <S sid="19" ssid="19">6 Conclusion We have proposed a method for unsupervised POS tagging that performs on par with the current stateof-the-art (Das and Petrov, 2011), but is substantially less-sophisticated (specifically not requiring convex optimization or a feature-based HMM). complexity of our algorithm is to that of Das and Petrov 637 where the size of training We our code are available for In future work we intend to consider using a larger training corpus to reduce the proportion of unknown tokens and improve accuracy.</S>
    <S sid="20" ssid="20">Given the improvements of our model over that of Das and Petrov on languages from the same family as our source language, and the observation of Snyder et al. (2008) that a better tagger can be learned from a more-closely related language, we also plan to consider strategies for selecting an appropriate source language for a given target language.</S>
    <S sid="21" ssid="21">Using our final model with unsupervised HMM methods might improve the final performance too, i.e. use our final model as the initial state for HMM, then experiment with different inference algorithms such as Expectation Maximization (EM), Variational Bayers (VB) or Gibbs Gao and Johnson (2008) compare EM, VB and GS for unsupervised English POS tagging.</S>
    <S sid="22" ssid="22">In many cases, GS outperformed other methods, thus we would like to try GS first for our model.</S>
    <S sid="23" ssid="23">7 Acknowledgements This work is funded by Erasmus Mundus European Masters Program in Language and Communication Technologies (EM-LCT) and by the Czech Science Foundation (grant no.</S>
    <S sid="24" ssid="24">P103/12/G084).</S>
    <S sid="25" ssid="25">We would like to thank Prokopis Prokopidis for providing us the Greek Treebank and Antonia Marti for the Spanish CoNLL 06 dataset.</S>
    <S sid="26" ssid="26">Finally, we thank Siva Reddy and Spandana Gella for many discussions and suggestions.</S>
    <S sid="27" ssid="27">References Thorsten Brants.</S>
    <S sid="28" ssid="28">2000.</S>
    <S sid="29" ssid="29">TnT: A statistical part-oftagger.</S>
    <S sid="30" ssid="30">In of the sixth conference on Applied natural language processing pages 224&#8211;231.</S>
    <S sid="31" ssid="31">Seattle, Washington, USA.</S>
    <S sid="32" ssid="32">Dipanjan Das and Slav Petrov.</S>
    <S sid="33" ssid="33">2011.</S>
    <S sid="34" ssid="34">Unsupervised part-of-speech tagging with bilingual projections.</S>
    <S sid="35" ssid="35">In of re-implemented label propagation from Das and Petrov (2011).</S>
    <S sid="36" ssid="36">It took over a day to complete this step on an eight core Intel Xeon 3.16GHz CPU with 32 Gb Ram, but only 15 minutes for our model. in fact have tried EM, but it did not help.</S>
    <S sid="37" ssid="37">The overall performance dropped slightly.</S>
    <S sid="38" ssid="38">This might be because selftraining with revision already found the local maximal point. the 49th Annual Meeting of the Association for Computational Linguistics: Human Language - Volume 1 (ACL pages 600&#8211;609.</S>
    <S sid="39" ssid="39">Portland, Oregon, USA.</S>
    <S sid="40" ssid="40">Pascal Denis and Benoit Sagot.</S>
    <S sid="41" ssid="41">2009.</S>
    <S sid="42" ssid="42">Coupling an annotated corpus and a morphosyntactic lexicon for state-of-the-art POS tagging with less effort.</S>
    <S sid="43" ssid="43">In of the 23rd Pacific Asia Conference on Language, Information</S>
  </ABSTRACT>
  <SECTION title="2 Related work" number="1">
    <S sid="44" ssid="1">There is a wealth of prior research on building unsupervised POS taggers.</S>
    <S sid="45" ssid="2">Some approaches have exploited similarities between typologically similar languages (e.g., Czech and Russian, or Telugu and Kannada) to estimate the transition probabilities for an HMM tagger for one language based on a corpus for another language (e.g., Hana et al., 2004; Feldman et al., 2006; Reddy and Sharoff, 2011).</S>
    <S sid="46" ssid="3">Other approaches have simultaneously tagged two languages based on alignments in a parallel corpus (e.g., Snyder et al., 2008).</S>
    <S sid="47" ssid="4">A number of studies have used tag projection to copy tag information from a resource-rich to a resource-poor language, based on word alignments in a parallel corpus.</S>
    <S sid="48" ssid="5">After alignment, the resource-rich language is tagged, and tags are projected from the source language to the target language based on the alignment (e.g., Yarowsky and Ngai, 2001; Das and Petrov, 2011).</S>
    <S sid="49" ssid="6">Das and Petrov (2011) achieved the current state-of-the-art for unsupervised tagging by exploiting high confidence alignments to copy tags from the source language to the target language.</S>
    <S sid="50" ssid="7">Graph-based label propagation was used to automatically produce more labelled training data.</S>
    <S sid="51" ssid="8">First, a graph was constructed in which each vertex corresponds to a unique trigram, and edge weights represent the syntactic similarity between vertices.</S>
    <S sid="52" ssid="9">Labels were then propagated by optimizing a convex function to favor the same tags for closely related nodes while keeping a uniform tag distribution for unrelated nodes.</S>
    <S sid="53" ssid="10">A tag dictionary was then extracted from the automatically labelled data, and this was used to constrain a feature-based HMM tagger.</S>
    <S sid="54" ssid="11">The method we propose here is simpler to that of Das and Petrov in that it does not require convex optimization for label propagation or a feature based HMM, yet it achieves comparable results.</S>
  </SECTION>
  <SECTION title="3 Tagset" number="2">
    <S sid="55" ssid="1">Our tagger exploits the idea of projecting tag information from a resource-rich to resource-poor language.</S>
    <S sid="56" ssid="2">To facilitate this mapping, we adopt Petrov et al.&#8217;s (2012) twelve universal tags: NOUN, VERB, ADJ, ADV, PRON (pronouns), DET (determiners and articles), ADP (prepositions and postpositions), NUM (numerals), CONJ (conjunctions), PRT (particles), &#8220;.&#8221; (punctuation), and X (all other categories, e.g., foreign words, abbreviations).</S>
    <S sid="57" ssid="3">These twelve basic tags are common across taggers for most languages.</S>
    <S sid="58" ssid="4">Adopting a universal tagset avoids the need to map between a variety of different, languagespecific tagsets.</S>
    <S sid="59" ssid="5">Furthermore, it makes it possible to apply unsupervised tagging methods to languages for which no tagset is available, such as Telugu and Vietnamese.</S>
  </SECTION>
  <SECTION title="4 A Simpler Unsupervised POS Tagger" number="3">
    <S sid="60" ssid="1">Here we describe our proposed tagger.</S>
    <S sid="61" ssid="2">The key idea is to maximize the amount of information gleaned from the source language, while limiting the amount of noise.</S>
    <S sid="62" ssid="3">We describe the seed model and then explain how it is successively refined through self-training and revision.</S>
    <S sid="63" ssid="4">The first step is to construct a seed tagger from directly-projected labels.</S>
    <S sid="64" ssid="5">Given a parallel corpus for a source and target language, Algorithm 1 provides a method for building an unsupervised tagger for the target language.</S>
    <S sid="65" ssid="6">In typical applications, the source language would be a better-resourced language having a tagger, while the target language would be lesser-resourced, lacking a tagger and large amounts of manually POS-labelled data.</S>
    <S sid="66" ssid="7">Algorithm 1 Build seed model We eliminate many-to-one alignments (Step 2).</S>
    <S sid="67" ssid="8">Keeping these would give more POS-tagged tokens for the target side, but also introduce noise.</S>
    <S sid="68" ssid="9">For example, suppose English and French were the source and target language, respectively.</S>
    <S sid="69" ssid="10">In this case alignments such as English laws (NNS) to French les (DT) lois (NNS) would be expected (Yarowsky and Ngai, 2001).</S>
    <S sid="70" ssid="11">However, in Step 3, where tags are projected from the source to target language, this would incorrectly tag French les as NN.</S>
    <S sid="71" ssid="12">We build a French tagger based on English&#8211; French data from the Europarl Corpus (Koehn, 2005).</S>
    <S sid="72" ssid="13">We also compare the accuracy and coverage of the tags obtained through direct projection using the French Melt POS tagger (Denis and Sagot, 2009).</S>
    <S sid="73" ssid="14">Table 1 confirms that the one-to-one alignments indeed give higher accuracy but lower coverage than the many-to-one alignments.</S>
    <S sid="74" ssid="15">At this stage of the model we hypothesize that highconfidence tags are important, and hence eliminate the many-to-one alignments.</S>
    <S sid="75" ssid="16">In Step 4, in an effort to again obtain higher quality target language tags from direct projection, we eliminate all but the top n sentences based on their alignment scores, as provided by the aligner via IBM model 3.</S>
    <S sid="76" ssid="17">We heuristically set this cutoff to 60k to balance the accuracy and size of the seed model.1 Returning to our preliminary English&#8211; French experiments in Table 1, this process gives improvements in both accuracy and coverage.2 The number of parameters for the emission probability is |V  |&#215; |T  |where V is the vocabulary and T is the tag set.</S>
    <S sid="77" ssid="18">The transition probability, on the other hand, has only |T|3 parameters for the trigram model we use.</S>
    <S sid="78" ssid="19">Because of this difference in number of parameters, in step 5, we use different strategies to estimate the emission and transition probabilities.</S>
    <S sid="79" ssid="20">The emission probability is estimated from all 60k selected sentences.</S>
    <S sid="80" ssid="21">However, for the transition probability, which has less parameters, we again focus on &#8220;better&#8221; sentences, by estimating this probability from only those sentences that have (1) token coverage &gt; 90% (based on direct projection of tags from the source language), and (2) length &gt; 4 tokens.</S>
    <S sid="81" ssid="22">These criteria aim to identify longer, mostly-tagged sentences, which we hypothesize are particularly useful as training data.</S>
    <S sid="82" ssid="23">In the case of our preliminary English&#8211;French experiments, roughly 62% of the 60k selected sentences meet these criteria and are used to estimate the transition probability.</S>
    <S sid="83" ssid="24">For unaligned words, we simply assign a random POS and very low probability, which does not substantially affect transition probability estimates.</S>
    <S sid="84" ssid="25">In Step 6 we build a tagger by feeding the estimated emission and transition probabilities into the TNT tagger (Brants, 2000), an implementation of a trigram HMM tagger.</S>
    <S sid="85" ssid="26">For self training and revision, we use the seed model, along with the large number of target language sentences available that have been partially tagged through direct projection, in order to build a more accurate tagger.</S>
    <S sid="86" ssid="27">Algorithm 2 describes this process of self training and revision, and assumes that the parallel source&#8211;target corpus has been word aligned, with many-to-one alignments removed, and that the sentences are sorted by alignment score.</S>
    <S sid="87" ssid="28">In contrast to Algorithm 1, all sentences are used, not just the 60k sentences with the highest alignment scores.</S>
    <S sid="88" ssid="29">We believe that sentence alignment score might correspond to difficulty to tag.</S>
    <S sid="89" ssid="30">By sorting the sentences by alignment score, sentences which are more difficult to tag are tagged using a more mature model.</S>
    <S sid="90" ssid="31">Following Algorithm 1, we divide sentences into blocks of 60k.</S>
    <S sid="91" ssid="32">In step 3 the tagged block is revised by comparing the tags from the tagger with those obtained through direct projection.</S>
    <S sid="92" ssid="33">Suppose source Algorithm 2 Self training and revision language word wsi is aligned with target language word wtj with probability p(wtj|wsi), Tis is the tag for wsi using the tagger available for the source language, and Tjt is the tag for wtj using the tagger learned for the target language.</S>
    <S sid="93" ssid="34">If p(wt j|ws i) &gt; 5, where 5 is a threshold which we heuristically set to 0.7, we replace Tjt by Tis.</S>
    <S sid="94" ssid="35">Self-training can suffer from over-fitting, in which errors in the original model are repeated and amplified in the new model (McClosky et al., 2006).</S>
    <S sid="95" ssid="36">To avoid this, we remove the tag of any token that the model is uncertain of, i.e., if p(wtj|wsi) &lt; 5 and Tjt =&#65533; Tis then Tjt = Null.</S>
    <S sid="96" ssid="37">So, on the target side, aligned words have a tag from direct projection or no tag, and unaligned words have a tag assigned by our model.</S>
    <S sid="97" ssid="38">Step 4 estimates the emission and transition probabilities as in Algorithm 1.</S>
    <S sid="98" ssid="39">In Step 5, emission probabilities for lexical items in the previous model, but missing from the current model, are added to the current model.</S>
    <S sid="99" ssid="40">Later models therefore take advantage of information from earlier models, and have wider coverage.</S>
  </SECTION>
  <SECTION title="5 Experimental Results" number="4">
    <S sid="100" ssid="1">Using parallel data from Europarl (Koehn, 2005) we apply our method to build taggers for the same eight target languages as Das and Petrov (2011) &#8212; Danish, Dutch, German, Greek, Italian, Portuguese, Spanish and Swedish &#8212; with English as the source language.</S>
    <S sid="101" ssid="2">Our training data (Europarl) is a subset of the training data of Das and Petrov (who also used the ODS United Nations dataset which we were unable to obtain).</S>
    <S sid="102" ssid="3">The evaluation metric and test data are the same as that used by Das and Petrov.</S>
    <S sid="103" ssid="4">Our results are comparable to theirs, although our system is penalized by having less training data.</S>
    <S sid="104" ssid="5">We tag the source language with the Stanford POS tagger (Toutanova et al., 2003).</S>
    <S sid="105" ssid="6">Table 2 shows results for our seed model, self training and revision, and the results reported by Das and Petrov.</S>
    <S sid="106" ssid="7">Self training and revision improve the accuracy for every language over the seed model, and gives an average improvement of roughly two percentage points.</S>
    <S sid="107" ssid="8">The average accuracy of self training and revision is on par with that reported by Das and Petrov.</S>
    <S sid="108" ssid="9">On individual languages, self training and revision and the method of Das and Petrov are split &#8212; each performs better on half of the cases.</S>
    <S sid="109" ssid="10">Interestingly, our method achieves higher accuracies on Germanic languages &#8212; the family of our source language, English &#8212; while Das and Petrov perform better on Romance languages.</S>
    <S sid="110" ssid="11">This might be because our model relies on alignments, which might be more accurate for more-related languages, whereas Das and Petrov additionally rely on label propagation.</S>
    <S sid="111" ssid="12">Compared to Das and Petrov, our model performs poorest on Italian, in terms of percentage point difference in accuracy.</S>
    <S sid="112" ssid="13">Figure 1 (left panel) shows accuracy, accuracy on known words, accuracy on unknown words, and proportion of known tokens for each iteration of our model for Italian; iteration 0 is the seed model, and iteration 31 is the final model.</S>
    <S sid="113" ssid="14">Our model performs poorly on unknown words as indicated by the low accuracy on unknown words, and high accuracy on known words compared to the overall accuracy.</S>
    <S sid="114" ssid="15">The poor performance on unknown words is expected because we do not use any language-specific rules to handle this case.</S>
    <S sid="115" ssid="16">Moreover, on average for the final model, approximately 10% of the test data tokens are unknown.</S>
    <S sid="116" ssid="17">One way to improve the performance of our tagger might be to reduce the proportion of unknown words by using a larger training corpus, as Das and Petrov did.</S>
    <S sid="117" ssid="18">We examine the impact of self-training and revision over training iterations.</S>
    <S sid="118" ssid="19">We find that for all languages, accuracy rises quickly in the first 5&#8211;6 iterations, and then subsequently improves only slightly.</S>
    <S sid="119" ssid="20">We exemplify this in Figure 1 (right panel) for Dutch.</S>
    <S sid="120" ssid="21">(Findings are similar for other languages.)</S>
    <S sid="121" ssid="22">Although accuracy does not increase much in later iterations, they may still have some benefit as the vocabulary size continues to grow.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="5">
    <S sid="122" ssid="1">We have proposed a method for unsupervised POS tagging that performs on par with the current stateof-the-art (Das and Petrov, 2011), but is substantially less-sophisticated (specifically not requiring convex optimization or a feature-based HMM).</S>
    <S sid="123" ssid="2">The complexity of our algorithm is O(nlogn) compared to O(n2) for that of Das and Petrov (2011) where n is the size of training data.3 We made our code are available for download.4 In future work we intend to consider using a larger training corpus to reduce the proportion of unknown tokens and improve accuracy.</S>
    <S sid="124" ssid="3">Given the improvements of our model over that of Das and Petrov on languages from the same family as our source language, and the observation of Snyder et al. (2008) that a better tagger can be learned from a more-closely related language, we also plan to consider strategies for selecting an appropriate source language for a given target language.</S>
    <S sid="125" ssid="4">Using our final model with unsupervised HMM methods might improve the final performance too, i.e. use our final model as the initial state for HMM, then experiment with different inference algorithms such as Expectation Maximization (EM), Variational Bayers (VB) or Gibbs sampling (GS).5 Gao and Johnson (2008) compare EM, VB and GS for unsupervised English POS tagging.</S>
    <S sid="126" ssid="5">In many cases, GS outperformed other methods, thus we would like to try GS first for our model.</S>
  </SECTION>
  <SECTION title="7 Acknowledgements" number="6">
    <S sid="127" ssid="1">This work is funded by Erasmus Mundus European Masters Program in Language and Communication Technologies (EM-LCT) and by the Czech Science Foundation (grant no.</S>
    <S sid="128" ssid="2">P103/12/G084).</S>
    <S sid="129" ssid="3">We would like to thank Prokopis Prokopidis for providing us the Greek Treebank and Antonia Marti for the Spanish CoNLL 06 dataset.</S>
    <S sid="130" ssid="4">Finally, we thank Siva Reddy and Spandana Gella for many discussions and suggestions.</S>
  </SECTION>
</PAPER>
