Citance Number: 1 | Reference Article:  E06-1015.txt | Citing Article:  W06-2909.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The time needed for tree kernel function was not so problematic as we could use the fast evaluation proposed in (Moschitti, 2006).</S> | Reference Offset:  ['49','130'] | Reference Text:  <S sid = 49 ssid = >For this purpose, we slightly modified the kernel function proposed in (Collins and Duffy, 2002) by introducing a parameter σ which enables the ST or the SST evaluation.</S><S sid = 130 ssid = >The above results are quite interesting because they show that (1) we can use tree kernels with SVMs on huge training sets, e.g. on 122,774 instances and (2) the time needed to converge is approximately the one required by SVMs when using polynomial kernel.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  E06-1015.txt | Citing Article:  P14-1118.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  E06-1015.txt | Citing Article:  P14-1118.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  E06-1015.txt | Citing Article:  P14-1118.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  E06-1015.txt | Citing Article:  P14-1118.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  E06-1015.txt | Citing Article:  P08-4003.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >SVMLight (Joachims,1999), in the SVMLight/TK (Moschitti, 2006) variant, allows to use tree-valued features.</S> | Reference Offset:  ['45','116'] | Reference Text:  <S sid = 45 ssid = >Given a syntactic tree we can use as feature representation the set of all its STs or SSTs.</S><S sid = 116 ssid = >The classifier evaluations were carried out with the SVM-light-TK software available at http://ai-nlp.info.uniroma2.it/moschitti/ which encodes ST and SST kernels in the SVMlight software (Joachims, 1999).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  E06-1015.txt | Citing Article:  D09-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  E06-1015.txt | Citing Article:  D09-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The algorithm for the efficient evaluation of ? for the syntactic tree kernel (STK) has been widely discussed in (Collins and Duffy, 2002) whereas its fast evaluation is proposed in (Moschitti, 2006b), so we only describe the equations of the partial tree kernel (PTK).</S> | Reference Offset:  ['49','123'] | Reference Text:  <S sid = 49 ssid = >For this purpose, we slightly modified the kernel function proposed in (Collins and Duffy, 2002) by introducing a parameter σ which enables the ST or the SST evaluation.</S><S sid = 123 ssid = >In this section we compare our Fast Tree Kernel (FTK) approach with the Quadratic Tree Kernel (QTK) algorithm.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  E06-1015.txt | Citing Article:  D09-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >PTFs have been defined in (Moschitti, 2006a).</S> | Reference Offset:  ['64','117'] | Reference Text:  <S sid = 64 ssid = >To compute the kernels defined in the previous section, we sum the A function for each pair (n1,n2)E NT1 x NT2 (Eq.</S><S sid = 117 ssid = >We used the default linear (Linear) and polynomial (Poly) kernels for the evaluations with the standard features defined in (Gildea and Jurafsky, 2002).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  E06-1015.txt | Citing Article:  E12-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Miwa et al (2009a) proposed a hybrid kernel, which combines the all-paths graph (APG) kernel (Airola et al 2008), the bag-of-words kernel, and the subset tree kernel (Moschitti, 2006) (applied on the shortest dependency paths between target protein pairs).</S> | Reference Offset:  ['20','174'] | Reference Text:  <S sid = 20 ssid = >(Pradhan et al., 2004).</S><S sid = 174 ssid = >In (Shen et al., 2003), a tree-kernel based on Lexicalized Tree Adjoining Grammar (LTAG) for the parse-reranking task was proposed.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  E06-1015.txt | Citing Article:  W09-1106.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The function can be computed recursively in closed form, and quite efficient implementations are available (Moschitti, 2006).</S> | Reference Offset:  ['53','150'] | Reference Text:  <S sid = 53 ssid = >By recursively applying this property, it follows that the subtrees in n1 and n2 are identical.</S><S sid = 150 ssid = >In fact, as many predicate argument structures are quite large (up to 100 nodes) they contain many fragments.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  E06-1015.txt | Citing Article:  W09-1106.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >It should be stressed that we are comparing against a fast TK implementation that is almost linear in time with respect to the number of tree nodes (Moschitti, 2006).</S> | Reference Offset:  ['7','18'] | Reference Text:  <S sid = 7 ssid = >In contrast, their major drawback are (a) the computational time complexity which is superlinear in the number of tree nodes and (b) the accuracy that they produce is often lower than the one provided by linear models on manually designed features.</S><S sid = 18 ssid = >Our fast algorithm computes the kernels between two syntactic parse trees in O(m + n) average time, where m and n are the number of nodes in the two trees.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  E06-1015.txt | Citing Article:  W07-2023.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For classification we applied the updated tree-kernel package (Moschitti 2006), distributed with the svm-light tool (Joachims 1999) for learning Support Vector Machines (SVMs).</S> | Reference Offset:  ['4','116'] | Reference Text:  <S sid = 4 ssid = >Experiments with Support Vector Machines on the predicate argument classification task provide empirical support to our thesis.</S><S sid = 116 ssid = >The classifier evaluations were carried out with the SVM-light-TK software available at http://ai-nlp.info.uniroma2.it/moschitti/ which encodes ST and SST kernels in the SVMlight software (Joachims, 1999).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  E06-1015.txt | Citing Article:  E09-1066.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The worse case is not really informative since as shown in (Moschitti, 2006), we can design fast algorithm with a linear average running time (we use such algorithm for SSTK).</S> | Reference Offset:  ['101','182'] | Reference Text:  <S sid = 101 ssid = >On the one hand, we show that the FTK running time is linear on the average case and is much faster than QTK.</S><S sid = 182 ssid = >We have shown that a fast algorithm (FTK) can evaluate tree kernels in a linear average running time and also that the overall converging time required by SVMs is compatible with very large data sets.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  E06-1015.txt | Citing Article:  E09-1066.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  E06-1015.txt | Citing Article:  W08-0403.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Collins and Duffy (Collins and Duffy, 2002) suggested to employ convolution kernels to measure similarity between two trees in terms of their sub structures, and more recently, Moschitti (Moschitti, 2006) described in details a fast implementation of tree kernels.</S> | Reference Offset:  ['125','157'] | Reference Text:  <S sid = 125 ssid = >1 as presented in (Collins and Duffy, 2002).</S><S sid = 157 ssid = >Recently, several tree kernels have been designed.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  E06-1015.txt | Citing Article:  W08-0403.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >More recently, Moschitti (Moschitti, 2006) introduced in details a fast implementation of tree kernels, where a node pair set is first constructed for those associated with same production rules.</S> | Reference Offset:  ['36','157'] | Reference Text:  <S sid = 36 ssid = >In our study, we consider syntactic parse trees, consequently, each node with its children is associated with a grammar production rule, where the symbol at left-hand side corresponds to the parent node and the symbols at right-hand side are associated with its children.</S><S sid = 157 ssid = >Recently, several tree kernels have been designed.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  E06-1015.txt | Citing Article:  W07-1412.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  E06-1015.txt | Citing Article:  W07-1412.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['58','187'] | Reference Text:  <S sid = 58 ssid = >For this purpose, it is enough to add the condition: 0. if n1 and n2 are leaves and their associated symbols are equal then A(n1, n2) = 1, to the recursive rule set for the A evaluation (Zhang and Lee, 2003).</S><S sid = 187 ssid = >This research is partially supported by the Presto Space EU Project#: FP6-507336.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  E06-1015.txt | Citing Article:  D11-1096.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Although this kernel achieves state-of-the-art performance in NLP tasks, such as Question Classification (Bloehdorn and Moschitti, 2007b) and Textual Entailment (Mehdad et al, 2010), it offers clearly possibility of improvement: (i) better possibility to exploit semantic smoothing since, e.g., trivially STK only matches the syntactic structure apple/orange when comparing the big beautiful apple to a nice large orange; and (ii) STK cannot be effectively applied to dependency structures, e.g. see experiments and motivation in (Moschitti, 2006a).</S> | Reference Offset:  ['6','155'] | Reference Text:  <S sid = 6 ssid = >The main tree kernel advantage is the possibility to generate a high number of syntactic features and let the learning algorithm to select those most relevant for a specific application.</S><S sid = 155 ssid = >It should be noted that our results of kernel combinations on FrameNet are in contrast with (Moschitti, 2004), where no improvement was obtained.</S> | Discourse Facet:  NA | Annotator: Automatic


