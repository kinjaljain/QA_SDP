Citance Number: 1 | Reference Article:  D07-1104.txt | Citing Article:  D07-1104.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Due to space constraints, details and proof of correctness are available in Lopez (2007a).</S> | Reference Offset:  ['164','208'] | Reference Text:  <S sid = 164 ssid = >Due to space constraints, details and proof of correctness are available in Lopez (2007a).</S><S sid = 208 ssid = >8 Searching for a?b is potentially very expensive, so we put all available information to work.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  D07-1104.txt | Citing Article:  D07-1104.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >However, in machine translation most features can still be traced back to the IBM Models of 15 years ago (Lopez, 2007b).</S> | Reference Offset:  ['298','299'] | Reference Text:  <S sid = 298 ssid = >However, in machine translation most fea tures can still be traced back to the IBM Models of 15 years ago (Lopez, 2007b).</S><S sid = 299 ssid = >Recently, Lopez and Resnik (2006) showed that most of the features used in standard phrase-based models do not help very much.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  D07-1104.txt | Citing Article:  P14-1083.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We built grammars using its implementation of the suffix array extraction method described in Lopez (2007).</S> | Reference Offset:  ['41','43'] | Reference Text:  <S sid = 41 ssid = >of the sentence in the suffix array.</S><S sid = 43 ssid = >using the phrase extraction method of Koehn et al (2003).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  D07-1104.txt | Citing Article:  W08-0402.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We use the GIZA toolkit (Och and Ney, 2000), a suffix-array architecture (Lopez, 2007), the SRILM toolkit (Stolcke, 2002), and minimum error rate training (Och et al, 2003) to obtain word alignments, a translation model, language models, and the optimal weights for combining these mod els, respectively.</S> | Reference Offset:  ['17','272'] | Reference Text:  <S sid = 17 ssid = >We believe that the latter approach has several important applications (?7).So far, these techniques have focused on phrase based models using contiguous phrases (Koehn et al., 2003; Och and Ney, 2004).</S><S sid = 272 ssid = >To generate alignments,we used GIZA++ (Och and Ney, 2003).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  D07-1104.txt | Citing Article:  E09-1044.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Lopez (2007) extracts rules on-the-fly from the training bi text during decoding, searching efficiently for rule patterns using suffix arrays.</S> | Reference Offset:  ['36','83'] | Reference Text:  <S sid = 36 ssid = >Load the source training text F , the suffix array.</S><S sid = 83 ssid = >On-the-fly lookup using suffix arrays involves an added complication when the rules are in form uXv or uXvXw.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  D07-1104.txt | Citing Article:  P10-1147.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Joshua (Li et al, 2009) is an implementation of Hiero (Chiang, 2007) using a suffix-array-based grammar extraction approach (Lopez, 2007).</S> | Reference Offset:  ['18','43'] | Reference Text:  <S sid = 18 ssid = >Some recent models permit discontiguous phrases (Chiang, 2007; Quirket al, 2005; Simard et al, 2005).</S><S sid = 43 ssid = >using the phrase extraction method of Koehn et al (2003).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  D07-1104.txt | Citing Article:  W09-0424.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The toolkit also implements suffix-array grammar extraction (Lopez, 2007) and minimum error rate training (Och, 2003).</S> | Reference Offset:  ['36','41'] | Reference Text:  <S sid = 36 ssid = >Load the source training text F , the suffix array.</S><S sid = 41 ssid = >of the sentence in the suffix array.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  D07-1104.txt | Citing Article:  W09-0424.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In this system, we use the GIZA++toolkit (Och and Ney, 2003), a suffix-array architecture (Lopez, 2007), the SRILM toolkit (Stolcke, 2002), and minimum error rate training (Och, 2003) to obtain word-alignments, a translation model, language models, and the optimal weights for combining these models, respectively.</S> | Reference Offset:  ['17','272'] | Reference Text:  <S sid = 17 ssid = >We believe that the latter approach has several important applications (?7).So far, these techniques have focused on phrase based models using contiguous phrases (Koehn et al., 2003; Och and Ney, 2004).</S><S sid = 272 ssid = >To generate alignments,we used GIZA++ (Och and Ney, 2003).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  D07-1104.txt | Citing Article:  P09-1067.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We use GIZA++ (Och and Ney,2000), a suffix-array (Lopez, 2007), SRILM (Stolcke, 2002), and risk-based deterministic annealing (Smith and Eisner, 2006) to obtain word alignments, translation models, language models, and the optimal weights for combining these models, respectively.</S> | Reference Offset:  ['190','272'] | Reference Text:  <S sid = 190 ssid = >A major difference between contiguous phrase based models and hierarchical phrase-based models is the number of rules that potentially apply to an input sentence.</S><S sid = 272 ssid = >To generate alignments,we used GIZA++ (Och and Ney, 2003).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  D07-1104.txt | Citing Article:  W10-1707.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The hierarchical phrase-base translation grammar was extracted using a suffix array rule extractor (Lopez, 2007).</S> | Reference Offset:  ['0','61'] | Reference Text:  <S sid = 0 ssid = >Hierarchical Phrase-Based Translation with Suffix Arrays</S><S sid = 61 ssid = >We consider the hierarchical translation model ofChiang (2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  D07-1104.txt | Citing Article:  W10-1707.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Besides storing the whole grammar locally in memory, other approaches have been developed, such as suffix arrays, which lookup and extract rules on the fly from the phrase table (Lopez, 2007).</S> | Reference Offset:  ['2','83'] | Reference Text:  <S sid = 2 ssid = >In phrase-based models, this prob lem can be addressed by storing the training data in memory and using a suffix array asan efficient index to quickly lookup and extract rules on the fly.</S><S sid = 83 ssid = >On-the-fly lookup using suffix arrays involves an added complication when the rules are in form uXv or uXvXw.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  D07-1104.txt | Citing Article:  P09-1104.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The pipeline extracts a Hiero-style synchronous context-free grammar (Chiang, 2007), employs suffix-array based rule extraction (Lopez, 2007), and tunes model parameters with minimum error rate training (Och,2003).</S> | Reference Offset:  ['61','62'] | Reference Text:  <S sid = 61 ssid = >We consider the hierarchical translation model ofChiang (2007).</S><S sid = 62 ssid = >Formally, this model is a syn chronous context-free grammar.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  D07-1104.txt | Citing Article:  N09-1026.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This data structure has been used similarly to index whole training sentences for efficient retrieval (Lopez, 2007).</S> | Reference Offset:  ['2','180'] | Reference Text:  <S sid = 2 ssid = >In phrase-based models, this prob lem can be addressed by storing the training data in memory and using a suffix array asan efficient index to quickly lookup and extract rules on the fly.</S><S sid = 180 ssid = >7 This approach requires a separate inverted index for each n, up to the maximum n used by the model.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >(Lopez, 2007) proposed an extension of this method for retrieving discontinuous substrings, making it suitable for systems such as (Chiang, 2007).</S> | Reference Offset:  ['71','85'] | Reference Text:  <S sid = 71 ssid = >3 For the purposes of this paper, we adhere to therestrictions described by Chiang (2007) for rules ex tracted from the training data.</S><S sid = 85 ssid = >However, it cannot be used for discontiguous substrings.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['107','315'] | Reference Text:  <S sid = 107 ssid = >Theoreti cally, the worst case for this algorithm occurs when all elements of both sets resolve to the same hash bucket, and we must compare all elements of one set with all elements of the other set.</S><S sid = 315 ssid = >984</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The basis of the method in (Lopez, 2007) is to look for the occurrences of continuous substrings using a Suffix Array, and then intersect them to find the occurrences of discontinuous substrings.</S> | Reference Offset:  ['84','85'] | Reference Text:  <S sid = 84 ssid = >Binary search enables fast lookup of contiguous substrings.</S><S sid = 85 ssid = >However, it cannot be used for discontiguous substrings.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >There is also an exponential number of discontinuous substrings, but (Lopez, 2007) only consider substrings of bounded size, limiting this problem.</S> | Reference Offset:  ['84','85'] | Reference Text:  <S sid = 84 ssid = >Binary search enables fast lookup of contiguous substrings.</S><S sid = 85 ssid = >However, it cannot be used for discontiguous substrings.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This hypergraph will not only fit the same role as the Prefix Tree of (Lopez, 2007), but also will allow us to easily implement different search strategies for flexible search (section 6).</S> | Reference Offset:  ['15','219'] | Reference Text:  <S sid = 15 ssid = >Zens and Ney (2007) use a disk-based prefix tree, enabling efficient access to phrase tables much too large to fit in main memory.</S><S sid = 219 ssid = >5.4.3 Prefix Trees and Suffix Links Our search optimizations are easily captured in a prefix tree data structure augmented with suffix links.Formally, a prefix tree is an unminimized determin istic finite-state automaton that recognizes all of thepatterns in some set.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This allows in turn to compute by intersection the occurrences of discontinuous treelets, much like what is done in (Lopez, 2007) for discontinuous strings.</S> | Reference Offset:  ['159','184'] | Reference Text:  <S sid = 159 ssid = >5.2 Fast Intersection.</S><S sid = 184 ssid = >This results in a superlinear algorithm for intersection.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  D07-1104.txt | Citing Article:  D11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In practice, the intersection operation will be implemented using merge and binary merge algorithms (Baeza-Yates and Salinger, 2005), following (Lopez, 2007).</S> | Reference Offset:  ['160','166'] | Reference Text:  <S sid = 160 ssid = >For collocations of frequent and rare patterns, we use a fast set intersection method for sorted sets called double binary search (Baeza-Yates, 2004).</S><S sid = 166 ssid = >Detailed analysis and empirical results on an information retrieval task are reported in Baeza-Yates (2004) and Baeza-Yates and Salinger (2005).</S> | Discourse Facet:  NA | Annotator: Automatic


