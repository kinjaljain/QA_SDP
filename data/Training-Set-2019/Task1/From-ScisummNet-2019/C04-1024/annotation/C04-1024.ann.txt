Citance Number: 1 | Reference Article:  C04-1024.txt | Citing Article:  W05-1512.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For parsing, we mapped all unknown words to unknown word symbols, and applied the Viterbi algorithm as implemented in Schmid (2004), exploiting its ability to deal with highly-ambiguous grammars.</S> | Reference Offset:  ['0','6'] | Reference Text:  <S sid = 0 ssid = >Efficient Parsing Of Highly Ambiguous Context-Free Grammars With Bit Vectors</S><S sid = 6 ssid = >The application of standard chart-parsing techniques often fails due to excessive memory and runtime requirements.Treebank grammars are mostly used as probabilis tic grammars and users are usually only interested in the best analysis, the Viterbi parse.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  C04-1024.txt | Citing Article:  P13-1080.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The starred results are statistically significant improvements over the Baseline (at confidence p > 0.05). English side of the bilingual data was parsed using the Charniak parser of Charniak and Johnson (2005), and the German side was parsed using BitPar (Schmid, 2004) without the function and morphological annotations.</S> | Reference Offset:  ['7','18'] | Reference Text:  <S sid = 7 ssid = >To speed up Viterbi parsing, sophisticated search strategies havebeen developed which find the most probable anal ysis without examining the whole set of possible analyses (Charniak et al, 1998; Klein and Manning,2003a).</S><S sid = 18 ssid = >3), improvements of the recogniser by means of bit-vector op erations (Sec.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  C04-1024.txt | Citing Article:  E12-1068.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The key linguistic knowledge sources that we use are morphological analysis and generation of German based on SMOR, a morphological analyzer/generator of German (Schmid et al 2004) and the BitPar parser, which is a state-of-the-art parser of German (Schmid, 2004).</S> | Reference Offset:  ['1','19'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 19 ssid = >4), and the generation of parse forests(Sec.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  C04-1024.txt | Citing Article:  C08-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We use a frequency-based notation because we use out of-the-box software Bitpar (Schmid, 2004) which implements inside-outside estimation Bitpar reads in frequency models and converts them to relative frequency models.</S> | Reference Offset:  ['1','9'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 9 ssid = >The parser described in this paper follows a contrary approach: instead of reducing the number of edges, it minimises the costs of building edges in terms of memory and runtime.The new parser, called BitPar, is based on a bit vector implementation (cf.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  C04-1024.txt | Citing Article:  C08-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The reestimation was carried out using Bitpar (Schmid,2004) for inside-outside estimation.</S> | Reference Offset:  ['24','25'] | Reference Text:  <S sid = 24 ssid = >BitPar uses a modified ver sion of the CKY algorithm allowing also chain rules (rules with a single non-terminal on the right-handside).</S><S sid = 25 ssid = >BitPar expects that the input grammar is al ready epsilon-free and that terminal symbols onlyoccur in unary rules.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  C04-1024.txt | Citing Article:  D07-1058.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For our parsing results we use BitPar, a fast and freely available general PCFG parser (Schmid, 2004).</S> | Reference Offset:  ['1','3'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 3 ssid = >The parser uses bit-vector operations to parallelise the basic parsing operations.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  C04-1024.txt | Citing Article:  W09-0212.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The German V-O pairs were extracted from a syntactic analysis of the HGC carried out using the BitPar parser (Schmid, 2004). We used only V-O pairs because they cons ti tute far more sense-discriminative contexts than, for example, verb-subject pairs, but we plan to examine these and other grammatical relationships in future work.</S> | Reference Offset:  ['6','30'] | Reference Text:  <S sid = 6 ssid = >The application of standard chart-parsing techniques often fails due to excessive memory and runtime requirements.Treebank grammars are mostly used as probabilis tic grammars and users are usually only interested in the best analysis, the Viterbi parse.</S><S sid = 30 ssid = >Compute the frequencies of the pairs of neigh-.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  C04-1024.txt | Citing Article:  W06-2905.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >An existing SCFG parser (Schmid, 2004) was then used, with a simple unknown word heuristic, to generate the Viterbi n-best parses with n= 100, and, after removing the address labels, all equal parses and their probabilities were summed, and the one with highest probability chosen.</S> | Reference Offset:  ['15','20'] | Reference Text:  <S sid = 15 ssid = >Viterbi parses are computed in four steps.</S><S sid = 20 ssid = >5), and Viterbi parses (Sec.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  C04-1024.txt | Citing Article:  D08-1018.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Compact binarization (Schmid, 2004) tries to minimize the size of the binarized grammar.</S> | Reference Offset:  ['11','27'] | Reference Text:  <S sid = 11 ssid = >It buildsa compact ?parse forest?</S><S sid = 27 ssid = >It is a greedy algorithm which tries to minimise the number of binarised rules by combining frequently cooccurring symbols first.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  C04-1024.txt | Citing Article:  D08-1018.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Compact binarization was introduced in Schmid (2004), based on the intuition that a more compact grammar will help achieve a highly efficient CKY parser, though from our experiment it is not always true.</S> | Reference Offset:  ['1','11'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 11 ssid = >It buildsa compact ?parse forest?</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  C04-1024.txt | Citing Article:  D09-1088.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We use a general-purpose CKY parser (Schmid, 2004) to exhaustively parse the sentences, and we strip off all model-specific information prior to evaluation.</S> | Reference Offset:  ['1','19'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 19 ssid = >4), and the generation of parse forests(Sec.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  C04-1024.txt | Citing Article:  P08-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This analyzer setting is similar to that of (Cohen and Smith, 2007), and models using it are denoted nohsp, Parser and Grammar We used BitPar (Schmid, 2004), an efficient general purpose parser,10 together with various tree bank grammars to parse the input sentences and propose compatible morphological segmentation and syntactic analysis. We experimented with increasingly rich grammars read off of the tree bank.</S> | Reference Offset:  ['5','6'] | Reference Text:  <S sid = 5 ssid = >Large context-free grammars extracted from tree banks achieve high coverage and accuracy, but they are difficult to parse with because of their massive ambiguity.</S><S sid = 6 ssid = >The application of standard chart-parsing techniques often fails due to excessive memory and runtime requirements.Treebank grammars are mostly used as probabilis tic grammars and users are usually only interested in the best analysis, the Viterbi parse.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  C04-1024.txt | Citing Article:  N10-1113.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['15','32'] | Reference Text:  <S sid = 15 ssid = >Viterbi parses are computed in four steps.</S><S sid = 32 ssid = >(The rule A</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  C04-1024.txt | Citing Article:  W10-1825.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >BitPar (Schmid, 2006) is a probabilistic context free parser using bit-vector operations (Schmid, 2004).</S> | Reference Offset:  ['1','3'] | Reference Text:  <S sid = 1 ssid = >An efficient bit-vector-based CKY-style parser for context-free parsing is presented.</S><S sid = 3 ssid = >The parser uses bit-vector operations to parallelise the basic parsing operations.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  C04-1024.txt | Citing Article:  D07-1066.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For Experiment II we trained BitPar (Schmid, 2004), a parser for highly ambiguous PCFG grammars, on the two tree banks.</S> | Reference Offset:  ['0','5'] | Reference Text:  <S sid = 0 ssid = >Efficient Parsing Of Highly Ambiguous Context-Free Grammars With Bit Vectors</S><S sid = 5 ssid = >Large context-free grammars extracted from tree banks achieve high coverage and accuracy, but they are difficult to parse with because of their massive ambiguity.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  C04-1024.txt | Citing Article:  W06-2935.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['15','32'] | Reference Text:  <S sid = 15 ssid = >Viterbi parses are computed in four steps.</S><S sid = 32 ssid = >(The rule A</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  C04-1024.txt | Citing Article:  E12-1054.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The remaining sentences are part-of speech tagged and lemmatized using TreeTagger (Schmid, 2004).</S> | Reference Offset:  ['15','32'] | Reference Text:  <S sid = 15 ssid = >Viterbi parses are computed in four steps.</S><S sid = 32 ssid = >(The rule A</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  C04-1024.txt | Citing Article:  W12-2036.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We tokenize and sentence split the data with the default DKProsegmenter, and then use TreeTagger (Schmid, 2004) to POS-tag and chunk the sentences.</S> | Reference Offset:  ['26','32'] | Reference Text:  <S sid = 26 ssid = >Rules with more than 2 non terminals on the right-hand side are split into binaryrules by applying a transformation algorithm pro posed by Andreas Eisele1.</S><S sid = 32 ssid = >(The rule A</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  C04-1024.txt | Citing Article:  P06-1023.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In our experiments, we used the BitParparser (Schmid, 2004) and a PCFG which was extracted from a version of the PENN tree bank that was automatically annotated with features in the style of (Klein and Manning, 2003).</S> | Reference Offset:  ['5','7'] | Reference Text:  <S sid = 5 ssid = >Large context-free grammars extracted from tree banks achieve high coverage and accuracy, but they are difficult to parse with because of their massive ambiguity.</S><S sid = 7 ssid = >To speed up Viterbi parsing, sophisticated search strategies havebeen developed which find the most probable anal ysis without examining the whole set of possible analyses (Charniak et al, 1998; Klein and Manning,2003a).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  C04-1024.txt | Citing Article:  C10-2070.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We parse all German and English articles with BitPar (Schmid, 2004) to extract verb-argument relations.</S> | Reference Offset:  ['11','19'] | Reference Text:  <S sid = 11 ssid = >It buildsa compact ?parse forest?</S><S sid = 19 ssid = >4), and the generation of parse forests(Sec.</S> | Discourse Facet:  NA | Annotator: Automatic


