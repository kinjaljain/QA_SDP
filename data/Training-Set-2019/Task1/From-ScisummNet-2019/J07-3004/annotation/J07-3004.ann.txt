Citance Number: 1 | Reference Article:  J07-3004.txt | Citing Article:  P09-1005.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For the identification and labeling steps, we train a maximum entropy classifier (Berger et al, 1996) over sections 02-21 of a version of the CCGbank corpus (Hockenmaier and Steedman, 2007) that has been augmented by projecting the Propbank semantic annotations (Boxwell and White, 2008).</S> | Reference Offset:  ['128','362'] | Reference Text:  <S sid = 128 ssid = >A complete list of the lexical entries in sections 02–21 of the Treebank which use this coindexation mechanism to project nonlocal dependencies is given in the CCGbank manual (Hockenmaier and Steedman 2005).</S><S sid = 362 ssid = >There are 1,286 lexical category types in sections 02–21.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  J07-3004.txt | Citing Article:  S10-1069.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We used the CCGbank-style dependency output of the parser (Hockenmaier and Steedman,2007), which is a directed graph of head-child relations labelled with the head's lexical category and the argument slot filled by the child.</S> | Reference Offset:  ['89','94'] | Reference Text:  <S sid = 89 ssid = >The category of a complement child is defined by a similar mapping from Treebank labels to categories, for example, {NP} → NP, {PP} → PP.9 The CCG category of the head is a function which takes the category of the complement as argument and returns the category of the parent node.</S><S sid = 94 ssid = >In both cases, the adjunct category depends on the category of the parent, and the category of the head child is copied from the parent: Given a parent category C, the category of an adjunct child is a unary functor C'/C' if the adjunct child is to the left of the head child (a premodifier), or C'\C' if it is to the right Function composition reduces the number of lexical categories of adjuncts. of the head (a postmodifier).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  J07-3004.txt | Citing Article:  P10-1035.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >CCGbank (Hockenmaier and Steedman, 2007) is a corpus of CCG derivations that was semiautomatically converted from the Wall Street Journal section of the Penn treebank.</S> | Reference Offset:  ['0','385'] | Reference Text:  <S sid = 0 ssid = >CCGbank: A Corpus of CCG Derivations and Dependency Structures Extracted from the Penn Treebank</S><S sid = 385 ssid = >They include certain instantiations of type-raising, coordination, or punctuation rules, or rules involved in argument cluster coordinations, pied-piping constructions, or questions, all of which are rare in the Wall Street Journal.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  J07-3004.txt | Citing Article:  P10-1035.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For example, declarative sentences are S [dcl], wh-questions are S [wq] and sentence fragments are S [frg] (Hockenmaier and Steedman, 2007).</S> | Reference Offset:  ['86','197'] | Reference Text:  <S sid = 86 ssid = >The category of the root node is determined by the label of the root of the Treebank tree (e.g., {VP} → S\NP, {S, SINV, SQ} → S).8 If the root node has the category S, it typically carries a feature that distinguishes different types of sentences, such as declaratives (S[dcl]), wh-questions (S[wq]), yes–no questions (S[q]), or fragments (S[frg]).</S><S sid = 197 ssid = >The above example is then re-bracketed: Fragments.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  J07-3004.txt | Citing Article:  P13-2107.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Bos et al (2009) created a CCGbank from an Italian dependency tree bank by converting dependency trees into phrase structure trees and then applying an algorithm similar to Hockenmaier and Steedman (2007).</S> | Reference Offset:  ['141','403'] | Reference Text:  <S sid = 141 ssid = >These trees are then transformed into strictly right-branching binary trees.</S><S sid = 403 ssid = >Furthermore, Bos et al. (2004) and Bos (2005) have demonstrated that the output of CCGbank parsers can be successfully translated into Kamp and Reyle’s (1993) Discourse Representation Theory structures, to support question answering and the textual entailment task (Bos and Markert 2005).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  J07-3004.txt | Citing Article:  P11-1069.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The resource used for building wide-coverage CCG parsers of English is CCGbank (Hockenmaier and Steedman, 2007), a version of the Penn Treebank in which each phrase-structure tree has been transformed into a normal-form CCG derivation.</S> | Reference Offset:  ['33','399'] | Reference Text:  <S sid = 33 ssid = >Earlier versions of the resulting corpus, CCGbank, have already been used to build a number of wide-coverage statistical parsers (Clark, Hockenmaier, and Steedman 2002; Hockenmaier and Steedman 2002; Hockenmaier 2003b, 2003a; Clark and Curran 2004, 2007), which recover both local and long-range dependencies directly and in a single pass.</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  J07-3004.txt | Citing Article:  P11-1069.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Our experiments were performed using CCGBank (Hockenmaier and Steedman, 2007), which was split into three subsets for training (Sections 02-21), development testing (Section 00) and the final test (Section 23).</S> | Reference Offset:  ['345','371'] | Reference Text:  <S sid = 345 ssid = >We report our results on sections 02–21, the standard training set for Penn Treebank parsers, and use section 00 to evaluate coverage of the training set on unseen data.</S><S sid = 371 ssid = >The missing entries that would be required for the remaining 6% of tokens fall into two classes: 1,728, or 3.8%, correspond to completely unknown words that do not appear at all in section 02–21, whereas the other 2.2% of tokens do appear in the training set, but not with the categories required in section 00.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  J07-3004.txt | Citing Article:  P09-2014.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >CCGbank was derived from the PTB, and so it might be considered that converting back to the PTB would be a relatively easy task, by essentially reversing the mapping Hockenmaier and Steedman (2007) used to create CCGbank.</S> | Reference Offset:  ['33','399'] | Reference Text:  <S sid = 33 ssid = >Earlier versions of the resulting corpus, CCGbank, have already been used to build a number of wide-coverage statistical parsers (Clark, Hockenmaier, and Steedman 2002; Hockenmaier and Steedman 2002; Hockenmaier 2003b, 2003a; Clark and Curran 2004, 2007), which recover both local and long-range dependencies directly and in a single pass.</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  J07-3004.txt | Citing Article:  C10-2119.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In our experience, trying to add number and animacy agreement constraints to a grammar induced from the CCGbank (Hockenmaier and Steedman, 2007) turned out to be surprisingly difficult, as hard constraints often ended up breaking examples that were working without such constraints, due to exceptions, sub-regularities and acceptable variation in the data.</S> | Reference Offset:  ['330','351'] | Reference Text:  <S sid = 330 ssid = >This leads to a reduction of ambiguity in the grammar, but is semantically incorrect: Our current grammar does not implement number agreement (which is, however, represented in the POS tags).</S><S sid = 351 ssid = >24 Backward crossed composition is also used by Steedman (1996, 2000) and Baldridge (2002) to account for constraints on preposition stranding in English.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  J07-3004.txt | Citing Article:  P10-1051.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For example, CCGbank (Hockenmaier and Steedman, 2007) contains 1241 distinct supertags (lexical categories) and the most ambiguous word has 126 supertags.</S> | Reference Offset:  ['115','399'] | Reference Text:  <S sid = 115 ssid = >Lexical categories have one lexical head, the word itself—for example, He for the first NP, and is for the (S[dcl]\NP)/(S[b]\NP).</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  J07-3004.txt | Citing Article:  P10-1051.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >CCGbank was created by semiautomatically converting the Penn Treebank to CCG derivations (Hockenmaier and Steedman, 2007).</S> | Reference Offset:  ['0','76'] | Reference Text:  <S sid = 0 ssid = >CCGbank: A Corpus of CCG Derivations and Dependency Structures Extracted from the Penn Treebank</S><S sid = 76 ssid = >In order to obtain CCG derivations from the Penn Treebank, we need to define a mapping from phrase structure trees to CCG derivations, including a treatment of the null elements in the Treebank.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  J07-3004.txt | Citing Article:  W10-4143.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >By automatically transforming the constituent structure trees annotated in PTB to other linguistic formalisms, such as dependency grammar, and combinatory categorical grammar (Hockenmaier and Steedman, 2007), many syntactic parser other than the CFG formalism were also developed.</S> | Reference Offset:  ['27','45'] | Reference Text:  <S sid = 27 ssid = >Such representations are provided by grammar formalisms that are more expressive than simple phrase-structure grammar, like Lexical-Functional Grammar (LFG) (Kaplan and Bresnan 1982), Head-driven Phrase-Structure Grammar (HPSG) (Pollard and Sag 1994), Tree-Adjoining Grammar (TAG) (Joshi and Schabes 1992), Minimalist Program–related Grammars (Stabler 2004), or Combinatory Categorial Grammar (CCG) (Steedman 1996, 2000).</S><S sid = 45 ssid = >Combinatory Categorial Grammar (CCG) was originally developed as a “near-contextfree” theory of natural language grammar, with a very free definition of derivational structure adapted to the analysis of coordination and unbounded dependency without movement or deletion transformations.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  J07-3004.txt | Citing Article:  D12-1075.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We agree; however, our ultimate motivation is to use this work to tackle bootstrapping from very small tag dictionaries or dictionaries obtained from linguists or resources other than a corpus, and for tag sets that are more ambiguous (e.g., super tagging for CCGbank (Hockenmaier and Steedman, 2007)).</S> | Reference Offset:  ['320','321'] | Reference Text:  <S sid = 320 ssid = >For prepositional phrases, we rely on the -CLR (“closely related”) function tag to identify complements, although it is unclear whether the Treebank annotators were able to use this tag consistently.</S><S sid = 321 ssid = >Not all PP arguments seem to have this function tag, and some PPs that have this tag may have been better considered adjuncts: For TAG, Chen, Bangalore, and Vijay-Shanker (2006) show that different heuristics yield grammars that differ significantly in size, coverage, and linguistic adequacy.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  J07-3004.txt | Citing Article:  P12-1052.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This logical form can be expressed in many ways; we will focus on the dependency representation used in CCGbank (Hockenmaier and Steedman, 2007).</S> | Reference Offset:  ['33','399'] | Reference Text:  <S sid = 33 ssid = >Earlier versions of the resulting corpus, CCGbank, have already been used to build a number of wide-coverage statistical parsers (Clark, Hockenmaier, and Steedman 2002; Hockenmaier and Steedman 2002; Hockenmaier 2003b, 2003a; Clark and Curran 2004, 2007), which recover both local and long-range dependencies directly and in a single pass.</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  J07-3004.txt | Citing Article:  P11-1158.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >All experiments were conducted on CCGBank (Hockenmaier and Steedman, 2007), a right-most normal-form CCG version of the Penn Treebank.</S> | Reference Offset:  ['280','399'] | Reference Text:  <S sid = 280 ssid = >During normal category assignment, we use the first conjunct in its original form to obtain the correct categories of all constituents.</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  J07-3004.txt | Citing Article:  W11-1609.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The grammar is automatically extracted from a version of the CCGbank (Hockenmaier and Steedman, 2007) with Propbank (Palmer et al, 2005) roles projected onto it (Boxwell and White, 2008).</S> | Reference Offset:  ['28','323'] | Reference Text:  <S sid = 28 ssid = >However, until very recently, only handwritten grammars, which lack the wide coverage and robustness of Treebank parsers, were available for these formalisms (Butt et al. 1999; XTAG-group 1999; Copestake and Flickinger 2000; OpenCCG1 [White and Baldridge 2003; White 2006]).</S><S sid = 323 ssid = >In a future version of CCGbank, it may be possible to follow Shen and Joshi (2005) in using the semantic roles of the Proposition Bank (Palmer, Gildea, and Kingsbury 2005) to distinguish arguments and adjuncts.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  J07-3004.txt | Citing Article:  D09-1126.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Hockenmaier and Steedman (2007) showed that a CCG corpus could be created by adapting the Penn Treebank (Marcus et al, 1993).</S> | Reference Offset:  ['0','16'] | Reference Text:  <S sid = 0 ssid = >CCGbank: A Corpus of CCG Derivations and Dependency Structures Extracted from the Penn Treebank</S><S sid = 16 ssid = >One of the largest and earliest such efforts is the Penn Treebank (Marcus, Santorini, and Marcinkiewicz 1993; Marcus et al. 1994), which contains a one-million word subcorpus of Wall Street Journal text that has become the de facto standard training and test data for statistical parsers.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  J07-3004.txt | Citing Article:  D11-1106.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We use CCGBank (Hockenmaier and Steedman, 2007) for experimental data.</S> | Reference Offset:  ['33','399'] | Reference Text:  <S sid = 33 ssid = >Earlier versions of the resulting corpus, CCGbank, have already been used to build a number of wide-coverage statistical parsers (Clark, Hockenmaier, and Steedman 2002; Hockenmaier and Steedman 2002; Hockenmaier 2003b, 2003a; Clark and Curran 2004, 2007), which recover both local and long-range dependencies directly and in a single pass.</S><S sid = 399 ssid = >CCGbank has already enabled the creation of several robust and accurate wide-coverage CCG parsers, including Hockenmaier and Steedman (2002), Clark, Hockenmaier, and Steedman (2002), Hockenmaier (2003b), and Clark and Curran (2004, 2007).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  J07-3004.txt | Citing Article:  P12-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A well known work is transforming Penn Treebank into resources for various deep linguistic processing, including LTAG (Xia, 1999), CCG (Hockenmaier and Steedman, 2007), HPSG (Miyao et al, 2004) and LFG (Cahill et al, 2002).</S> | Reference Offset:  ['29','420'] | Reference Text:  <S sid = 29 ssid = >Because treebank annotation for individual formalisms is prohibitively expensive, there have been a number of efforts to extract TAGs, LFGs, and, more recently, HPSGs, from the Penn Treebank (Xia 1999; Chen and Vijay-Shanker 2000; Xia, Palmer, and Joshi 2000; Xia 2001; Cahill et al. 2002; Miyao, Ninomiya, and Tsujii 2004; O’Donovan et al.</S><S sid = 420 ssid = >For the Penn Treebank, our research and the work of others (Xia 1999; Chen and Vijay-Shanker 2004; Chiang 2000; Cahill et al. 2002) have shown that such a correspondence exists in most cases.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  J07-3004.txt | Citing Article:  C10-2051.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >CCGbank (Hockenmaier and Steedman, 2007) extends this grammar with a set of type-changing rules, designed to strike a better balance between sparsity in the category set and ambiguity in the grammar.</S> | Reference Offset:  ['153','157'] | Reference Text:  <S sid = 153 ssid = >We therefore follow the approach of Aone and Wittenburg (1990) and implement these type-changing Type-changing rules reduce the number of lexical category types required for complex adjuncts. operations in the derivational syntax, where these generalizations are captured in a few rules.</S><S sid = 157 ssid = >Some of the most common type-changing rules are the following, for various types of reduced relative modifier: Hockenmaier and Steedman CCGbank In order to obtain the correct predicate–argument structure, the heads of corresponding arguments in the input and output category are unified (as indicated by coindexation).</S> | Discourse Facet:  NA | Annotator: Automatic


