Citance Number: 1 | Reference Article:  C88-2128.txt | Citing Article:  E89-1032.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We relate the algorithm to proposals by Shieber (1988).</S> | Reference Offset:  ['298','301'] | Reference Text:  <S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S><S sid = 301 ssid = >[Shieber, 1985] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  C88-2128.txt | Citing Article:  E89-1032.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Shieber (1988) claims that the problem of logical equivalence reduces to the knowledge representation problem.</S> | Reference Offset:  ['247','252'] | Reference Text:  <S sid = 247 ssid = >Finally, on a more pessimistic note, we turn to a widespread problem in all systems for automatic generation of natural language, which Ap- pelt [1987] has discussed under the rubric "the problem of logical-form equivalence".</S><S sid = 252 ssid = >The problem is complicated further in that, strictly speaking, the class of equivalent logical forms from the standpoint of generation is not really closed under logical equivalence.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  C88-2128.txt | Citing Article:  E89-1032.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Two further problems are the treatment of unary rules and functors with what Shieber (1988) calls vestigial semantics, which we prefer to call identity semantics.</S> | Reference Offset:  ['58','176'] | Reference Text:  <S sid = 58 ssid = >However, several problems immediately present hemselves.</S><S sid = 176 ssid = >asIt holds in general that closed-class lexical items---case-m~rking prepositions, function verbs, etc.~-are uniformly considered initial items for purposes of genera- tion because of their vestigial semantics.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  C88-2128.txt | Citing Article:  E89-1032.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The obvious solution is to use a lemma table or chart (as discussed by Pereira and Warren 1984 and Shieber 1988).</S> | Reference Offset:  ['61','295'] | Reference Text:  <S sid = 61 ssid = >The traditional solution to this problem is to store lemmas in a table, i.e., the well-formed-substring table or chart in tabular parsing algorithms.</S><S sid = 295 ssid = >N. Pereira and Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  C88-2128.txt | Citing Article:  E89-1032.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Shieber (1988) states that to guarantee completeness in using a precomputed entry in the chart, the entry must subsume the formula being generated top-down.</S> | Reference Offset:  ['40','244'] | Reference Text:  <S sid = 40 ssid = >Nonconditional i tems formed by immediate inference from a lexieal entry will be called lexical items.</S><S sid = 244 ssid = >However, there is no guarantee that the other properties of the sentence include those of the goal; only compatibility is guaranteed.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  C88-2128.txt | Citing Article:  W91-0115.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >And Bi-directional Grammar Shieber proposed auniform architecture for sentence parsing and generation based on the Early type deduction mechanism (Shieber,1988).</S> | Reference Offset:  ['292','298'] | Reference Text:  <S sid = 292 ssid = >Parsing as deduction.</S><S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  C88-2128.txt | Citing Article:  E95-1024.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Shieber (1988) gave the first use of Earley's algorithm for generation, but this algorithm does not.</S> | Reference Offset:  ['53','57'] | Reference Text:  <S sid = 53 ssid = >In particular, Pereira and Warren construct a parsing algorithm us- ing a deduction strategy which mimics Earleys algorithm.</S><S sid = 57 ssid = >The exhaustive use of prediction and completion as basic inference rules does provide a complete algorithm for proving lemmas of the sort described.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  C88-2128.txt | Citing Article:  E95-1024.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >As Shieber (1988) noted, the main shortcoming of Earley generation is a lack of goal-directedness that results in a proliferation of edges.</S> | Reference Offset:  ['258','298'] | Reference Text:  <S sid = 258 ssid = >It should be noted that this kind of problem is quite deep.</S><S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  C88-2128.txt | Citing Article:  E91-1050.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In generation, as Shieber (1988) and Appelt (1989) observe, a situation may arise in which the representation supplied as input to the process (perhaps by another program) is not itself directly suitable, but is logically equivalent to one that is. The use of distinct grammars for parsing and generation could provide a solution to this problem, but it raises others connected with management of the resulting system.</S> | Reference Offset:  ['153','202'] | Reference Text:  <S sid = 153 ssid = >A simple solution to this problem is to ignore the string positions in the generation process.</S><S sid = 202 ssid = >Thus, the the generation process is, on the whole, quite goal-directed; the subphrases considered in the generation process are "reasonable".</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  C88-2128.txt | Citing Article:  P01-1028.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >As (Shieber, 1988) showed, the problem with such words is that they can not be selected on the basis of the input semantics.</S> | Reference Offset:  ['201','298'] | Reference Text:  <S sid = 201 ssid = >However, other phrases composed of the same words, such as Knit loves Knit, Sonny is loved, and so forth, are eliminated by the semantics filter.</S><S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  C88-2128.txt | Citing Article:  P01-1028.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In (Shieber, 1988), a chart-based bottom-up generator is presented which is devoid of an indexing scheme: all word edges leave and enter the same vertex and as a result, interactions must be considered explicitly between new edges and all edges currently in the chart.</S> | Reference Offset:  ['161','233'] | Reference Text:  <S sid = 161 ssid = >This technique, a sort of indexing on meaning, replaces the indexing on string position that is more appropriate for parsing than generation.</S><S sid = 233 ssid = >TM Because the formalisms are simpler, the agenda need only keep track of one type of task: addition of a chart item.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  C88-2128.txt | Citing Article:  P96-1027.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Shieber (1988) showed that parsing charts can be also used in generation and raised the question, which we take up again here, of whether they constitute a natural uniform architecture for parsing and generation.</S> | Reference Offset:  ['0','292'] | Reference Text:  <S sid = 0 ssid = >A Uniform Architecture for Parsing and Generation Stuart M. SHIEBER Artificial Intelligence Center SRI International Menlo Park, California, USA* Abst rac t The use of a single grammar for both parsing and generation is an idea with a certain elegance, the desirability of which several researchers have noted.</S><S sid = 292 ssid = >Parsing as deduction.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  C88-2128.txt | Citing Article:  P96-1027.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In this respect, it differs from the proposal of Shieber (1988) which starts with all word edges leaving and entering a single vertex.</S> | Reference Offset:  ['155','298'] | Reference Text:  <S sid = 155 ssid = >Thus we need insert the lexicon only once, each word being inserted at the single position, e.g., [0, sonny ,  0].</S><S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  C88-2128.txt | Citing Article:  C94-1077.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Shieber (1988) has generalized this method so as to adapt to sentence generation as well.</S> | Reference Offset:  ['298','301'] | Reference Text:  <S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S><S sid = 301 ssid = >[Shieber, 1985] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  C88-2128.txt | Citing Article:  P96-1033.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In generation, examples of such extended processing strategies are head corner generation with its semantic linking (Shieber et al, 1990) or bottom-up (Earley) generation with a semantic filter (Shieber, 1988).</S> | Reference Offset:  ['298','301'] | Reference Text:  <S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S><S sid = 301 ssid = >[Shieber, 1985] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  C88-2128.txt | Citing Article:  P96-1033.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The use of such a semantic filter in bottom-up evaluation requires the grammar to obey the semantic monotonicity constraint in order to ensure completeness (Shieber, 1988) (see below).</S> | Reference Offset:  ['166','178'] | Reference Text:  <S sid = 166 ssid = >Semantic monotonicity is, by intention, a property of the particular grammar we have been using.</S><S sid = 178 ssid = >considered (although the lexicon that was used contained them) as they do not pass the semantic filter.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  C88-2128.txt | Citing Article:  P96-1033.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In order to obtain a generator similar to the bottom-up generator as described in Shieber (1988) the compilation process can be modified such that only lexical entries are extended with magic literals.</S> | Reference Offset:  ['39','281'] | Reference Text:  <S sid = 39 ssid = >d14 latter as lexical entries.</S><S sid = 281 ssid = >PHRED: a generator for natural language interfaces.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  C88-2128.txt | Citing Article:  C96-2155.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The first demonstration of using charts for generation appeared in Shieber (1988).</S> | Reference Offset:  ['298','301'] | Reference Text:  <S sid = 298 ssid = >[Shieber, 1983] Stuart M. Shieber.</S><S sid = 301 ssid = >[Shieber, 1985] Stuart M. Shieber.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  C88-2128.txt | Citing Article:  P89-1002.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In particular, unlike an Earley deduction generator (Shieber, 1988), it allows use of semantically non monotonic grammars, yet unlike top down methods, it also permits left-recursion.</S> | Reference Offset:  ['95','210'] | Reference Text:  <S sid = 95 ssid = >Unlike LI~ parsing, 4For formalisms with complex structured nonterminals, the start "symbol" need only be unifiable with the left-haud-side nonterminal.</S><S sid = 210 ssid = >In addition, a generator was built that is complete for semantically monotonic grammars.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  C88-2128.txt | Citing Article:  P89-1002.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In previous work (Shieber, 1988), however, one of us attempted to characterize these differing properties in such a way that a single uniform architecture, appropriately parameterized, might be used for both natural-language processes.</S> | Reference Offset:  ['3','13'] | Reference Text:  <S sid = 3 ssid = >We discuss our current implementation f such an architecture, which is parameterized in such a way that it can be used for either purpose with grammars written in the PATR formal- ism.</S><S sid = 13 ssid = >In particular, parsing and generatioa :an be viewed as two processes engaged in by a single parameterized ;heorem prover for the logical interpretation of the formalism.</S> | Discourse Facet:  NA | Annotator: Automatic


