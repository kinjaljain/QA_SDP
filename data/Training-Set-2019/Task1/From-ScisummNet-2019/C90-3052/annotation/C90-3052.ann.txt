Citance Number: 1 | Reference Article:  C90-3052.txt | Citing Article:  W91-0115.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >As mentioned in (Emele and Zajac, 1990), the proposed approach inevitably leads to the consequence that the data structure becomes slightly complicated.</S> | Reference Offset:  ['20','180'] | Reference Text:  <S sid = 20 ssid = >2 Typed t~ature s t ructures  and unif ication Tlle basic data structure of tile language is a typed featme structure: a feature structure (FS in the fol- lowing) with which a type can be associated.</S><S sid = 180 ssid = >[6] Martin C. Emele: "A Typed Feature Structure Unification-based Approach to Generation" in: Proceedings of the WGNLC of the [ECE 1988, (Japan: Oiso University) 1989.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  C90-3052.txt | Citing Article:  P98-2154.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['95','192'] | Reference Text:  <S sid = 95 ssid = >LEXICAL_CATEGORY : DET V N V PN V V. DET : ALL V EVERY V A V THE.</S><S sid = 192 ssid = >", in: Proceedings of the 27th Annual Meeting of the A CL-89 (Vancouver, Canada) 1989.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  C90-3052.txt | Citing Article:  E95-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Implementations of sorted feature formalisms such as TDL (Krieger and Schifer, 1994), ALE (Carpenter, 1993), CUF (DSrre and Dorna, 1993), TFS (Emele and Zajac, 1990) and others have been used successfully for the development and testing of large grammars and lexicons, but they may be too slow for actual use in applications 180 because they are generally built on top of Prolog or LISP, and can therefore not be as efficient as the built-in unification of Prolog.</S> | Reference Offset:  ['0','48'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars Martin C. Emele, Dhni Zajac Project Polygloss* University of Stuttgart IMS~CL/Ifl~AIS, Keplerstrage 17, D - 7000 Stuttgart 1, Federal Republic of Germany {emele,zajac} @is.informatik.uni-st ut gart.dbp.de Abstract We introduce TFS, a computer formal- ism in the class of logic ibrmaiisms which integrates a powerful type system.</S><S sid = 48 ssid = >3.2 The APPEND type as a relation One can also understand feature types as relations much like those in PROLOG.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  C90-3052.txt | Citing Article:  C92-2121.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A more radical approach however rooted in the traditional model is to fully map the typed unification grammars [Emele and Zajac, 1990 on the SNAP.</S> | Reference Offset:  ['0','191'] | Reference Text:  <S sid = 0 ssid = >Typed Unification Grammars Martin C. Emele, Dhni Zajac Project Polygloss* University of Stuttgart IMS~CL/Ifl~AIS, Keplerstrage 17, D - 7000 Stuttgart 1, Federal Republic of Germany {emele,zajac} @is.informatik.uni-st ut gart.dbp.de Abstract We introduce TFS, a computer formal- ism in the class of logic ibrmaiisms which integrates a powerful type system.</S><S sid = 191 ssid = >[18] R4mi Zajac: "A Transfer Model Using a Typed Feature Structure Rewriting System with In- heritance.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['95','192'] | Reference Text:  <S sid = 95 ssid = >LEXICAL_CATEGORY : DET V N V PN V V. DET : ALL V EVERY V A V THE.</S><S sid = 192 ssid = >", in: Proceedings of the 27th Annual Meeting of the A CL-89 (Vancouver, Canada) 1989.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This gives the possibility to define more general relations, and in particular functions can be defined in a way similar to, for example, (Johnson and Rosner, 1989) and (Emele and Zajac, 1990).</S> | Reference Offset:  ['38','57'] | Reference Text:  <S sid = 38 ssid = >Unification of two types X and Y is defined .</S><S sid = 57 ssid = >This possibility (together with the fact.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  C90-3052.txt | Citing Article:  W97-1510.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In this way the user can create an inheritance hierarchy which is similar but not identical to how inheritance is used in other formalisms uch as TFS (Emele and Zajac, 1990) or ALE (Carpenter, 1992).</S> | Reference Offset:  ['7','163'] | Reference Text:  <S sid = 7 ssid = >Abstraction and modular- ity are needed when the linguist wants to describe a hierarchy of concepts (like a lexical hierarchy or the hierarchy of phrasal categories), and to describe linguistic data at different levels (e.g.</S><S sid = 163 ssid = >6 Conelus ion Ihe main characteristics of the formalism we pre-- s(.nted are (1, type inheritance which provides a clean way of itetining classes and subclasses of ob-.</S> | Discourse Facet:  NA | Annotator: Automatic


