Citance Number: 1 | Reference Article:  N06-1033.txt | Citing Article:  W06-1606.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The decoder uses a binarized representation of the rules, which is obtained via a syncronous binarization procedure (Zhang et al., 2006).</S> | Reference Offset:  ['62','86'] | Reference Text:  <S sid = 62 ssid = >However, not every SCFG can be binarized.</S><S sid = 86 ssid = >We modify this procedure and improve circle in Figure 4), which can be binarized only by analyzing interactions between rules.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  N06-1033.txt | Citing Article:  D10-1063.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For arbitrary SCFGs, this is typically accomplished via the synchronous binarization technique of (Zhang et al, 2006).</S> | Reference Offset:  ['0','7'] | Reference Text:  <S sid = 0 ssid = >Synchronous Binarization For Machine Translation</S><S sid = 7 ssid = >In particular: • We develop a technique called synchronous binarization and devise a fast binarization algorithm such that the resulting rule set allows efficient algorithms for both synchronous parsing and decoding with integrated n-gram language models.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  N06-1033.txt | Citing Article:  D10-1063.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We show that this approach gives us better practical performance than a mature system that binarizes using the technique of (Zhang et al, 2006).</S> | Reference Offset:  ['44','125'] | Reference Text:  <S sid = 44 ssid = >This larger locality is linguistically motivated and leads to a better parameter estimation.</S><S sid = 125 ssid = >Our rule set is obtained by first doing word alignment using GIZA++ on a Chinese-English parallel corpus containing 50 million words in English, then parsing the English sentences using a variant of Collins parser, and finally extracting rules using the graph-theoretic algorithm of Galley et al. (2004).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  N06-1033.txt | Citing Article:  D10-1063.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For SCFG grammars, (Zhang et al, 2006) provide a scope reduction method called synchronous binarization with quantifiable loss.</S> | Reference Offset:  ['7','110'] | Reference Text:  <S sid = 7 ssid = >In particular: • We develop a technique called synchronous binarization and devise a fast binarization algorithm such that the resulting rule set allows efficient algorithms for both synchronous parsing and decoding with integrated n-gram language models.</S><S sid = 110 ssid = >This is because there each shift or reduction takes Without loss of generality, we have discussed how to binarize synchronous productions involving only nonterminals through binarizing the corresponding skeleton permutations.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  N06-1033.txt | Citing Article:  D10-1063.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Their principal objective is to provide a scope reduction method for SCFG that introduces fewer postconditions than (Zhang et al, 2006).</S> | Reference Offset:  ['8','62'] | Reference Text:  <S sid = 8 ssid = >• We examine the effect of this binarization method on end-to-end machine translation quality, compared to a more typical baseline method.</S><S sid = 62 ssid = >However, not every SCFG can be binarized.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  N06-1033.txt | Citing Article:  D10-1063.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >However unlike (Zhang et al, 2006), their method only addresses simple grammars.</S> | Reference Offset:  ['4','87'] | Reference Text:  <S sid = 4 ssid = >Several recent syntax-based models for machine translation (Chiang, 2005; Galley et al., 2004) can be seen as instances of the general framework of synchronous grammars and tree transducers.</S><S sid = 87 ssid = >Below is a simple example: it into a linear-time shift-reduce algorithm that only needs one pass through the sequence.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  N06-1033.txt | Citing Article:  D09-1007.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Binarizing the grammars (Zhang et al, 2006) further increases the size of these sets, due to the introduction of virtual nonterminals.</S> | Reference Offset:  ['21','76'] | Reference Text:  <S sid = 21 ssid = >VPP-VP) virtual nonterminals and corresponding rules virtual rules, whose probabilities are all set to 1.</S><S sid = 76 ssid = >We have reduced the problem of binarizing an SCFG rule into the problem of binarizing its permutation.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  N06-1033.txt | Citing Article:  N09-1026.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Rule size and lexicalization affect parsing complexity whether the grammar is binarized explicitly (Zhang et al, 2006) or implicitly binarized using Early-style intermediate symbols (Zollmann et al, 2006).</S> | Reference Offset:  ['20','62'] | Reference Text:  <S sid = 20 ssid = >We call those intermediate symbols (e.g.</S><S sid = 62 ssid = >However, not every SCFG can be binarized.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  N06-1033.txt | Citing Article:  W07-0405.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Synchronous binarization (Zhang et al, 2006) solves this problem by simultaneously binarizing both source and target-sides of a synchronous rule, making sure of contiguous spans on both sides whenever possible.</S> | Reference Offset:  ['48','76'] | Reference Text:  <S sid = 48 ssid = >Figure 2 suggests that a binarization is good if every virtual nonterminal has contiguous spans on both sides.</S><S sid = 76 ssid = >We have reduced the problem of binarizing an SCFG rule into the problem of binarizing its permutation.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  N06-1033.txt | Citing Article:  W07-0405.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Intuitively speaking, the gaps on the target-side will lead to exponential complexity in decoding with integrated language models (see Section 3), as well as synchronous parsing (Zhang et al, 2006).</S> | Reference Offset:  ['5','32'] | Reference Text:  <S sid = 5 ssid = >In this framework, both alignment (synchronous parsing) and decoding can be thought of as parsing problems, whose complexity is in general exponential in the number of nonterminals on the right hand side of a grammar rule.</S><S sid = 32 ssid = >In the case of m-gram integrated decoding, we have to maintain 2(m − 1) boundary words for each child nonterminal, which leads to a prohibitive overall complexity of O(|w|3+2n(m−1)), which is exponential in rule size (Huang et al., 2005).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  N06-1033.txt | Citing Article:  W07-0405.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This representation, being contiguous on both sides, successfully reduces the decoding complexity to a low polynomial and significantly improved the search quality (Zhang et al, 2006).</S> | Reference Offset:  ['36','143'] | Reference Text:  <S sid = 36 ssid = >As illustrated in Figure 2, VPP-VP has contiguous spans on both source and target sides, so that we can generate a binary-branching SCFG: In this case m-gram integrated decoding can be done in O(|w|3+4(m−1)) time which is much lowerorder polynomial and no longer depends on rule size (Wu, 1996), allowing the search to be much faster and more accurate facing pruning, as is evidenced in the Hiero system of Chiang (2005) where he restricts the hierarchical phrases to be a binary SCFG.</S><S sid = 143 ssid = >Figure 7 demonstrates that decoding accuracy is significantly improved after synchronous binarization.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  N06-1033.txt | Citing Article:  W07-0405.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Although according to Zhang et al (2006), the vast majority (99.7%) of rules in their Chinese-English dataset are binarizable, there do exist some interesting cases that are not (see Figure 2 for a real-data example).</S> | Reference Offset:  ['94','129'] | Reference Text:  <S sid = 94 ssid = >See Algorithm 1 for details and Figure 5 for an example.</S><S sid = 129 ssid = >Overall, 99.7% of the rules are binarizable.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  N06-1033.txt | Citing Article:  D07-1078.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >We used a bottom-up, CKY-style decoder that works with binary xRs rules obtained via a synchronous binarization procedure (Zhang et al, 2006).</S> | Reference Offset:  ['132','137'] | Reference Text:  <S sid = 132 ssid = >We did experiments on our CKY-based decoder with two binarization methods.</S><S sid = 137 ssid = >The decoder now works on the binary translation rules supplied by an external synchronous binarizer.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  N06-1033.txt | Citing Article:  P08-1025.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Most practical non-binary SCFGs can be binarized using the synchronous binarization technique by Zhang et al (2006).</S> | Reference Offset:  ['62','82'] | Reference Text:  <S sid = 62 ssid = >However, not every SCFG can be binarized.</S><S sid = 82 ssid = >7) introduces a non-ambiguous ITG that prefers left-heavy binary trees so that for each permutation there is a unique synchronous derivation (binarization pattern).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  N06-1033.txt | Citing Article:  W07-0404.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Zhang et al (2006) discuss methods for binarizing SCFGs, ignoring the nonbinarizable grammars.</S> | Reference Offset:  ['76','130'] | Reference Text:  <S sid = 76 ssid = >We have reduced the problem of binarizing an SCFG rule into the problem of binarizing its permutation.</S><S sid = 130 ssid = >Even for the 0.3% nonbinarizable rules, human evaluations show that the majority of them are due to alignment errors.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  N06-1033.txt | Citing Article:  D08-1060.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A CYK-style decoder has to rely on binarization to preprocess the grammar as did in (Zhang et al, 2006) to handle multi-nonterminal rules.</S> | Reference Offset:  ['132','135'] | Reference Text:  <S sid = 132 ssid = >We did experiments on our CKY-based decoder with two binarization methods.</S><S sid = 135 ssid = >As shown in Section 1, decoding complexity with this method is exponential in the size of the longest rule and since we postpone all the language model scorings, pruning in this case is also biased. system bleu monolingual binarization 36.25 synchronous binarization 38.44 To move on to synchronous binarization, we first did an experiment using the above baseline system without the 0.3% non-binarizable rules and did not observe any difference in BLEU scores.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  N06-1033.txt | Citing Article:  C10-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Many solutions to the reordering problem have been proposed, e.g. syntax-based models (Chiang, 2005), lexicalized reordering (Och et al, 2004), and tree-to-string methods (Zhang et al, 2006).</S> | Reference Offset:  ['4','83'] | Reference Text:  <S sid = 4 ssid = >Several recent syntax-based models for machine translation (Chiang, 2005; Galley et al., 2004) can be seen as instances of the general framework of synchronous grammars and tree transducers.</S><S sid = 83 ssid = >However, this problem has more efficient solutions.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  N06-1033.txt | Citing Article:  C10-1080.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Compared with its string-based counterparts, tree-based decoding is simpler and faster: there is no need for synchronous binarization (Huang et al, 2009b; Zhang et al, 2006) and tree parsing generally runs in linear time (Huang et al, 2006).</S> | Reference Offset:  ['4','32'] | Reference Text:  <S sid = 4 ssid = >Several recent syntax-based models for machine translation (Chiang, 2005; Galley et al., 2004) can be seen as instances of the general framework of synchronous grammars and tree transducers.</S><S sid = 32 ssid = >In the case of m-gram integrated decoding, we have to maintain 2(m − 1) boundary words for each child nonterminal, which leads to a prohibitive overall complexity of O(|w|3+2n(m−1)), which is exponential in rule size (Huang et al., 2005).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  N06-1033.txt | Citing Article:  C10-1080.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >As tree-to-string rules usually have multiple non-terminals that make decoding complexity generally exponential, synchronous binarization (Huang et al, 2009b; Zhang et al, 2006) is a key technique for applying the CKY algorithm to parsing with tree-to-string rules.</S> | Reference Offset:  ['40','112'] | Reference Text:  <S sid = 40 ssid = >Suppose we have the following tree-to-string rules, following Galley et al. (2004): where the reorderings of nonterminals are denoted by variables xi.</S><S sid = 112 ssid = >First, we are dealing with tree-to-string transducer rules.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  N06-1033.txt | Citing Article:  P10-1034.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In our string-to-tree model, for efficient decoding with integrated n-gram LM, we follow (Zhang et al, 2006) and inversely binarize all translation rules into Chomsky Normal Forms that contain at most two variables and can be incrementally scored by LM.</S> | Reference Offset:  ['7','40'] | Reference Text:  <S sid = 7 ssid = >In particular: • We develop a technique called synchronous binarization and devise a fast binarization algorithm such that the resulting rule set allows efficient algorithms for both synchronous parsing and decoding with integrated n-gram language models.</S><S sid = 40 ssid = >Suppose we have the following tree-to-string rules, following Galley et al. (2004): where the reorderings of nonterminals are denoted by variables xi.</S> | Discourse Facet:  NA | Annotator: Automatic


