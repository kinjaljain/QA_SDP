Citance Number: 1 | Reference Article:  P02-1034.txt | Citing Article:  P02-1062.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >(Collins and Duffy 2002) describe the voted perceptron applied to the named-entity data in this paper, but using kernel-based features rather than the explicit features described in this paper.</S> | Reference Offset:  ['19','21'] | Reference Text:  <S sid = 19 ssid = >This result is derived using a new kernel, for tagged sequences, described in this paper.</S><S sid = 21 ssid = >features.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  P02-1034.txt | Citing Article:  P13-1014.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The vector is trained using the perceptron algorithm in combination with the averaging method to avoid over fitting; see Freund and Schapire (1999) and Collins and Duffy (2002) for details.</S> | Reference Offset:  ['4','5'] | Reference Text:  <S sid = 4 ssid = >The perceptron algorithm is one of the oldest algorithms in machine learning, going back to (Rosen blatt 1958).</S><S sid = 5 ssid = >It is an incredibly simple algorithm toimplement, and yet it has been shown to be com petitive with more recent learning methods such as support vector machines ? see (Freund & Schapire 1999) for its application to image classification, for example.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  P02-1034.txt | Citing Article:  D11-1096.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This is essentially the syntactic tree kernel (STK) proposed in (Collins and Duffy, 2002) in which syntactic fragments from constituency trees can be matched even if they only differ in the leaf nodes (i.e. they have different surface forms).</S> | Reference Offset:  ['2','10'] | Reference Text:  <S sid = 2 ssid = >We show how the algorithms can be efficientlyapplied to exponential sized representations of parse trees, such as the ?all sub trees?</S><S sid = 10 ssid = >?kernel?</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  P02-1034.txt | Citing Article:  D11-1096.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['11','24'] | Reference Text:  <S sid = 11 ssid = >trick ((Cristianini and Shawe-Taylor 2000) discuss kernel methods at length).</S><S sid = 24 ssid = >The candi dates might be enumerated by a number of methods.The experiments in this paper use the top</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  P02-1034.txt | Citing Article:  W10-2910.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Instead, the method employed by many rerankers following Collins and Duffy (2002) directly learn a scoring function that is trained to maximize performance on the reranking task.</S> | Reference Offset:  ['15','16'] | Reference Text:  <S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S><S sid = 16 ssid = >In this paper we show that the method scales to far more complex domains.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  P02-1034.txt | Citing Article:  W05-0407.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A viable alternative has been proposed in (Collins and Duffy, 2002), where convolution kernels were used to implicitly define a tree substructure space.</S> | Reference Offset:  ['6','14'] | Reference Text:  <S sid = 6 ssid = >This paper describes how the perceptron andvoted perceptron algorithms can be used for pars ing and tagging problems.</S><S sid = 14 ssid = >The kernels we describe are related to the kernels over discrete structures in (Haus sler 1999; Lodhi et al 2001).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  P02-1034.txt | Citing Article:  W05-0407.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Thepastc uses the tree kernel function defined in (Collins and Duffy, 2002).</S> | Reference Offset:  ['10','15'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  P02-1034.txt | Citing Article:  W05-0407.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The tree kernel used in this article was proposed in (Collins and Duffy, 2002) for syntactic parsing reranking.</S> | Reference Offset:  ['10','15'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  P02-1034.txt | Citing Article:  P08-1091.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Tree kernels evaluate the similarity between two trees in terms of their overlap, generally measured as the number of common substructures (Collins and Duffy, 2002).</S> | Reference Offset:  ['2','14'] | Reference Text:  <S sid = 2 ssid = >We show how the algorithms can be efficientlyapplied to exponential sized representations of parse trees, such as the ?all sub trees?</S><S sid = 14 ssid = >The kernels we describe are related to the kernels over discrete structures in (Haus sler 1999; Lodhi et al 2001).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  P02-1034.txt | Citing Article:  P08-1091.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >delta can be efficiently computed with the algorithm proposed in (Collins and Duffy, 2002).</S> | Reference Offset:  ['7','12'] | Reference Text:  <S sid = 7 ssid = >Crucially, the algorithmscan be efficiently applied to exponential sized repre sentations of parse trees, such as the ?all subtrees?</S><S sid = 12 ssid = >We describe how the inner product between feature vectors in these representations can be calculated efficiently using dynamic programming algorithms.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  P02-1034.txt | Citing Article:  P04-1013.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Collins (2000) and Collins and Duffy (2002) also succeed in finding algorithms for training discriminative models which balance tractability with effectiveness, showing improvements over a generative model.</S> | Reference Offset:  ['13','15'] | Reference Text:  <S sid = 13 ssid = >This leads topolynomial time2 algorithms for training and applying the perceptron.</S><S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  P02-1034.txt | Citing Article:  P04-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Given the semantic objects defined in the previous section, we design a convolution kernel in a way similar to the parse-tree kernel proposed in (Collins and Duffy, 2002).</S> | Reference Offset:  ['10','15'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  P02-1034.txt | Citing Article:  P04-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['11','24'] | Reference Text:  <S sid = 11 ssid = >trick ((Cristianini and Shawe-Taylor 2000) discuss kernel methods at length).</S><S sid = 24 ssid = >The candi dates might be enumerated by a number of methods.The experiments in this paper use the top</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  P02-1034.txt | Citing Article:  P04-1043.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >It is worth noting that even if the above equations define a kernel function similar to the one proposed in (Collins and Duffy, 2002), the substructures on which it operates are different from the parse-tree kernel.</S> | Reference Offset:  ['10','19'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 19 ssid = >This result is derived using a new kernel, for tagged sequences, described in this paper.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  P02-1034.txt | Citing Article:  W08-2004.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For this purpose, kernel methods, and in particular tree kernels allow for representing trees in terms of all possible subtrees (Collins and Duffy, 2002).</S> | Reference Offset:  ['7','10'] | Reference Text:  <S sid = 7 ssid = >Crucially, the algorithmscan be efficiently applied to exponential sized repre sentations of parse trees, such as the ?all subtrees?</S><S sid = 10 ssid = >?kernel?</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  P02-1034.txt | Citing Article:  W08-2004.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In contrast, tree kernels (Collins and Duffy, 2002) can be used to efficiently generate the huge space of tree fragments but, to generate the space of pairs of tree fragments, a new kernel function has to be defined.</S> | Reference Offset:  ['10','20'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 20 ssid = >Both results rely on a new approach that incorporates the log-probability from a baseline model, in addition to the ?all-fragments?</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  P02-1034.txt | Citing Article:  W08-2004.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = ></S> | Reference Offset:  ['11','24'] | Reference Text:  <S sid = 11 ssid = >trick ((Cristianini and Shawe-Taylor 2000) discuss kernel methods at length).</S><S sid = 24 ssid = >The candi dates might be enumerated by a number of methods.The experiments in this paper use the top</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  P02-1034.txt | Citing Article:  E09-1066.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In this perspective, String Kernel (SK) proposed in (Shawe Taylor and Cristianini, 2004) and the Syntactic Tree Kernel (STK) (Collins and Duffy, 2002) allow for modeling structured data in high dimensional spaces.</S> | Reference Offset:  ['10','11'] | Reference Text:  <S sid = 10 ssid = >?kernel?</S><S sid = 11 ssid = >trick ((Cristianini and Shawe-Taylor 2000) discuss kernel methods at length).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  P02-1034.txt | Citing Article:  E09-1066.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >delta function counts the number of subtrees rooted in n1 and n2 and can be evaluated as follows (Collins and Duffy, 2002).</S> | Reference Offset:  ['7','24'] | Reference Text:  <S sid = 7 ssid = >Crucially, the algorithmscan be efficiently applied to exponential sized repre sentations of parse trees, such as the ?all subtrees?</S><S sid = 24 ssid = >The candi dates might be enumerated by a number of methods.The experiments in this paper use the top</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  P02-1034.txt | Citing Article:  W12-1622.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >the reranker learns directly from a scoring function that is trained to maximize the performance of the reranking task (Collins and Duffy, 2002).</S> | Reference Offset:  ['15','22'] | Reference Text:  <S sid = 15 ssid = >A previous paper (Collins and Duffy 2001) showed improvements over a PCFG in parsing the ATIS task.</S><S sid = 22 ssid = >Trees and Tagged SequencesThis paper focuses on the task of choosing the cor rect parse or tag sequence for a sentence from agroup of ?candidates?</S> | Discourse Facet:  NA | Annotator: Automatic


