Citance Number: 1 | Reference Article:  J95-2002.txt | Citing Article:  P96-1008.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This adaptation, related to that of (Stolcke 1995), involves reformulating the Earley algorithm to work with probabilistic recursive transition networks rather than with deterministic production rules.</S> | Reference Offset:  ['140','436'] | Reference Text:  <S sid = 140 ssid = >Notice that the scanning and completion steps are deterministic once the rules have been chosen.</S><S sid = 436 ssid = >Another approach to avoiding the CNF constraint is a formulation based on probabilistic Recursive Transition Networks (RTNs) (Kupiec 1992).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 2 | Reference Article:  J95-2002.txt | Citing Article:  W12-1706.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >For the Berkeley grammar, we use a probabilistic Earley parser modified by Levy to calculate exact prefix probabilities using the algorithm of Stolcke (1995).</S> | Reference Offset:  ['223','425'] | Reference Text:  <S sid = 223 ssid = >The modified completion loop in the probabilistic Earley parser can now use the Ru matrix to collapse all unit completions into a single step.</S><S sid = 425 ssid = >The parser now uses the method described here to provide exact SCFG prefix and next-word probabilities to a tightly coupled speech decoder (Jurafsky, Wooters, Segal, Stolcke, Fosler, Tajchman, and Morgan 1995).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 3 | Reference Article:  J95-2002.txt | Citing Article:  D11-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Efficient algorithms for its solution have been proposed by Jelinek and Lafferty (1991) and Stolcke (1995).</S> | Reference Offset:  ['13','282'] | Reference Text:  <S sid = 13 ssid = >1991).</S><S sid = 282 ssid = >The total time is therefore 0(13) for an input of length 1, which is also the complexity of the standard Inside/Outside (Baker 1979) and LRI (Jelinek and Lafferty 1991) algorithms.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 4 | Reference Article:  J95-2002.txt | Citing Article:  D11-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Nonetheless, the partition function can still be approximated to any degree of precision by iterative computation of the relation in (4), as done for instance by Stolcke (1995) and by Abney et al (1999).</S> | Reference Offset:  ['12','224'] | Reference Text:  <S sid = 12 ssid = >In their probabilistic version, which defines a language as a probability distribution over strings, they have been used in a variety of applications: for the selection of parses for ambiguous inputs (Fujisaki et al. 1991); to guide the rule choice efficiently during parsing (Jones and Eisner 1992); to compute island probabilities for non-linear parsing (Corazza et al.</S><S sid = 224 ssid = >Note that we still have to do iterative completion on non-unit productions.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 5 | Reference Article:  J95-2002.txt | Citing Article:  D11-1112.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Note that the algorithms for the computation of prefix probabilities by Jelinek and Lafferty (1991) and Stolcke (1995) do allow incrementality, which contributes to their practical usefulness for speech recognition.</S> | Reference Offset:  ['13','282'] | Reference Text:  <S sid = 13 ssid = >1991).</S><S sid = 282 ssid = >The total time is therefore 0(13) for an input of length 1, which is also the complexity of the standard Inside/Outside (Baker 1979) and LRI (Jelinek and Lafferty 1991) algorithms.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 6 | Reference Article:  J95-2002.txt | Citing Article:  W01-0713.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Two of these, P(X) and S(X) are just the prefix and suffix probability distributions for the symbol(Stolcke, 1995): the probabilities that the string derived from begins (or ends) with a particular tag.</S> | Reference Offset:  ['109','321'] | Reference Text:  <S sid = 109 ssid = >Definition 1 The following quantities are defined relative to a SCFG G, a nonterminal X, and a string x over the alphabet E of G. where i, v2,. vk are strings of terminals and nonterminals, X -4 A is a production of G, and 1)2 is derived from vi by replacing one occurrence of X with A. b) The string probability P(X 4 x) (of x given X) is the sum of the probabilities of all left-most derivations X • • •= x producing x from X.' c) The sentence probability P(S x) (of x given G) is the string probability given the start symbol S of G. By definition, this is also the probability P(x I G) assigned to x by the grammar G. d) The prefix probability P(S 4L x) (of x given G) is the sum of the probabilities of all sentence strings having x as a prefix, In the following, we assume that the probabilities in a SCFG are proper and consistent as defined in Booth and Thompson (1973), and that the grammar contains no useless nonterminals (ones that can never appear in a derivation).</S><S sid = 321 ssid = >Intuitively, f3 (kX —> A.,u) is the probability that an Earley parser operating as a string generator yields the prefix xo...k-1 and the suffix while passing through state kX A././ at position i (which is independent of A).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 7 | Reference Article:  J95-2002.txt | Citing Article:  E09-1054.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Stolcke (1995) summarizes extensively their approach to utilize probabilistic Earley parsing.</S> | Reference Offset:  ['237','386'] | Reference Text:  <S sid = 237 ssid = >This section summarizes the necessary modifications to process null productions correctly, using the previous description as a baseline.</S><S sid = 386 ssid = >This approach is a subject of ongoing work, in the context of tight-coupling SCFGs with speech decoders (Jurafsky, Wooters, Segal, Stolcke, Fosler, Tajchman, and Morgan 1995).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 8 | Reference Article:  J95-2002.txt | Citing Article:  P06-1115.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The above task has some resemblance to probabilistic context-free grammar (PCFG) parsing for which efficient algorithms are available (Stolcke, 1995), but we note that our task of finding the most probable semantic derivation differs from PCFG parsing in two important ways.</S> | Reference Offset:  ['0','277'] | Reference Text:  <S sid = 0 ssid = >An Efficient Probabilistic Context-Free Parsing Algorithm That Computes Prefix Probabilities</S><S sid = 277 ssid = >Andreas Stolcke Efficient Probabilistic Context-Free Parsing The crucial step in this procedure is the addition of variants of the original productions that simulate the null productions by deleting the corresponding nonterminals from the RHS.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 9 | Reference Article:  J95-2002.txt | Citing Article:  P06-1053.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Therefore, we use an Earley-style probabilistic parser, which outputs Viterbi parses (Stolcke, 1995).</S> | Reference Offset:  ['97','301'] | Reference Text:  <S sid = 97 ssid = >We will illustrate this in Section 5 when discussing Viterbi parses.</S><S sid = 301 ssid = >The following modifications to the probabilistic Earley parser implement the forward phase of the Viterbi computation.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 10 | Reference Article:  J95-2002.txt | Citing Article:  P06-1053.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A third approach is to calculate the forward probability (Stolcke, 1995) of the sentence using a PCFG.</S> | Reference Offset:  ['296','386'] | Reference Text:  <S sid = 296 ssid = >Precisely the same approach can be used in the Earley parser, using the fact that each derivation corresponds to a path.</S><S sid = 386 ssid = >This approach is a subject of ongoing work, in the context of tight-coupling SCFGs with speech decoders (Jurafsky, Wooters, Segal, Stolcke, Fosler, Tajchman, and Morgan 1995).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 11 | Reference Article:  J95-2002.txt | Citing Article:  H05-1036.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >The agenda algorithm does this by iterative approximation (propagating updates around any cycles in the proof graph until numerical convergence), essentially as suggested by Stolcke (1995) for the case of Earley's algorithm.</S> | Reference Offset:  ['224','247'] | Reference Text:  <S sid = 224 ssid = >Note that we still have to do iterative completion on non-unit productions.</S><S sid = 247 ssid = >The resulting nonlinear system can be solved by iterative approximation.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 12 | Reference Article:  J95-2002.txt | Citing Article:  H05-1036.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >In some special cases only a linear solver is needed: e.g., for unary rule cycles (Stolcke, 1995).</S> | Reference Offset:  ['276','495'] | Reference Text:  <S sid = 276 ssid = >The main difference is the updating of rule probabilities, for which the &expansion probabilities are again needed.</S><S sid = 495 ssid = >There are cases, however, when that cost should be minimized, e.g., when rule probabilities are iteratively reestimated.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 13 | Reference Article:  J95-2002.txt | Citing Article:  D09-1037.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Monolingual parsing with unary productions is fairly straightforward (Stolcke,1995), however in the transductive setting these rules can licence infinite insertions in the target string.</S> | Reference Offset:  ['159','202'] | Reference Text:  <S sid = 159 ssid = >Forward and inner probabilities not only subsume the prefix and string probabilities, they are also straightforward to compute during a run of Earley's algorithm.</S><S sid = 202 ssid = >For Z = Y this covers the case of a single step of prediction; R(Y ZL Y) > 1 always, since RL is defined as a reflexive closure. may imply an infinite summation, and could lead to an infinite loop if computed naively.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 14 | Reference Article:  J95-2002.txt | Citing Article:  N06-1056.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >An Earley chart is used for keeping track of all derivations that are consistent with the input (Stolcke, 1995).</S> | Reference Offset:  ['57','156'] | Reference Text:  <S sid = 57 ssid = >The parsing functionality arises because the generator keeps track of all possible derivations that are consistent with the input string up to a certain point.</S><S sid = 156 ssid = >The restriction in (a) that X be preceded by a possible prefix is necessary, since the Earley parser at position i will only pursue derivations that are consistent with the input up to position i.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 15 | Reference Article:  J95-2002.txt | Citing Article:  P11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This problem has been studied by Jelinek and Lafferty (1991) and by Stolcke (1995) .</S> | Reference Offset:  ['13','21'] | Reference Text:  <S sid = 13 ssid = >1991).</S><S sid = 21 ssid = >While the Jelinek and Lafferty (1991) solution to problem (3) is not a direct extension of CYK parsing, the authors nevertheless present their algorithm in terms of its similarities to the computation of inside probabilities.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 16 | Reference Article:  J95-2002.txt | Citing Article:  P11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >Our solution to the problem of computing prefix probabilities is formulated in quite different terms from the solutions by Jelinek and Lafferty (1991) and by Stolcke (1995) for probabilistic context-free grammars.</S> | Reference Offset:  ['0','21'] | Reference Text:  <S sid = 0 ssid = >An Efficient Probabilistic Context-Free Parsing Algorithm That Computes Prefix Probabilities</S><S sid = 21 ssid = >While the Jelinek and Lafferty (1991) solution to problem (3) is not a direct extension of CYK parsing, the authors nevertheless present their algorithm in terms of its similarities to the computation of inside probabilities.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 17 | Reference Article:  J95-2002.txt | Citing Article:  P11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >This contrasts with the techniques proposed by Jelinek and Lafferty (1991) and by Stolcke (1995), which are extensions of parsing algorithms for probabilistic context-free grammars, and require considerably more involved proofs of correctness.</S> | Reference Offset:  ['0','193'] | Reference Text:  <S sid = 0 ssid = >An Efficient Probabilistic Context-Free Parsing Algorithm That Computes Prefix Probabilities</S><S sid = 193 ssid = >For this purpose we need a probabilistic version of the well-known parsing concept of a left corner, which is also at the heart of the prefix probability algorithm of Jelinek and Lafferty (1991).</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 18 | Reference Article:  J95-2002.txt | Citing Article:  P11-1047.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >An additional complication with our construction is that finding any of the values in (3) may involve solving a system of non-linear equations, similarly to the case of probabilistic context-free grammars; see again Abney et al (1999), and Stolcke (1995).</S> | Reference Offset:  ['12','244'] | Reference Text:  <S sid = 12 ssid = >In their probabilistic version, which defines a language as a probability distribution over strings, they have been used in a variety of applications: for the selection of parses for ambiguous inputs (Fujisaki et al. 1991); to guide the rule choice efficiently during parsing (Jones and Eisner 1992); to compute island probabilities for non-linear parsing (Corazza et al.</S><S sid = 244 ssid = >Computation of P(X E) for all X can be cast as a system of non-linear equations, as follows.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 19 | Reference Article:  J95-2002.txt | Citing Article:  P04-1069.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >These quantities can be computed to any degree of precision, as discussed for instance in (Booth and Thompson, 1973) and (Stolcke, 1995).</S> | Reference Offset:  ['450','454'] | Reference Text:  <S sid = 450 ssid = >The terminology used here is taken from Booth and Thompson (1973).</S><S sid = 454 ssid = >Booth and Thompson (1973) show that the grammar is consistent if and only if the probability that stochastic rewriting of the start symbol S leaves nonterminals remaining after n steps, goes to 0 as n oo.</S> | Discourse Facet:  NA | Annotator: Automatic


Citance Number: 20 | Reference Article:  J95-2002.txt | Citing Article:  P10-1120.txt | Citation Marker Offset:  NA | Citation Marker: NA | Citation Offset: NA | Citation Text:  <S sid =  ssid = >A probabilistic Earley parser can retrieve all possible derivations at (Stolcke, 1995).</S> | Reference Offset:  ['156','392'] | Reference Text:  <S sid = 156 ssid = >The restriction in (a) that X be preceded by a possible prefix is necessary, since the Earley parser at position i will only pursue derivations that are consistent with the input up to position i.</S><S sid = 392 ssid = >An Earley parser constructs sets of possible items on the fly, by following all possible partial derivations.</S> | Discourse Facet:  NA | Annotator: Automatic


